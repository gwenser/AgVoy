[2019-11-19 10:18:12] php.DEBUG: Warning: fsockopen(): unable to connect to 127.0.0.1:8000 (Connection refused) {"exception":"[object] (Symfony\\Component\\Debug\\Exception\\SilencedErrorContext: {\"severity\":2,\"file\":\"/home/serandour/Couette_et_café_final/AgVoy/vendor/symfony/web-server-bundle/WebServerConfig.php\",\"line\":141,\"trace\":[{\"file\":\"/home/serandour/Couette_et_café_final/AgVoy/vendor/symfony/web-server-bundle/WebServerConfig.php\",\"line\":54,\"function\":\"findBestPort\",\"class\":\"Symfony\\\\Bundle\\\\WebServerBundle\\\\WebServerConfig\",\"type\":\"->\"}],\"count\":1})"} []
[2019-11-19 10:18:23] request.ERROR: Uncaught PHP Exception Symfony\Component\HttpKernel\Exception\NotFoundHttpException: "No route found for "GET /"" at /home/serandour/Couette_et_café_final/AgVoy/vendor/symfony/http-kernel/EventListener/RouterListener.php line 138 {"exception":"[object] (Symfony\\Component\\HttpKernel\\Exception\\NotFoundHttpException(code: 0): No route found for \"GET /\" at /home/serandour/Couette_et_café_final/AgVoy/vendor/symfony/http-kernel/EventListener/RouterListener.php:138, Symfony\\Component\\Routing\\Exception\\NoConfigurationException(code: 0):  at /home/serandour/Couette_et_café_final/AgVoy/vendor/symfony/routing/Matcher/Dumper/CompiledUrlMatcherTrait.php:182)"} []
[2019-11-19 10:18:28] request.INFO: Matched route "region_show". {"route":"region_show","route_parameters":{"_controller":"Symfony\\Bundle\\FrameworkBundle\\Controller\\RedirectController::urlRedirectAction","path":"/backoffice/region/list","permanent":true,"scheme":null,"httpPort":8000,"httpsPort":443,"_route":"region_show","id":"list"},"request_uri":"http://127.0.0.1:8000/backoffice/region/list/","method":"GET"} []
[2019-11-19 10:18:28] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2019-11-19 10:18:28] request.INFO: Matched route "region_show". {"route":"region_show","route_parameters":{"_route":"region_show","_controller":"App\\Controller\\BackofficeRegionController::show","id":"list"},"request_uri":"http://127.0.0.1:8000/backoffice/region/list","method":"GET"} []
[2019-11-19 10:18:28] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2019-11-19 10:18:29] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.presentation AS presentation_3, t0.country AS country_4 FROM region t0 WHERE t0.id = ? ["list"] []
[2019-11-19 10:18:29] request.ERROR: Uncaught PHP Exception Symfony\Component\HttpKernel\Exception\NotFoundHttpException: "App\Entity\Region object not found by the @ParamConverter annotation." at /home/serandour/Couette_et_café_final/AgVoy/vendor/sensio/framework-extra-bundle/src/Request/ParamConverter/DoctrineParamConverter.php line 107 {"exception":"[object] (Symfony\\Component\\HttpKernel\\Exception\\NotFoundHttpException(code: 0): App\\Entity\\Region object not found by the @ParamConverter annotation. at /home/serandour/Couette_et_café_final/AgVoy/vendor/sensio/framework-extra-bundle/src/Request/ParamConverter/DoctrineParamConverter.php:107)"} []
[2019-11-19 10:18:33] request.INFO: Matched route "region_index". {"route":"region_index","route_parameters":{"_route":"region_index","_controller":"App\\Controller\\BackofficeRegionController::index"},"request_uri":"http://127.0.0.1:8000/backoffice/region/","method":"GET"} []
[2019-11-19 10:18:33] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2019-11-19 10:18:33] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.presentation AS presentation_3, t0.country AS country_4 FROM region t0 [] []
[2019-11-19 10:18:57] request.INFO: Matched route "region_new". {"route":"region_new","route_parameters":{"_route":"region_new","_controller":"App\\Controller\\BackofficeRegionController::new"},"request_uri":"http://127.0.0.1:8000/backoffice/region/new","method":"GET"} []
[2019-11-19 10:18:57] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2019-11-19 10:18:58] doctrine.DEBUG: SELECT r0_.id AS id_0, r0_.summary AS summary_1, r0_.description AS description_2, r0_.capacity AS capacity_3, r0_.superficy AS superficy_4, r0_.price AS price_5, r0_.address AS address_6, r0_.owner_id AS owner_id_7 FROM room r0_ [] []
[2019-11-19 10:20:08] request.INFO: Matched route "region_new". {"route":"region_new","route_parameters":{"_route":"region_new","_controller":"App\\Controller\\BackofficeRegionController::new"},"request_uri":"http://127.0.0.1:8000/backoffice/region/new","method":"POST"} []
[2019-11-19 10:20:08] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2019-11-19 10:20:08] doctrine.DEBUG: "START TRANSACTION" [] []
[2019-11-19 10:20:08] doctrine.DEBUG: INSERT INTO region (name, presentation, country) VALUES (?, ?, ?) {"1":"Ile de France","2":"La région française capitale","3":"FR"} []
[2019-11-19 10:20:08] doctrine.DEBUG: "COMMIT" [] []
[2019-11-19 10:20:08] request.INFO: Matched route "region_index". {"route":"region_index","route_parameters":{"_route":"region_index","_controller":"App\\Controller\\BackofficeRegionController::index"},"request_uri":"http://127.0.0.1:8000/backoffice/region/","method":"GET"} []
[2019-11-19 10:20:08] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2019-11-19 10:20:08] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.presentation AS presentation_3, t0.country AS country_4 FROM region t0 [] []
[2019-11-19 10:20:10] request.INFO: Matched route "region_show". {"route":"region_show","route_parameters":{"_route":"region_show","_controller":"App\\Controller\\BackofficeRegionController::show","id":"1"},"request_uri":"http://127.0.0.1:8000/backoffice/region/1","method":"GET"} []
[2019-11-19 10:20:10] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2019-11-19 10:20:10] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.presentation AS presentation_3, t0.country AS country_4 FROM region t0 WHERE t0.id = ? ["1"] []
[2019-11-19 10:20:15] request.INFO: Matched route "region_index". {"route":"region_index","route_parameters":{"_route":"region_index","_controller":"App\\Controller\\BackofficeRegionController::index"},"request_uri":"http://127.0.0.1:8000/backoffice/region/","method":"GET"} []
[2019-11-19 10:20:15] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2019-11-19 10:20:15] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.presentation AS presentation_3, t0.country AS country_4 FROM region t0 [] []
[2019-11-19 10:26:52] request.INFO: Matched route "owner_show". {"route":"owner_show","route_parameters":{"_controller":"Symfony\\Bundle\\FrameworkBundle\\Controller\\RedirectController::urlRedirectAction","path":"/owner/room","permanent":true,"scheme":null,"httpPort":8000,"httpsPort":443,"_route":"owner_show","id":"room"},"request_uri":"http://127.0.0.1:8000/owner/room/","method":"GET"} []
[2019-11-19 10:26:52] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2019-11-19 10:26:52] request.INFO: Matched route "owner_show". {"route":"owner_show","route_parameters":{"_route":"owner_show","_controller":"App\\Controller\\OwnerController::show","id":"room"},"request_uri":"http://127.0.0.1:8000/owner/room","method":"GET"} []
[2019-11-19 10:26:52] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2019-11-19 10:26:52] doctrine.DEBUG: SELECT t0.id AS id_1, t0.firstname AS firstname_2, t0.family_name AS family_name_3, t0.address AS address_4, t0.country AS country_5 FROM owner t0 WHERE t0.id = ? ["room"] []
[2019-11-19 10:26:52] request.ERROR: Uncaught PHP Exception Symfony\Component\HttpKernel\Exception\NotFoundHttpException: "App\Entity\Owner object not found by the @ParamConverter annotation." at /home/serandour/Couette_et_café_final/AgVoy/vendor/sensio/framework-extra-bundle/src/Request/ParamConverter/DoctrineParamConverter.php line 107 {"exception":"[object] (Symfony\\Component\\HttpKernel\\Exception\\NotFoundHttpException(code: 0): App\\Entity\\Owner object not found by the @ParamConverter annotation. at /home/serandour/Couette_et_café_final/AgVoy/vendor/sensio/framework-extra-bundle/src/Request/ParamConverter/DoctrineParamConverter.php:107)"} []
[2019-11-19 10:28:01] request.INFO: Matched route "room_index". {"route":"room_index","route_parameters":{"_controller":"Symfony\\Bundle\\FrameworkBundle\\Controller\\RedirectController::urlRedirectAction","path":"/_owner/room/","permanent":true,"scheme":null,"httpPort":8000,"httpsPort":443,"_route":"room_index"},"request_uri":"http://127.0.0.1:8000/_owner/room","method":"GET"} []
[2019-11-19 10:28:01] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2019-11-19 10:28:01] request.INFO: Matched route "room_index". {"route":"room_index","route_parameters":{"_route":"room_index","_controller":"App\\Controller\\OwnerRoomController::index"},"request_uri":"http://127.0.0.1:8000/_owner/room/","method":"GET"} []
[2019-11-19 10:28:01] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2019-11-19 10:28:01] doctrine.DEBUG: SELECT t0.id AS id_1, t0.summary AS summary_2, t0.description AS description_3, t0.capacity AS capacity_4, t0.superficy AS superficy_5, t0.price AS price_6, t0.address AS address_7, t0.owner_id AS owner_id_8 FROM room t0 [] []
[2019-11-19 10:28:03] request.INFO: Matched route "room_new". {"route":"room_new","route_parameters":{"_route":"room_new","_controller":"App\\Controller\\OwnerRoomController::new"},"request_uri":"http://127.0.0.1:8000/_owner/room/new","method":"GET"} []
[2019-11-19 10:28:03] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2019-11-19 10:28:03] doctrine.DEBUG: SELECT r0_.id AS id_0, r0_.name AS name_1, r0_.presentation AS presentation_2, r0_.country AS country_3 FROM region r0_ [] []
[2019-11-19 10:28:03] doctrine.DEBUG: SELECT o0_.id AS id_0, o0_.firstname AS firstname_1, o0_.family_name AS family_name_2, o0_.address AS address_3, o0_.country AS country_4 FROM owner o0_ [] []
[2019-11-19 10:28:25] request.INFO: Matched route "owner_index". {"route":"owner_index","route_parameters":{"_route":"owner_index","_controller":"App\\Controller\\OwnerController::index"},"request_uri":"http://127.0.0.1:8000/owner/","method":"GET"} []
[2019-11-19 10:28:25] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2019-11-19 10:28:25] doctrine.DEBUG: SELECT t0.id AS id_1, t0.firstname AS firstname_2, t0.family_name AS family_name_3, t0.address AS address_4, t0.country AS country_5 FROM owner t0 [] []
[2019-11-19 10:28:27] request.INFO: Matched route "owner_new". {"route":"owner_new","route_parameters":{"_route":"owner_new","_controller":"App\\Controller\\OwnerController::new"},"request_uri":"http://127.0.0.1:8000/owner/new","method":"GET"} []
[2019-11-19 10:28:27] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2019-11-19 10:29:20] request.INFO: Matched route "owner_new". {"route":"owner_new","route_parameters":{"_route":"owner_new","_controller":"App\\Controller\\OwnerController::new"},"request_uri":"http://127.0.0.1:8000/owner/new","method":"POST"} []
[2019-11-19 10:29:20] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2019-11-19 10:29:20] doctrine.DEBUG: "START TRANSACTION" [] []
[2019-11-19 10:29:20] doctrine.DEBUG: INSERT INTO owner (firstname, family_name, address, country) VALUES (?, ?, ?, ?) {"1":"Albert","2":"Martin","3":"52 avenue du pont levis","4":"FR"} []
[2019-11-19 10:29:20] doctrine.DEBUG: "COMMIT" [] []
[2019-11-19 10:29:20] request.INFO: Matched route "owner_index". {"route":"owner_index","route_parameters":{"_route":"owner_index","_controller":"App\\Controller\\OwnerController::index"},"request_uri":"http://127.0.0.1:8000/owner/","method":"GET"} []
[2019-11-19 10:29:20] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2019-11-19 10:29:20] doctrine.DEBUG: SELECT t0.id AS id_1, t0.firstname AS firstname_2, t0.family_name AS family_name_3, t0.address AS address_4, t0.country AS country_5 FROM owner t0 [] []
[2019-11-19 10:29:22] request.INFO: Matched route "owner_show". {"route":"owner_show","route_parameters":{"_route":"owner_show","_controller":"App\\Controller\\OwnerController::show","id":"1"},"request_uri":"http://127.0.0.1:8000/owner/1","method":"GET"} []
[2019-11-19 10:29:22] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2019-11-19 10:29:22] doctrine.DEBUG: SELECT t0.id AS id_1, t0.firstname AS firstname_2, t0.family_name AS family_name_3, t0.address AS address_4, t0.country AS country_5 FROM owner t0 WHERE t0.id = ? ["1"] []
[2019-11-19 10:29:24] request.INFO: Matched route "owner_index". {"route":"owner_index","route_parameters":{"_route":"owner_index","_controller":"App\\Controller\\OwnerController::index"},"request_uri":"http://127.0.0.1:8000/owner/","method":"GET"} []
[2019-11-19 10:29:24] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2019-11-19 10:29:24] doctrine.DEBUG: SELECT t0.id AS id_1, t0.firstname AS firstname_2, t0.family_name AS family_name_3, t0.address AS address_4, t0.country AS country_5 FROM owner t0 [] []
[2019-11-19 10:29:32] request.INFO: Matched route "room_index". {"route":"room_index","route_parameters":{"_route":"room_index","_controller":"App\\Controller\\OwnerRoomController::index"},"request_uri":"http://127.0.0.1:8000/_owner/room/","method":"GET"} []
[2019-11-19 10:29:32] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2019-11-19 10:29:32] doctrine.DEBUG: SELECT t0.id AS id_1, t0.summary AS summary_2, t0.description AS description_3, t0.capacity AS capacity_4, t0.superficy AS superficy_5, t0.price AS price_6, t0.address AS address_7, t0.owner_id AS owner_id_8 FROM room t0 [] []
[2019-11-19 10:29:34] request.INFO: Matched route "room_new". {"route":"room_new","route_parameters":{"_route":"room_new","_controller":"App\\Controller\\OwnerRoomController::new"},"request_uri":"http://127.0.0.1:8000/_owner/room/new","method":"GET"} []
[2019-11-19 10:29:34] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2019-11-19 10:29:34] doctrine.DEBUG: SELECT r0_.id AS id_0, r0_.name AS name_1, r0_.presentation AS presentation_2, r0_.country AS country_3 FROM region r0_ [] []
[2019-11-19 10:29:34] doctrine.DEBUG: SELECT o0_.id AS id_0, o0_.firstname AS firstname_1, o0_.family_name AS family_name_2, o0_.address AS address_3, o0_.country AS country_4 FROM owner o0_ [] []
[2019-11-19 10:31:05] request.INFO: Matched route "room_new". {"route":"room_new","route_parameters":{"_route":"room_new","_controller":"App\\Controller\\OwnerRoomController::new"},"request_uri":"http://127.0.0.1:8000/_owner/room/new","method":"POST"} []
[2019-11-19 10:31:05] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2019-11-19 10:31:05] doctrine.DEBUG: SELECT r0_.id AS id_0, r0_.name AS name_1, r0_.presentation AS presentation_2, r0_.country AS country_3 FROM region r0_ WHERE r0_.id IN (?) [["1"]] []
[2019-11-19 10:31:05] doctrine.DEBUG: SELECT o0_.id AS id_0, o0_.firstname AS firstname_1, o0_.family_name AS family_name_2, o0_.address AS address_3, o0_.country AS country_4 FROM owner o0_ WHERE o0_.id IN (?) [["1"]] []
[2019-11-19 10:31:05] doctrine.DEBUG: "START TRANSACTION" [] []
[2019-11-19 10:31:05] doctrine.DEBUG: INSERT INTO room (summary, description, capacity, superficy, price, address, owner_id) VALUES (?, ?, ?, ?, ?, ?, ?) {"1":"Beau poulailler ancien à Évry","2":"très joli espace sur paille","3":4,"4":1000,"5":500,"6":"52 avenue du pont levis","7":1} []
[2019-11-19 10:31:05] doctrine.DEBUG: INSERT INTO room_region (room_id, region_id) VALUES (?, ?) [1,1] []
[2019-11-19 10:31:05] doctrine.DEBUG: "COMMIT" [] []
[2019-11-19 10:31:05] request.INFO: Matched route "room_index". {"route":"room_index","route_parameters":{"_route":"room_index","_controller":"App\\Controller\\OwnerRoomController::index"},"request_uri":"http://127.0.0.1:8000/_owner/room/","method":"GET"} []
[2019-11-19 10:31:05] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2019-11-19 10:31:05] doctrine.DEBUG: SELECT t0.id AS id_1, t0.summary AS summary_2, t0.description AS description_3, t0.capacity AS capacity_4, t0.superficy AS superficy_5, t0.price AS price_6, t0.address AS address_7, t0.owner_id AS owner_id_8 FROM room t0 [] []
[2019-11-19 10:31:07] request.INFO: Matched route "room_show". {"route":"room_show","route_parameters":{"_route":"room_show","_controller":"App\\Controller\\OwnerRoomController::show","id":"1"},"request_uri":"http://127.0.0.1:8000/_owner/room/1","method":"GET"} []
[2019-11-19 10:31:07] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2019-11-19 10:31:07] doctrine.DEBUG: SELECT t0.id AS id_1, t0.summary AS summary_2, t0.description AS description_3, t0.capacity AS capacity_4, t0.superficy AS superficy_5, t0.price AS price_6, t0.address AS address_7, t0.owner_id AS owner_id_8 FROM room t0 WHERE t0.id = ? ["1"] []
[2019-11-19 10:31:08] request.INFO: Matched route "room_index". {"route":"room_index","route_parameters":{"_route":"room_index","_controller":"App\\Controller\\OwnerRoomController::index"},"request_uri":"http://127.0.0.1:8000/_owner/room/","method":"GET"} []
[2019-11-19 10:31:08] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2019-11-19 10:31:08] doctrine.DEBUG: SELECT t0.id AS id_1, t0.summary AS summary_2, t0.description AS description_3, t0.capacity AS capacity_4, t0.superficy AS superficy_5, t0.price AS price_6, t0.address AS address_7, t0.owner_id AS owner_id_8 FROM room t0 [] []
[2019-11-19 10:34:22] php.DEBUG: Warning: fsockopen(): unable to connect to 127.0.0.1:8000 (Connection refused) {"exception":"[object] (Symfony\\Component\\Debug\\Exception\\SilencedErrorContext: {\"severity\":2,\"file\":\"/home/serandour/Couette_et_café_final/AgVoy/vendor/symfony/web-server-bundle/WebServerConfig.php\",\"line\":141,\"trace\":[{\"file\":\"/home/serandour/Couette_et_café_final/AgVoy/vendor/symfony/web-server-bundle/WebServerConfig.php\",\"line\":54,\"function\":\"findBestPort\",\"class\":\"Symfony\\\\Bundle\\\\WebServerBundle\\\\WebServerConfig\",\"type\":\"->\"}],\"count\":1})"} []
[2019-11-19 10:34:29] request.INFO: Matched route "room_show". {"route":"room_show","route_parameters":{"_route":"room_show","_controller":"App\\Controller\\OwnerRoomController::show","id":"1"},"request_uri":"http://127.0.0.1:8000/_owner/room/1","method":"GET"} []
[2019-11-19 10:34:29] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2019-11-19 10:34:29] doctrine.DEBUG: SELECT t0.id AS id_1, t0.summary AS summary_2, t0.description AS description_3, t0.capacity AS capacity_4, t0.superficy AS superficy_5, t0.price AS price_6, t0.address AS address_7, t0.owner_id AS owner_id_8 FROM room t0 WHERE t0.id = ? ["1"] []
[2019-11-19 10:34:31] request.INFO: Matched route "room_new". {"route":"room_new","route_parameters":{"_route":"room_new","_controller":"App\\Controller\\OwnerRoomController::new"},"request_uri":"http://127.0.0.1:8000/_owner/room/new","method":"GET"} []
[2019-11-19 10:34:31] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2019-11-19 10:34:31] doctrine.DEBUG: SELECT r0_.id AS id_0, r0_.name AS name_1, r0_.presentation AS presentation_2, r0_.country AS country_3 FROM region r0_ [] []
[2019-11-19 10:34:31] doctrine.DEBUG: SELECT o0_.id AS id_0, o0_.firstname AS firstname_1, o0_.family_name AS family_name_2, o0_.address AS address_3, o0_.country AS country_4 FROM owner o0_ [] []
[2019-11-19 10:35:40] php.DEBUG: Warning: fsockopen(): unable to connect to 127.0.0.1:8000 (Connection refused) {"exception":"[object] (Symfony\\Component\\Debug\\Exception\\SilencedErrorContext: {\"severity\":2,\"file\":\"/home/serandour/Couette_et_café_final/AgVoy/vendor/symfony/web-server-bundle/WebServerConfig.php\",\"line\":141,\"trace\":[{\"file\":\"/home/serandour/Couette_et_café_final/AgVoy/vendor/symfony/web-server-bundle/WebServerConfig.php\",\"line\":54,\"function\":\"findBestPort\",\"class\":\"Symfony\\\\Bundle\\\\WebServerBundle\\\\WebServerConfig\",\"type\":\"->\"}],\"count\":1})"} []
[2019-11-19 10:35:58] request.INFO: Matched route "room_new". {"route":"room_new","route_parameters":{"_route":"room_new","_controller":"App\\Controller\\OwnerRoomController::new"},"request_uri":"http://127.0.0.1:8000/_owner/room/new","method":"GET"} []
[2019-11-19 10:35:58] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2019-11-19 10:35:59] doctrine.DEBUG: SELECT r0_.id AS id_0, r0_.name AS name_1, r0_.presentation AS presentation_2, r0_.country AS country_3 FROM region r0_ [] []
[2019-11-19 10:35:59] doctrine.DEBUG: SELECT o0_.id AS id_0, o0_.firstname AS firstname_1, o0_.family_name AS family_name_2, o0_.address AS address_3, o0_.country AS country_4 FROM owner o0_ [] []
[2019-11-19 10:36:01] request.INFO: Matched route "room_show". {"route":"room_show","route_parameters":{"_route":"room_show","_controller":"App\\Controller\\OwnerRoomController::show","id":"1"},"request_uri":"http://127.0.0.1:8000/_owner/room/1","method":"GET"} []
[2019-11-19 10:36:01] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2019-11-19 10:36:01] doctrine.DEBUG: SELECT t0.id AS id_1, t0.summary AS summary_2, t0.description AS description_3, t0.capacity AS capacity_4, t0.superficy AS superficy_5, t0.price AS price_6, t0.address AS address_7, t0.owner_id AS owner_id_8 FROM room t0 WHERE t0.id = ? ["1"] []
[2019-11-19 10:36:08] request.INFO: Matched route "owner_index". {"route":"owner_index","route_parameters":{"_route":"owner_index","_controller":"App\\Controller\\OwnerController::index"},"request_uri":"http://127.0.0.1:8000/owner/","method":"GET"} []
[2019-11-19 10:36:08] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2019-11-19 10:36:08] doctrine.DEBUG: SELECT t0.id AS id_1, t0.firstname AS firstname_2, t0.family_name AS family_name_3, t0.address AS address_4, t0.country AS country_5 FROM owner t0 [] []
[2019-11-19 10:36:09] request.INFO: Matched route "owner_show". {"route":"owner_show","route_parameters":{"_route":"owner_show","_controller":"App\\Controller\\OwnerController::show","id":"1"},"request_uri":"http://127.0.0.1:8000/owner/1","method":"GET"} []
[2019-11-19 10:36:09] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2019-11-19 10:36:09] doctrine.DEBUG: SELECT t0.id AS id_1, t0.firstname AS firstname_2, t0.family_name AS family_name_3, t0.address AS address_4, t0.country AS country_5 FROM owner t0 WHERE t0.id = ? ["1"] []
[2019-11-19 10:36:17] request.INFO: Matched route "region_index". {"route":"region_index","route_parameters":{"_route":"region_index","_controller":"App\\Controller\\BackofficeRegionController::index"},"request_uri":"http://127.0.0.1:8000/backoffice/region/","method":"GET"} []
[2019-11-19 10:36:17] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2019-11-19 10:36:17] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.presentation AS presentation_3, t0.country AS country_4 FROM region t0 [] []
[2019-11-19 10:36:18] request.INFO: Matched route "region_show". {"route":"region_show","route_parameters":{"_route":"region_show","_controller":"App\\Controller\\BackofficeRegionController::show","id":"1"},"request_uri":"http://127.0.0.1:8000/backoffice/region/1","method":"GET"} []
[2019-11-19 10:36:18] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2019-11-19 10:36:18] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.presentation AS presentation_3, t0.country AS country_4 FROM region t0 WHERE t0.id = ? ["1"] []
[2019-11-19 10:36:44] php.DEBUG: Warning: fsockopen(): unable to connect to 127.0.0.1:8000 (Connection refused) {"exception":"[object] (Symfony\\Component\\Debug\\Exception\\SilencedErrorContext: {\"severity\":2,\"file\":\"/home/serandour/Couette_et_café_final/AgVoy/vendor/symfony/web-server-bundle/WebServerConfig.php\",\"line\":141,\"trace\":[{\"file\":\"/home/serandour/Couette_et_café_final/AgVoy/vendor/symfony/web-server-bundle/WebServerConfig.php\",\"line\":54,\"function\":\"findBestPort\",\"class\":\"Symfony\\\\Bundle\\\\WebServerBundle\\\\WebServerConfig\",\"type\":\"->\"}],\"count\":1})"} []
[2019-11-19 10:50:55] php.DEBUG: Warning: fsockopen(): unable to connect to 127.0.0.1:8000 (Connection refused) {"exception":"[object] (Symfony\\Component\\Debug\\Exception\\SilencedErrorContext: {\"severity\":2,\"file\":\"/home/serandour/Couette_et_café_final/AgVoy/vendor/symfony/web-server-bundle/WebServerConfig.php\",\"line\":141,\"trace\":[{\"file\":\"/home/serandour/Couette_et_café_final/AgVoy/vendor/symfony/web-server-bundle/WebServerConfig.php\",\"line\":54,\"function\":\"findBestPort\",\"class\":\"Symfony\\\\Bundle\\\\WebServerBundle\\\\WebServerConfig\",\"type\":\"->\"}],\"count\":1})"} []
[2019-11-19 10:51:03] request.INFO: Matched route "region_index". {"route":"region_index","route_parameters":{"_route":"region_index","_controller":"App\\Controller\\BackofficeRegionController::index"},"request_uri":"http://127.0.0.1:8000/backoffice/region/","method":"GET"} []
[2019-11-19 10:51:03] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2019-11-19 10:51:03] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.presentation AS presentation_3, t0.country AS country_4 FROM region t0 [] []
[2019-11-19 10:52:32] request.INFO: Matched route "region_new". {"route":"region_new","route_parameters":{"_route":"region_new","_controller":"App\\Controller\\BackofficeRegionController::new"},"request_uri":"http://127.0.0.1:8000/backoffice/region/new","method":"GET"} []
[2019-11-19 10:52:32] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2019-11-19 10:52:32] doctrine.DEBUG: SELECT r0_.id AS id_0, r0_.summary AS summary_1, r0_.description AS description_2, r0_.capacity AS capacity_3, r0_.superficy AS superficy_4, r0_.price AS price_5, r0_.address AS address_6, r0_.owner_id AS owner_id_7 FROM room r0_ [] []
[2019-11-19 11:15:03] doctrine.DEBUG: SELECT name FROM sqlite_master WHERE type = 'table' AND name != 'sqlite_sequence' AND name != 'geometry_columns' AND name != 'spatial_ref_sys' UNION ALL SELECT name FROM sqlite_temp_master WHERE type = 'table' ORDER BY name [] []
[2019-11-19 11:15:03] doctrine.DEBUG: PRAGMA table_info('client') [] []
[2019-11-19 11:15:03] doctrine.DEBUG: SELECT sql   FROM (       SELECT *         FROM sqlite_master    UNION ALL       SELECT *         FROM sqlite_temp_master   ) WHERE type = 'table' AND name = ? ["client"] []
[2019-11-19 11:15:03] doctrine.DEBUG: PRAGMA index_list('client') [] []
[2019-11-19 11:15:03] doctrine.DEBUG: PRAGMA TABLE_INFO ('client') [] []
[2019-11-19 11:15:03] doctrine.DEBUG: SELECT sql   FROM (       SELECT *         FROM sqlite_master    UNION ALL       SELECT *         FROM sqlite_temp_master   ) WHERE type = 'table' AND name = ? ["client"] []
[2019-11-19 11:15:03] doctrine.DEBUG: PRAGMA table_info('comment') [] []
[2019-11-19 11:15:03] doctrine.DEBUG: SELECT sql   FROM (       SELECT *         FROM sqlite_master    UNION ALL       SELECT *         FROM sqlite_temp_master   ) WHERE type = 'table' AND name = ? ["comment"] []
[2019-11-19 11:15:03] doctrine.DEBUG: PRAGMA index_list('comment') [] []
[2019-11-19 11:15:03] doctrine.DEBUG: PRAGMA TABLE_INFO ('comment') [] []
[2019-11-19 11:15:03] doctrine.DEBUG: PRAGMA INDEX_INFO ('IDX_9474526C19EB6921') [] []
[2019-11-19 11:15:03] doctrine.DEBUG: PRAGMA INDEX_INFO ('IDX_9474526C54177093') [] []
[2019-11-19 11:15:03] doctrine.DEBUG: SELECT sql   FROM (       SELECT *         FROM sqlite_master    UNION ALL       SELECT *         FROM sqlite_temp_master   ) WHERE type = 'table' AND name = ? ["comment"] []
[2019-11-19 11:15:03] doctrine.DEBUG: PRAGMA table_info('migration_versions') [] []
[2019-11-19 11:15:03] doctrine.DEBUG: SELECT sql   FROM (       SELECT *         FROM sqlite_master    UNION ALL       SELECT *         FROM sqlite_temp_master   ) WHERE type = 'table' AND name = ? ["migration_versions"] []
[2019-11-19 11:15:03] doctrine.DEBUG: PRAGMA index_list('migration_versions') [] []
[2019-11-19 11:15:03] doctrine.DEBUG: PRAGMA TABLE_INFO ('migration_versions') [] []
[2019-11-19 11:15:03] doctrine.DEBUG: SELECT sql   FROM (       SELECT *         FROM sqlite_master    UNION ALL       SELECT *         FROM sqlite_temp_master   ) WHERE type = 'table' AND name = ? ["migration_versions"] []
[2019-11-19 11:15:03] doctrine.DEBUG: PRAGMA table_info('owner') [] []
[2019-11-19 11:15:03] doctrine.DEBUG: SELECT sql   FROM (       SELECT *         FROM sqlite_master    UNION ALL       SELECT *         FROM sqlite_temp_master   ) WHERE type = 'table' AND name = ? ["owner"] []
[2019-11-19 11:15:03] doctrine.DEBUG: PRAGMA index_list('owner') [] []
[2019-11-19 11:15:03] doctrine.DEBUG: PRAGMA TABLE_INFO ('owner') [] []
[2019-11-19 11:15:03] doctrine.DEBUG: SELECT sql   FROM (       SELECT *         FROM sqlite_master    UNION ALL       SELECT *         FROM sqlite_temp_master   ) WHERE type = 'table' AND name = ? ["owner"] []
[2019-11-19 11:15:03] doctrine.DEBUG: PRAGMA table_info('region') [] []
[2019-11-19 11:15:03] doctrine.DEBUG: SELECT sql   FROM (       SELECT *         FROM sqlite_master    UNION ALL       SELECT *         FROM sqlite_temp_master   ) WHERE type = 'table' AND name = ? ["region"] []
[2019-11-19 11:15:03] doctrine.DEBUG: PRAGMA index_list('region') [] []
[2019-11-19 11:15:03] doctrine.DEBUG: PRAGMA TABLE_INFO ('region') [] []
[2019-11-19 11:15:03] doctrine.DEBUG: SELECT sql   FROM (       SELECT *         FROM sqlite_master    UNION ALL       SELECT *         FROM sqlite_temp_master   ) WHERE type = 'table' AND name = ? ["region"] []
[2019-11-19 11:15:03] doctrine.DEBUG: PRAGMA table_info('reservation') [] []
[2019-11-19 11:15:03] doctrine.DEBUG: SELECT sql   FROM (       SELECT *         FROM sqlite_master    UNION ALL       SELECT *         FROM sqlite_temp_master   ) WHERE type = 'table' AND name = ? ["reservation"] []
[2019-11-19 11:15:03] doctrine.DEBUG: PRAGMA index_list('reservation') [] []
[2019-11-19 11:15:03] doctrine.DEBUG: PRAGMA TABLE_INFO ('reservation') [] []
[2019-11-19 11:15:03] doctrine.DEBUG: PRAGMA INDEX_INFO ('IDX_42C8495519EB6921') [] []
[2019-11-19 11:15:03] doctrine.DEBUG: PRAGMA INDEX_INFO ('IDX_42C8495554177093') [] []
[2019-11-19 11:15:03] doctrine.DEBUG: SELECT sql   FROM (       SELECT *         FROM sqlite_master    UNION ALL       SELECT *         FROM sqlite_temp_master   ) WHERE type = 'table' AND name = ? ["reservation"] []
[2019-11-19 11:15:03] doctrine.DEBUG: PRAGMA table_info('room') [] []
[2019-11-19 11:15:03] doctrine.DEBUG: SELECT sql   FROM (       SELECT *         FROM sqlite_master    UNION ALL       SELECT *         FROM sqlite_temp_master   ) WHERE type = 'table' AND name = ? ["room"] []
[2019-11-19 11:15:03] doctrine.DEBUG: PRAGMA index_list('room') [] []
[2019-11-19 11:15:03] doctrine.DEBUG: PRAGMA TABLE_INFO ('room') [] []
[2019-11-19 11:15:03] doctrine.DEBUG: PRAGMA INDEX_INFO ('IDX_729F519B7E3C61F9') [] []
[2019-11-19 11:15:03] doctrine.DEBUG: SELECT sql   FROM (       SELECT *         FROM sqlite_master    UNION ALL       SELECT *         FROM sqlite_temp_master   ) WHERE type = 'table' AND name = ? ["room"] []
[2019-11-19 11:15:03] doctrine.DEBUG: PRAGMA table_info('room_region') [] []
[2019-11-19 11:15:03] doctrine.DEBUG: SELECT sql   FROM (       SELECT *         FROM sqlite_master    UNION ALL       SELECT *         FROM sqlite_temp_master   ) WHERE type = 'table' AND name = ? ["room_region"] []
[2019-11-19 11:15:03] doctrine.DEBUG: PRAGMA index_list('room_region') [] []
[2019-11-19 11:15:03] doctrine.DEBUG: PRAGMA TABLE_INFO ('room_region') [] []
[2019-11-19 11:15:03] doctrine.DEBUG: PRAGMA INDEX_INFO ('IDX_4E2C37B754177093') [] []
[2019-11-19 11:15:03] doctrine.DEBUG: PRAGMA INDEX_INFO ('IDX_4E2C37B798260155') [] []
[2019-11-19 11:15:03] doctrine.DEBUG: SELECT sql   FROM (       SELECT *         FROM sqlite_master    UNION ALL       SELECT *         FROM sqlite_temp_master   ) WHERE type = 'table' AND name = ? ["room_region"] []
[2019-11-19 11:15:03] doctrine.DEBUG: PRAGMA table_info('unavailable_period') [] []
[2019-11-19 11:15:03] doctrine.DEBUG: SELECT sql   FROM (       SELECT *         FROM sqlite_master    UNION ALL       SELECT *         FROM sqlite_temp_master   ) WHERE type = 'table' AND name = ? ["unavailable_period"] []
[2019-11-19 11:15:03] doctrine.DEBUG: PRAGMA index_list('unavailable_period') [] []
[2019-11-19 11:15:03] doctrine.DEBUG: PRAGMA TABLE_INFO ('unavailable_period') [] []
[2019-11-19 11:15:03] doctrine.DEBUG: PRAGMA INDEX_INFO ('IDX_B9D87FBB54177093') [] []
[2019-11-19 11:15:03] doctrine.DEBUG: SELECT sql   FROM (       SELECT *         FROM sqlite_master    UNION ALL       SELECT *         FROM sqlite_temp_master   ) WHERE type = 'table' AND name = ? ["unavailable_period"] []
[2019-11-19 11:15:03] doctrine.DEBUG: SELECT name FROM sqlite_master WHERE type = 'table' AND name != 'sqlite_sequence' AND name != 'geometry_columns' AND name != 'spatial_ref_sys' UNION ALL SELECT name FROM sqlite_temp_master WHERE type = 'table' ORDER BY name [] []
[2019-11-19 11:15:03] doctrine.DEBUG: PRAGMA table_info('client') [] []
[2019-11-19 11:15:03] doctrine.DEBUG: SELECT sql   FROM (       SELECT *         FROM sqlite_master    UNION ALL       SELECT *         FROM sqlite_temp_master   ) WHERE type = 'table' AND name = ? ["client"] []
[2019-11-19 11:15:03] doctrine.DEBUG: PRAGMA index_list('client') [] []
[2019-11-19 11:15:03] doctrine.DEBUG: PRAGMA TABLE_INFO ('client') [] []
[2019-11-19 11:15:03] doctrine.DEBUG: SELECT sql   FROM (       SELECT *         FROM sqlite_master    UNION ALL       SELECT *         FROM sqlite_temp_master   ) WHERE type = 'table' AND name = ? ["client"] []
[2019-11-19 11:15:03] doctrine.DEBUG: PRAGMA table_info('comment') [] []
[2019-11-19 11:15:03] doctrine.DEBUG: SELECT sql   FROM (       SELECT *         FROM sqlite_master    UNION ALL       SELECT *         FROM sqlite_temp_master   ) WHERE type = 'table' AND name = ? ["comment"] []
[2019-11-19 11:15:03] doctrine.DEBUG: PRAGMA index_list('comment') [] []
[2019-11-19 11:15:03] doctrine.DEBUG: PRAGMA TABLE_INFO ('comment') [] []
[2019-11-19 11:15:03] doctrine.DEBUG: PRAGMA INDEX_INFO ('IDX_9474526C19EB6921') [] []
[2019-11-19 11:15:03] doctrine.DEBUG: PRAGMA INDEX_INFO ('IDX_9474526C54177093') [] []
[2019-11-19 11:15:03] doctrine.DEBUG: SELECT sql   FROM (       SELECT *         FROM sqlite_master    UNION ALL       SELECT *         FROM sqlite_temp_master   ) WHERE type = 'table' AND name = ? ["comment"] []
[2019-11-19 11:15:03] doctrine.DEBUG: PRAGMA table_info('migration_versions') [] []
[2019-11-19 11:15:03] doctrine.DEBUG: SELECT sql   FROM (       SELECT *         FROM sqlite_master    UNION ALL       SELECT *         FROM sqlite_temp_master   ) WHERE type = 'table' AND name = ? ["migration_versions"] []
[2019-11-19 11:15:03] doctrine.DEBUG: PRAGMA index_list('migration_versions') [] []
[2019-11-19 11:15:03] doctrine.DEBUG: PRAGMA TABLE_INFO ('migration_versions') [] []
[2019-11-19 11:15:03] doctrine.DEBUG: SELECT sql   FROM (       SELECT *         FROM sqlite_master    UNION ALL       SELECT *         FROM sqlite_temp_master   ) WHERE type = 'table' AND name = ? ["migration_versions"] []
[2019-11-19 11:15:03] doctrine.DEBUG: PRAGMA table_info('owner') [] []
[2019-11-19 11:15:03] doctrine.DEBUG: SELECT sql   FROM (       SELECT *         FROM sqlite_master    UNION ALL       SELECT *         FROM sqlite_temp_master   ) WHERE type = 'table' AND name = ? ["owner"] []
[2019-11-19 11:15:03] doctrine.DEBUG: PRAGMA index_list('owner') [] []
[2019-11-19 11:15:03] doctrine.DEBUG: PRAGMA TABLE_INFO ('owner') [] []
[2019-11-19 11:15:03] doctrine.DEBUG: SELECT sql   FROM (       SELECT *         FROM sqlite_master    UNION ALL       SELECT *         FROM sqlite_temp_master   ) WHERE type = 'table' AND name = ? ["owner"] []
[2019-11-19 11:15:03] doctrine.DEBUG: PRAGMA table_info('region') [] []
[2019-11-19 11:15:03] doctrine.DEBUG: SELECT sql   FROM (       SELECT *         FROM sqlite_master    UNION ALL       SELECT *         FROM sqlite_temp_master   ) WHERE type = 'table' AND name = ? ["region"] []
[2019-11-19 11:15:03] doctrine.DEBUG: PRAGMA index_list('region') [] []
[2019-11-19 11:15:03] doctrine.DEBUG: PRAGMA TABLE_INFO ('region') [] []
[2019-11-19 11:15:03] doctrine.DEBUG: SELECT sql   FROM (       SELECT *         FROM sqlite_master    UNION ALL       SELECT *         FROM sqlite_temp_master   ) WHERE type = 'table' AND name = ? ["region"] []
[2019-11-19 11:15:03] doctrine.DEBUG: PRAGMA table_info('reservation') [] []
[2019-11-19 11:15:03] doctrine.DEBUG: SELECT sql   FROM (       SELECT *         FROM sqlite_master    UNION ALL       SELECT *         FROM sqlite_temp_master   ) WHERE type = 'table' AND name = ? ["reservation"] []
[2019-11-19 11:15:03] doctrine.DEBUG: PRAGMA index_list('reservation') [] []
[2019-11-19 11:15:03] doctrine.DEBUG: PRAGMA TABLE_INFO ('reservation') [] []
[2019-11-19 11:15:03] doctrine.DEBUG: PRAGMA INDEX_INFO ('IDX_42C8495519EB6921') [] []
[2019-11-19 11:15:03] doctrine.DEBUG: PRAGMA INDEX_INFO ('IDX_42C8495554177093') [] []
[2019-11-19 11:15:03] doctrine.DEBUG: SELECT sql   FROM (       SELECT *         FROM sqlite_master    UNION ALL       SELECT *         FROM sqlite_temp_master   ) WHERE type = 'table' AND name = ? ["reservation"] []
[2019-11-19 11:15:03] doctrine.DEBUG: PRAGMA table_info('room') [] []
[2019-11-19 11:15:03] doctrine.DEBUG: SELECT sql   FROM (       SELECT *         FROM sqlite_master    UNION ALL       SELECT *         FROM sqlite_temp_master   ) WHERE type = 'table' AND name = ? ["room"] []
[2019-11-19 11:15:03] doctrine.DEBUG: PRAGMA index_list('room') [] []
[2019-11-19 11:15:03] doctrine.DEBUG: PRAGMA TABLE_INFO ('room') [] []
[2019-11-19 11:15:03] doctrine.DEBUG: PRAGMA INDEX_INFO ('IDX_729F519B7E3C61F9') [] []
[2019-11-19 11:15:03] doctrine.DEBUG: SELECT sql   FROM (       SELECT *         FROM sqlite_master    UNION ALL       SELECT *         FROM sqlite_temp_master   ) WHERE type = 'table' AND name = ? ["room"] []
[2019-11-19 11:15:03] doctrine.DEBUG: PRAGMA table_info('room_region') [] []
[2019-11-19 11:15:03] doctrine.DEBUG: SELECT sql   FROM (       SELECT *         FROM sqlite_master    UNION ALL       SELECT *         FROM sqlite_temp_master   ) WHERE type = 'table' AND name = ? ["room_region"] []
[2019-11-19 11:15:03] doctrine.DEBUG: PRAGMA index_list('room_region') [] []
[2019-11-19 11:15:03] doctrine.DEBUG: PRAGMA TABLE_INFO ('room_region') [] []
[2019-11-19 11:15:03] doctrine.DEBUG: PRAGMA INDEX_INFO ('IDX_4E2C37B754177093') [] []
[2019-11-19 11:15:03] doctrine.DEBUG: PRAGMA INDEX_INFO ('IDX_4E2C37B798260155') [] []
[2019-11-19 11:15:03] doctrine.DEBUG: SELECT sql   FROM (       SELECT *         FROM sqlite_master    UNION ALL       SELECT *         FROM sqlite_temp_master   ) WHERE type = 'table' AND name = ? ["room_region"] []
[2019-11-19 11:15:03] doctrine.DEBUG: PRAGMA table_info('unavailable_period') [] []
[2019-11-19 11:15:03] doctrine.DEBUG: SELECT sql   FROM (       SELECT *         FROM sqlite_master    UNION ALL       SELECT *         FROM sqlite_temp_master   ) WHERE type = 'table' AND name = ? ["unavailable_period"] []
[2019-11-19 11:15:03] doctrine.DEBUG: PRAGMA index_list('unavailable_period') [] []
[2019-11-19 11:15:03] doctrine.DEBUG: PRAGMA TABLE_INFO ('unavailable_period') [] []
[2019-11-19 11:15:03] doctrine.DEBUG: PRAGMA INDEX_INFO ('IDX_B9D87FBB54177093') [] []
[2019-11-19 11:15:03] doctrine.DEBUG: SELECT sql   FROM (       SELECT *         FROM sqlite_master    UNION ALL       SELECT *         FROM sqlite_temp_master   ) WHERE type = 'table' AND name = ? ["unavailable_period"] []
[2019-11-19 11:15:03] doctrine.DEBUG: CREATE TABLE user (id INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL, email VARCHAR(180) NOT NULL, roles CLOB NOT NULL --(DC2Type:json) , password VARCHAR(255) NOT NULL) [] []
[2019-11-19 11:15:03] doctrine.DEBUG: CREATE UNIQUE INDEX UNIQ_8D93D649E7927C74 ON user (email) [] []
[2019-11-19 11:15:03] doctrine.DEBUG: DROP INDEX IDX_9474526C19EB6921 [] []
[2019-11-19 11:15:03] doctrine.DEBUG: DROP INDEX IDX_9474526C54177093 [] []
[2019-11-19 11:15:03] doctrine.DEBUG: CREATE TEMPORARY TABLE __temp__comment AS SELECT id, client_id, room_id, commentary, grade FROM comment [] []
[2019-11-19 11:15:03] doctrine.DEBUG: DROP TABLE comment [] []
[2019-11-19 11:15:03] doctrine.DEBUG: CREATE TABLE comment (id INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL, client_id INTEGER NOT NULL, room_id INTEGER NOT NULL, commentary CLOB NOT NULL COLLATE BINARY, grade INTEGER NOT NULL, CONSTRAINT FK_9474526C19EB6921 FOREIGN KEY (client_id) REFERENCES client (id) NOT DEFERRABLE INITIALLY IMMEDIATE, CONSTRAINT FK_9474526C54177093 FOREIGN KEY (room_id) REFERENCES room (id) NOT DEFERRABLE INITIALLY IMMEDIATE) [] []
[2019-11-19 11:15:03] doctrine.DEBUG: INSERT INTO comment (id, client_id, room_id, commentary, grade) SELECT id, client_id, room_id, commentary, grade FROM __temp__comment [] []
[2019-11-19 11:15:03] doctrine.DEBUG: DROP TABLE __temp__comment [] []
[2019-11-19 11:15:03] doctrine.DEBUG: CREATE INDEX IDX_9474526C19EB6921 ON comment (client_id) [] []
[2019-11-19 11:15:03] doctrine.DEBUG: CREATE INDEX IDX_9474526C54177093 ON comment (room_id) [] []
[2019-11-19 11:15:03] doctrine.DEBUG: DROP INDEX IDX_729F519B7E3C61F9 [] []
[2019-11-19 11:15:03] doctrine.DEBUG: CREATE TEMPORARY TABLE __temp__room AS SELECT id, owner_id, summary, description, capacity, superficy, price, address FROM room [] []
[2019-11-19 11:15:03] doctrine.DEBUG: DROP TABLE room [] []
[2019-11-19 11:15:03] doctrine.DEBUG: CREATE TABLE room (id INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL, owner_id INTEGER NOT NULL, summary CLOB NOT NULL COLLATE BINARY, description CLOB DEFAULT NULL COLLATE BINARY, capacity INTEGER NOT NULL, superficy DOUBLE PRECISION DEFAULT NULL, price DOUBLE PRECISION NOT NULL, address VARCHAR(255) NOT NULL COLLATE BINARY, CONSTRAINT FK_729F519B7E3C61F9 FOREIGN KEY (owner_id) REFERENCES owner (id) NOT DEFERRABLE INITIALLY IMMEDIATE) [] []
[2019-11-19 11:15:03] doctrine.DEBUG: INSERT INTO room (id, owner_id, summary, description, capacity, superficy, price, address) SELECT id, owner_id, summary, description, capacity, superficy, price, address FROM __temp__room [] []
[2019-11-19 11:15:03] doctrine.DEBUG: DROP TABLE __temp__room [] []
[2019-11-19 11:15:03] doctrine.DEBUG: CREATE INDEX IDX_729F519B7E3C61F9 ON room (owner_id) [] []
[2019-11-19 11:15:03] doctrine.DEBUG: DROP INDEX IDX_4E2C37B754177093 [] []
[2019-11-19 11:15:03] doctrine.DEBUG: DROP INDEX IDX_4E2C37B798260155 [] []
[2019-11-19 11:15:03] doctrine.DEBUG: CREATE TEMPORARY TABLE __temp__room_region AS SELECT room_id, region_id FROM room_region [] []
[2019-11-19 11:15:03] doctrine.DEBUG: DROP TABLE room_region [] []
[2019-11-19 11:15:03] doctrine.DEBUG: CREATE TABLE room_region (room_id INTEGER NOT NULL, region_id INTEGER NOT NULL, PRIMARY KEY(room_id, region_id), CONSTRAINT FK_4E2C37B754177093 FOREIGN KEY (room_id) REFERENCES room (id) ON DELETE CASCADE NOT DEFERRABLE INITIALLY IMMEDIATE, CONSTRAINT FK_4E2C37B798260155 FOREIGN KEY (region_id) REFERENCES region (id) ON DELETE CASCADE NOT DEFERRABLE INITIALLY IMMEDIATE) [] []
[2019-11-19 11:15:03] doctrine.DEBUG: INSERT INTO room_region (room_id, region_id) SELECT room_id, region_id FROM __temp__room_region [] []
[2019-11-19 11:15:03] doctrine.DEBUG: DROP TABLE __temp__room_region [] []
[2019-11-19 11:15:03] doctrine.DEBUG: CREATE INDEX IDX_4E2C37B754177093 ON room_region (room_id) [] []
[2019-11-19 11:15:03] doctrine.DEBUG: CREATE INDEX IDX_4E2C37B798260155 ON room_region (region_id) [] []
[2019-11-19 11:15:03] doctrine.DEBUG: DROP INDEX IDX_42C8495519EB6921 [] []
[2019-11-19 11:15:03] doctrine.DEBUG: DROP INDEX IDX_42C8495554177093 [] []
[2019-11-19 11:15:03] doctrine.DEBUG: CREATE TEMPORARY TABLE __temp__reservation AS SELECT id, client_id, room_id, begin_date, end_date, confirmed FROM reservation [] []
[2019-11-19 11:15:03] doctrine.DEBUG: DROP TABLE reservation [] []
[2019-11-19 11:15:03] doctrine.DEBUG: CREATE TABLE reservation (id INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL, client_id INTEGER NOT NULL, room_id INTEGER NOT NULL, begin_date DATE NOT NULL, end_date DATE DEFAULT NULL, confirmed BOOLEAN NOT NULL, CONSTRAINT FK_42C8495519EB6921 FOREIGN KEY (client_id) REFERENCES client (id) NOT DEFERRABLE INITIALLY IMMEDIATE, CONSTRAINT FK_42C8495554177093 FOREIGN KEY (room_id) REFERENCES room (id) NOT DEFERRABLE INITIALLY IMMEDIATE) [] []
[2019-11-19 11:15:03] doctrine.DEBUG: INSERT INTO reservation (id, client_id, room_id, begin_date, end_date, confirmed) SELECT id, client_id, room_id, begin_date, end_date, confirmed FROM __temp__reservation [] []
[2019-11-19 11:15:03] doctrine.DEBUG: DROP TABLE __temp__reservation [] []
[2019-11-19 11:15:03] doctrine.DEBUG: CREATE INDEX IDX_42C8495519EB6921 ON reservation (client_id) [] []
[2019-11-19 11:15:03] doctrine.DEBUG: CREATE INDEX IDX_42C8495554177093 ON reservation (room_id) [] []
[2019-11-19 11:15:03] doctrine.DEBUG: DROP INDEX IDX_B9D87FBB54177093 [] []
[2019-11-19 11:15:03] doctrine.DEBUG: CREATE TEMPORARY TABLE __temp__unavailable_period AS SELECT id, room_id, begin_date, end_date FROM unavailable_period [] []
[2019-11-19 11:15:03] doctrine.DEBUG: DROP TABLE unavailable_period [] []
[2019-11-19 11:15:03] doctrine.DEBUG: CREATE TABLE unavailable_period (id INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL, room_id INTEGER NOT NULL, begin_date DATE NOT NULL, end_date DATE DEFAULT NULL, CONSTRAINT FK_B9D87FBB54177093 FOREIGN KEY (room_id) REFERENCES room (id) NOT DEFERRABLE INITIALLY IMMEDIATE) [] []
[2019-11-19 11:15:03] doctrine.DEBUG: INSERT INTO unavailable_period (id, room_id, begin_date, end_date) SELECT id, room_id, begin_date, end_date FROM __temp__unavailable_period [] []
[2019-11-19 11:15:03] doctrine.DEBUG: DROP TABLE __temp__unavailable_period [] []
[2019-11-19 11:15:03] doctrine.DEBUG: CREATE INDEX IDX_B9D87FBB54177093 ON unavailable_period (room_id) [] []
[2019-11-19 11:34:17] php.DEBUG: Warning: fsockopen(): unable to connect to 127.0.0.1:8000 (Connection refused) {"exception":"[object] (Symfony\\Component\\Debug\\Exception\\SilencedErrorContext: {\"severity\":2,\"file\":\"/home/serandour/Couette_et_café_final/AgVoy/vendor/symfony/web-server-bundle/WebServerConfig.php\",\"line\":141,\"trace\":[{\"file\":\"/home/serandour/Couette_et_café_final/AgVoy/vendor/symfony/web-server-bundle/WebServerConfig.php\",\"line\":54,\"function\":\"findBestPort\",\"class\":\"Symfony\\\\Bundle\\\\WebServerBundle\\\\WebServerConfig\",\"type\":\"->\"}],\"count\":1})"} []
[2019-11-19 11:34:20] request.INFO: Matched route "owner_show". {"route":"owner_show","route_parameters":{"_route":"owner_show","_controller":"App\\Controller\\OwnerController::show","id":"1"},"request_uri":"http://127.0.0.1:8000/owner/1","method":"GET"} []
[2019-11-19 11:34:20] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2019-11-19 11:34:20] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\LoginFormAuthenticator"} []
[2019-11-19 11:34:20] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\LoginFormAuthenticator"} []
[2019-11-19 11:34:20] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2019-11-19 11:34:20] doctrine.DEBUG: SELECT t0.id AS id_1, t0.firstname AS firstname_2, t0.family_name AS family_name_3, t0.address AS address_4, t0.country AS country_5 FROM owner t0 WHERE t0.id = ? ["1"] []
[2019-11-19 11:34:24] request.INFO: Matched route "app_login". {"route":"app_login","route_parameters":{"_route":"app_login","_controller":"App\\Controller\\SecurityController::login"},"request_uri":"http://127.0.0.1:8000/login","method":"GET"} []
[2019-11-19 11:34:24] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2019-11-19 11:34:24] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\LoginFormAuthenticator"} []
[2019-11-19 11:34:24] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\LoginFormAuthenticator"} []
[2019-11-19 11:34:24] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2019-11-19 11:34:24] request.CRITICAL: Uncaught PHP Exception Twig\Error\LoaderError: "Unable to find template "base.html.twig" (looked into: /home/serandour/Couette_et_café_final/AgVoy/templates, /home/serandour/Couette_et_café_final/AgVoy/vendor/symfony/twig-bridge/Resources/views/Form) in "security/login.html.twig" at line 1." at /home/serandour/Couette_et_café_final/AgVoy/vendor/twig/twig/src/Loader/FilesystemLoader.php line 250 {"exception":"[object] (Twig\\Error\\LoaderError(code: 0): Unable to find template \"base.html.twig\" (looked into: /home/serandour/Couette_et_café_final/AgVoy/templates, /home/serandour/Couette_et_café_final/AgVoy/vendor/symfony/twig-bridge/Resources/views/Form) in \"security/login.html.twig\" at line 1. at /home/serandour/Couette_et_café_final/AgVoy/vendor/twig/twig/src/Loader/FilesystemLoader.php:250)"} []
[2019-11-19 11:37:21] request.INFO: Matched route "app_login". {"route":"app_login","route_parameters":{"_route":"app_login","_controller":"App\\Controller\\SecurityController::login"},"request_uri":"http://127.0.0.1:8000/login","method":"GET"} []
[2019-11-19 11:37:21] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2019-11-19 11:37:21] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\LoginFormAuthenticator"} []
[2019-11-19 11:37:21] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\LoginFormAuthenticator"} []
[2019-11-19 11:37:21] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2019-11-19 11:38:13] request.INFO: Matched route "app_login". {"route":"app_login","route_parameters":{"_route":"app_login","_controller":"App\\Controller\\SecurityController::login"},"request_uri":"http://127.0.0.1:8000/login","method":"POST"} []
[2019-11-19 11:38:13] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2019-11-19 11:38:13] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\LoginFormAuthenticator"} []
[2019-11-19 11:38:13] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\LoginFormAuthenticator"} []
[2019-11-19 11:38:13] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"main","authenticator":"App\\Security\\LoginFormAuthenticator"} []
[2019-11-19 11:38:13] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4 FROM user t0 WHERE t0.email = ? LIMIT 1 ["tp7@gmail.com"] []
[2019-11-19 11:38:13] security.INFO: Guard authentication failed. {"exception":"[object] (Symfony\\Component\\Security\\Core\\Exception\\CustomUserMessageAuthenticationException(code: 0): Email could not be found. at /home/serandour/Couette_et_café_final/AgVoy/src/Security/LoginFormAuthenticator.php:71)","authenticator":"App\\Security\\LoginFormAuthenticator"} []
[2019-11-19 11:38:13] security.DEBUG: The "App\Security\LoginFormAuthenticator" authenticator set the response. Any later authenticator will not be called {"authenticator":"App\\Security\\LoginFormAuthenticator"} []
[2019-11-19 11:38:13] request.INFO: Matched route "app_login". {"route":"app_login","route_parameters":{"_route":"app_login","_controller":"App\\Controller\\SecurityController::login"},"request_uri":"http://127.0.0.1:8000/login","method":"GET"} []
[2019-11-19 11:38:13] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2019-11-19 11:38:13] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\LoginFormAuthenticator"} []
[2019-11-19 11:38:13] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\LoginFormAuthenticator"} []
[2019-11-19 11:38:13] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2019-11-19 11:38:33] request.INFO: Matched route "app_login". {"route":"app_login","route_parameters":{"_route":"app_login","_controller":"App\\Controller\\SecurityController::login"},"request_uri":"http://127.0.0.1:8000/login","method":"POST"} []
[2019-11-19 11:38:33] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2019-11-19 11:38:33] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\LoginFormAuthenticator"} []
[2019-11-19 11:38:33] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\LoginFormAuthenticator"} []
[2019-11-19 11:38:33] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"main","authenticator":"App\\Security\\LoginFormAuthenticator"} []
[2019-11-19 11:38:33] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4 FROM user t0 WHERE t0.email = ? LIMIT 1 ["tp@gmail.com"] []
[2019-11-19 11:38:33] security.INFO: Guard authentication failed. {"exception":"[object] (Symfony\\Component\\Security\\Core\\Exception\\CustomUserMessageAuthenticationException(code: 0): Email could not be found. at /home/serandour/Couette_et_café_final/AgVoy/src/Security/LoginFormAuthenticator.php:71)","authenticator":"App\\Security\\LoginFormAuthenticator"} []
[2019-11-19 11:38:33] security.DEBUG: The "App\Security\LoginFormAuthenticator" authenticator set the response. Any later authenticator will not be called {"authenticator":"App\\Security\\LoginFormAuthenticator"} []
[2019-11-19 11:38:33] request.INFO: Matched route "app_login". {"route":"app_login","route_parameters":{"_route":"app_login","_controller":"App\\Controller\\SecurityController::login"},"request_uri":"http://127.0.0.1:8000/login","method":"GET"} []
[2019-11-19 11:38:33] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2019-11-19 11:38:33] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\LoginFormAuthenticator"} []
[2019-11-19 11:38:33] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\LoginFormAuthenticator"} []
[2019-11-19 11:38:33] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2019-11-19 11:40:26] request.INFO: Matched route "app_register". {"route":"app_register","route_parameters":{"_route":"app_register","_controller":"App\\Controller\\RegistrationController::register"},"request_uri":"http://127.0.0.1:8000/register","method":"GET"} []
[2019-11-19 11:40:26] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2019-11-19 11:40:26] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\LoginFormAuthenticator"} []
[2019-11-19 11:40:26] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\LoginFormAuthenticator"} []
[2019-11-19 11:40:26] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2019-11-19 11:40:40] request.INFO: Matched route "app_register". {"route":"app_register","route_parameters":{"_route":"app_register","_controller":"App\\Controller\\RegistrationController::register"},"request_uri":"http://127.0.0.1:8000/register","method":"POST"} []
[2019-11-19 11:40:40] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2019-11-19 11:40:40] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\LoginFormAuthenticator"} []
[2019-11-19 11:40:40] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\LoginFormAuthenticator"} []
[2019-11-19 11:40:40] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2019-11-19 11:40:40] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4 FROM user t0 WHERE t0.email = ? ["tp@gmail.com"] []
[2019-11-19 11:40:46] request.INFO: Matched route "app_register". {"route":"app_register","route_parameters":{"_route":"app_register","_controller":"App\\Controller\\RegistrationController::register"},"request_uri":"http://127.0.0.1:8000/register","method":"POST"} []
[2019-11-19 11:40:46] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2019-11-19 11:40:46] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\LoginFormAuthenticator"} []
[2019-11-19 11:40:46] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\LoginFormAuthenticator"} []
[2019-11-19 11:40:46] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2019-11-19 11:40:46] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4 FROM user t0 WHERE t0.email = ? ["tp@gmail.com"] []
[2019-11-19 11:40:46] doctrine.DEBUG: "START TRANSACTION" [] []
[2019-11-19 11:40:46] doctrine.DEBUG: INSERT INTO user (email, roles, password) VALUES (?, ?, ?) {"1":"tp@gmail.com","2":[],"3":"$argon2id$v=19$m=65536,t=4 [...]"} []
[2019-11-19 11:40:46] doctrine.DEBUG: "COMMIT" [] []
[2019-11-19 11:40:46] php.CRITICAL: Call to undefined method App\Security\LoginFormAuthenticator::render() {"exception":"[object] (Symfony\\Component\\Debug\\Exception\\FatalThrowableError(code: 0): Call to undefined method App\\Security\\LoginFormAuthenticator::render() at /home/serandour/Couette_et_café_final/AgVoy/src/Security/LoginFormAuthenticator.php:89)"} []
[2019-11-19 11:40:46] request.CRITICAL: Uncaught PHP Exception Symfony\Component\Debug\Exception\UndefinedMethodException: "Attempted to call an undefined method named "render" of class "App\Security\LoginFormAuthenticator"." at /home/serandour/Couette_et_café_final/AgVoy/src/Security/LoginFormAuthenticator.php line 89 {"exception":"[object] (Symfony\\Component\\Debug\\Exception\\UndefinedMethodException(code: 0): Attempted to call an undefined method named \"render\" of class \"App\\Security\\LoginFormAuthenticator\". at /home/serandour/Couette_et_café_final/AgVoy/src/Security/LoginFormAuthenticator.php:89)"} []
[2019-11-19 11:40:46] security.DEBUG: Stored the security token in the session. {"key":"_security_main"} []
[2019-11-19 11:41:41] request.INFO: Matched route "app_register". {"route":"app_register","route_parameters":{"_route":"app_register","_controller":"App\\Controller\\RegistrationController::register"},"request_uri":"http://127.0.0.1:8000/register","method":"POST"} []
[2019-11-19 11:41:41] security.DEBUG: Read existing security token from the session. {"key":"_security_main","token_class":"Symfony\\Component\\Security\\Guard\\Token\\PostAuthenticationGuardToken"} []
[2019-11-19 11:41:41] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4 FROM user t0 WHERE t0.id = ? [1] []
[2019-11-19 11:41:41] security.DEBUG: User was reloaded from a user provider. {"provider":"Symfony\\Bridge\\Doctrine\\Security\\User\\EntityUserProvider","username":"tp@gmail.com"} []
[2019-11-19 11:41:41] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2019-11-19 11:41:41] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\LoginFormAuthenticator"} []
[2019-11-19 11:41:41] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\LoginFormAuthenticator"} []
[2019-11-19 11:41:41] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4 FROM user t0 WHERE t0.email = ? ["tp@gmail.com"] []
[2019-11-19 11:41:41] security.DEBUG: Stored the security token in the session. {"key":"_security_main"} []
[2019-11-19 11:41:51] request.INFO: Matched route "app_register". {"route":"app_register","route_parameters":{"_route":"app_register","_controller":"App\\Controller\\RegistrationController::register"},"request_uri":"http://127.0.0.1:8000/register","method":"POST"} []
[2019-11-19 11:41:51] security.DEBUG: Read existing security token from the session. {"key":"_security_main","token_class":"Symfony\\Component\\Security\\Guard\\Token\\PostAuthenticationGuardToken"} []
[2019-11-19 11:41:51] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4 FROM user t0 WHERE t0.id = ? [1] []
[2019-11-19 11:41:51] security.DEBUG: User was reloaded from a user provider. {"provider":"Symfony\\Bridge\\Doctrine\\Security\\User\\EntityUserProvider","username":"tp@gmail.com"} []
[2019-11-19 11:41:51] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2019-11-19 11:41:51] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\LoginFormAuthenticator"} []
[2019-11-19 11:41:51] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\LoginFormAuthenticator"} []
[2019-11-19 11:41:51] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4 FROM user t0 WHERE t0.email = ? ["tp7@gmail.com"] []
[2019-11-19 11:41:51] doctrine.DEBUG: "START TRANSACTION" [] []
[2019-11-19 11:41:51] doctrine.DEBUG: INSERT INTO user (email, roles, password) VALUES (?, ?, ?) {"1":"tp7@gmail.com","2":[],"3":"$argon2id$v=19$m=65536,t=4 [...]"} []
[2019-11-19 11:41:51] doctrine.DEBUG: "COMMIT" [] []
[2019-11-19 11:41:51] php.CRITICAL: Call to undefined method App\Security\LoginFormAuthenticator::render() {"exception":"[object] (Symfony\\Component\\Debug\\Exception\\FatalThrowableError(code: 0): Call to undefined method App\\Security\\LoginFormAuthenticator::render() at /home/serandour/Couette_et_café_final/AgVoy/src/Security/LoginFormAuthenticator.php:89)"} []
[2019-11-19 11:41:51] request.CRITICAL: Uncaught PHP Exception Symfony\Component\Debug\Exception\UndefinedMethodException: "Attempted to call an undefined method named "render" of class "App\Security\LoginFormAuthenticator"." at /home/serandour/Couette_et_café_final/AgVoy/src/Security/LoginFormAuthenticator.php line 89 {"exception":"[object] (Symfony\\Component\\Debug\\Exception\\UndefinedMethodException(code: 0): Attempted to call an undefined method named \"render\" of class \"App\\Security\\LoginFormAuthenticator\". at /home/serandour/Couette_et_café_final/AgVoy/src/Security/LoginFormAuthenticator.php:89)"} []
[2019-11-19 11:41:51] security.DEBUG: Stored the security token in the session. {"key":"_security_main"} []
[2019-11-19 11:44:32] request.INFO: Matched route "app_register". {"route":"app_register","route_parameters":{"_route":"app_register","_controller":"App\\Controller\\RegistrationController::register"},"request_uri":"http://127.0.0.1:8000/register","method":"POST"} []
[2019-11-19 11:44:32] security.DEBUG: Read existing security token from the session. {"key":"_security_main","token_class":"Symfony\\Component\\Security\\Guard\\Token\\PostAuthenticationGuardToken"} []
[2019-11-19 11:44:32] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4 FROM user t0 WHERE t0.id = ? [2] []
[2019-11-19 11:44:32] security.DEBUG: User was reloaded from a user provider. {"provider":"Symfony\\Bridge\\Doctrine\\Security\\User\\EntityUserProvider","username":"tp7@gmail.com"} []
[2019-11-19 11:44:32] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2019-11-19 11:44:32] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\LoginFormAuthenticator"} []
[2019-11-19 11:44:32] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\LoginFormAuthenticator"} []
[2019-11-19 11:44:32] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4 FROM user t0 WHERE t0.email = ? ["tp8@gmail.com"] []
[2019-11-19 11:44:32] doctrine.DEBUG: "START TRANSACTION" [] []
[2019-11-19 11:44:32] doctrine.DEBUG: INSERT INTO user (email, roles, password) VALUES (?, ?, ?) {"1":"tp8@gmail.com","2":[],"3":"$argon2id$v=19$m=65536,t=4 [...]"} []
[2019-11-19 11:44:32] doctrine.DEBUG: "COMMIT" [] []
[2019-11-19 11:44:32] security.DEBUG: Stored the security token in the session. {"key":"_security_main"} []
[2019-11-19 11:44:32] request.INFO: Matched route "region_index". {"route":"region_index","route_parameters":{"_route":"region_index","_controller":"App\\Controller\\BackofficeRegionController::index"},"request_uri":"http://127.0.0.1:8000/backoffice/region/","method":"GET"} []
[2019-11-19 11:44:32] security.DEBUG: Read existing security token from the session. {"key":"_security_main","token_class":"Symfony\\Component\\Security\\Guard\\Token\\PostAuthenticationGuardToken"} []
[2019-11-19 11:44:32] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4 FROM user t0 WHERE t0.id = ? [3] []
[2019-11-19 11:44:32] security.DEBUG: User was reloaded from a user provider. {"provider":"Symfony\\Bridge\\Doctrine\\Security\\User\\EntityUserProvider","username":"tp8@gmail.com"} []
[2019-11-19 11:44:32] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2019-11-19 11:44:32] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\LoginFormAuthenticator"} []
[2019-11-19 11:44:32] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\LoginFormAuthenticator"} []
[2019-11-19 11:44:32] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.presentation AS presentation_3, t0.country AS country_4 FROM region t0 [] []
[2019-11-19 11:44:33] security.DEBUG: Stored the security token in the session. {"key":"_security_main"} []
[2019-11-19 11:44:39] request.INFO: Matched route "app_login". {"route":"app_login","route_parameters":{"_route":"app_login","_controller":"App\\Controller\\SecurityController::login"},"request_uri":"http://127.0.0.1:8000/login","method":"GET"} []
[2019-11-19 11:44:39] security.DEBUG: Read existing security token from the session. {"key":"_security_main","token_class":"Symfony\\Component\\Security\\Guard\\Token\\PostAuthenticationGuardToken"} []
[2019-11-19 11:44:39] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4 FROM user t0 WHERE t0.id = ? [3] []
[2019-11-19 11:44:39] security.DEBUG: User was reloaded from a user provider. {"provider":"Symfony\\Bridge\\Doctrine\\Security\\User\\EntityUserProvider","username":"tp8@gmail.com"} []
[2019-11-19 11:44:39] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2019-11-19 11:44:39] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\LoginFormAuthenticator"} []
[2019-11-19 11:44:39] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\LoginFormAuthenticator"} []
[2019-11-19 11:44:39] security.DEBUG: Stored the security token in the session. {"key":"_security_main"} []
[2019-11-19 11:44:43] request.INFO: Matched route "app_login". {"route":"app_login","route_parameters":{"_route":"app_login","_controller":"App\\Controller\\SecurityController::login"},"request_uri":"http://127.0.0.1:8000/login","method":"POST"} []
[2019-11-19 11:44:43] security.DEBUG: Read existing security token from the session. {"key":"_security_main","token_class":"Symfony\\Component\\Security\\Guard\\Token\\PostAuthenticationGuardToken"} []
[2019-11-19 11:44:43] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4 FROM user t0 WHERE t0.id = ? [3] []
[2019-11-19 11:44:43] security.DEBUG: User was reloaded from a user provider. {"provider":"Symfony\\Bridge\\Doctrine\\Security\\User\\EntityUserProvider","username":"tp8@gmail.com"} []
[2019-11-19 11:44:43] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2019-11-19 11:44:43] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\LoginFormAuthenticator"} []
[2019-11-19 11:44:43] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\LoginFormAuthenticator"} []
[2019-11-19 11:44:43] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"main","authenticator":"App\\Security\\LoginFormAuthenticator"} []
[2019-11-19 11:44:43] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4 FROM user t0 WHERE t0.email = ? LIMIT 1 ["tp@gmail.com"] []
[2019-11-19 11:44:43] security.INFO: Guard authentication successful! {"token":"[object] (Symfony\\Component\\Security\\Guard\\Token\\PostAuthenticationGuardToken: PostAuthenticationGuardToken(user=\"tp@gmail.com\", authenticated=true, roles=\"ROLE_USER\"))","authenticator":"App\\Security\\LoginFormAuthenticator"} []
[2019-11-19 11:44:43] security.DEBUG: Guard authenticator set success response. {"response":"[object] (Symfony\\Component\\HttpFoundation\\RedirectResponse: HTTP/1.0 302 Found\r\nCache-Control: no-cache, private\r\nDate:          Tue, 19 Nov 2019 10:44:43 GMT\r\nLocation:      /backoffice/region/\r\n\r\n<!DOCTYPE html>\n<html>\n    <head>\n        <meta charset=\"UTF-8\" />\n        <meta http-equiv=\"refresh\" content=\"0;url=/backoffice/region/\" />\n\n        <title>Redirecting to /backoffice/region/</title>\n    </head>\n    <body>\n        Redirecting to <a href=\"/backoffice/region/\">/backoffice/region/</a>.\n    </body>\n</html>)","authenticator":"App\\Security\\LoginFormAuthenticator"} []
[2019-11-19 11:44:43] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"App\\Security\\LoginFormAuthenticator"} []
[2019-11-19 11:44:43] security.DEBUG: The "App\Security\LoginFormAuthenticator" authenticator set the response. Any later authenticator will not be called {"authenticator":"App\\Security\\LoginFormAuthenticator"} []
[2019-11-19 11:44:43] security.DEBUG: Stored the security token in the session. {"key":"_security_main"} []
[2019-11-19 11:44:43] request.INFO: Matched route "region_index". {"route":"region_index","route_parameters":{"_route":"region_index","_controller":"App\\Controller\\BackofficeRegionController::index"},"request_uri":"http://127.0.0.1:8000/backoffice/region/","method":"GET"} []
[2019-11-19 11:44:43] security.DEBUG: Read existing security token from the session. {"key":"_security_main","token_class":"Symfony\\Component\\Security\\Guard\\Token\\PostAuthenticationGuardToken"} []
[2019-11-19 11:44:43] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4 FROM user t0 WHERE t0.id = ? [1] []
[2019-11-19 11:44:43] security.DEBUG: User was reloaded from a user provider. {"provider":"Symfony\\Bridge\\Doctrine\\Security\\User\\EntityUserProvider","username":"tp@gmail.com"} []
[2019-11-19 11:44:43] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2019-11-19 11:44:43] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\LoginFormAuthenticator"} []
[2019-11-19 11:44:43] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\LoginFormAuthenticator"} []
[2019-11-19 11:44:43] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.presentation AS presentation_3, t0.country AS country_4 FROM region t0 [] []
[2019-11-19 11:44:43] security.DEBUG: Stored the security token in the session. {"key":"_security_main"} []
[2019-11-19 11:44:52] request.INFO: Matched route "region_new". {"route":"region_new","route_parameters":{"_route":"region_new","_controller":"App\\Controller\\BackofficeRegionController::new"},"request_uri":"http://127.0.0.1:8000/backoffice/region/new","method":"GET"} []
[2019-11-19 11:44:52] security.DEBUG: Read existing security token from the session. {"key":"_security_main","token_class":"Symfony\\Component\\Security\\Guard\\Token\\PostAuthenticationGuardToken"} []
[2019-11-19 11:44:52] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4 FROM user t0 WHERE t0.id = ? [1] []
[2019-11-19 11:44:52] security.DEBUG: User was reloaded from a user provider. {"provider":"Symfony\\Bridge\\Doctrine\\Security\\User\\EntityUserProvider","username":"tp@gmail.com"} []
[2019-11-19 11:44:52] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2019-11-19 11:44:52] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\LoginFormAuthenticator"} []
[2019-11-19 11:44:52] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\LoginFormAuthenticator"} []
[2019-11-19 11:44:52] doctrine.DEBUG: SELECT r0_.id AS id_0, r0_.summary AS summary_1, r0_.description AS description_2, r0_.capacity AS capacity_3, r0_.superficy AS superficy_4, r0_.price AS price_5, r0_.address AS address_6, r0_.owner_id AS owner_id_7 FROM room r0_ [] []
[2019-11-19 11:44:52] security.DEBUG: Stored the security token in the session. {"key":"_security_main"} []
[2019-11-19 11:46:12] request.INFO: Matched route "app_login". {"route":"app_login","route_parameters":{"_route":"app_login","_controller":"App\\Controller\\SecurityController::login"},"request_uri":"http://127.0.0.1:8000/login","method":"GET"} []
[2019-11-19 11:46:12] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2019-11-19 11:46:12] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\LoginFormAuthenticator"} []
[2019-11-19 11:46:12] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\LoginFormAuthenticator"} []
[2019-11-19 11:46:12] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2019-11-19 11:46:12] request.ERROR: Uncaught PHP Exception Symfony\Component\HttpKernel\Exception\NotFoundHttpException: "No route found for "GET /favicon.ico"" at /home/serandour/Couette_et_café_final/AgVoy/vendor/symfony/http-kernel/EventListener/RouterListener.php line 138 {"exception":"[object] (Symfony\\Component\\HttpKernel\\Exception\\NotFoundHttpException(code: 0): No route found for \"GET /favicon.ico\" at /home/serandour/Couette_et_café_final/AgVoy/vendor/symfony/http-kernel/EventListener/RouterListener.php:138, Symfony\\Component\\Routing\\Exception\\ResourceNotFoundException(code: 0): No routes found for \"/favicon.ico/\". at /home/serandour/Couette_et_café_final/AgVoy/vendor/symfony/routing/Matcher/Dumper/CompiledUrlMatcherTrait.php:70)"} []
[2019-11-19 11:47:30] request.INFO: Matched route "region_index". {"route":"region_index","route_parameters":{"_route":"region_index","_controller":"App\\Controller\\BackofficeRegionController::index"},"request_uri":"http://127.0.0.1:8000/backoffice/region/","method":"GET"} []
[2019-11-19 11:47:30] security.DEBUG: Read existing security token from the session. {"key":"_security_main","token_class":"Symfony\\Component\\Security\\Guard\\Token\\PostAuthenticationGuardToken"} []
[2019-11-19 11:47:30] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4 FROM user t0 WHERE t0.id = ? [1] []
[2019-11-19 11:47:30] security.DEBUG: User was reloaded from a user provider. {"provider":"Symfony\\Bridge\\Doctrine\\Security\\User\\EntityUserProvider","username":"tp@gmail.com"} []
[2019-11-19 11:47:30] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2019-11-19 11:47:30] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\LoginFormAuthenticator"} []
[2019-11-19 11:47:30] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\LoginFormAuthenticator"} []
[2019-11-19 11:47:30] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.presentation AS presentation_3, t0.country AS country_4 FROM region t0 [] []
[2019-11-19 11:47:30] security.DEBUG: Stored the security token in the session. {"key":"_security_main"} []
[2019-11-19 11:47:32] request.INFO: Matched route "region_show". {"route":"region_show","route_parameters":{"_route":"region_show","_controller":"App\\Controller\\BackofficeRegionController::show","id":"1"},"request_uri":"http://127.0.0.1:8000/backoffice/region/1","method":"GET"} []
[2019-11-19 11:47:32] security.DEBUG: Read existing security token from the session. {"key":"_security_main","token_class":"Symfony\\Component\\Security\\Guard\\Token\\PostAuthenticationGuardToken"} []
[2019-11-19 11:47:32] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4 FROM user t0 WHERE t0.id = ? [1] []
[2019-11-19 11:47:32] security.DEBUG: User was reloaded from a user provider. {"provider":"Symfony\\Bridge\\Doctrine\\Security\\User\\EntityUserProvider","username":"tp@gmail.com"} []
[2019-11-19 11:47:32] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2019-11-19 11:47:32] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\LoginFormAuthenticator"} []
[2019-11-19 11:47:32] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\LoginFormAuthenticator"} []
[2019-11-19 11:47:32] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.presentation AS presentation_3, t0.country AS country_4 FROM region t0 WHERE t0.id = ? ["1"] []
[2019-11-19 11:47:32] security.DEBUG: Stored the security token in the session. {"key":"_security_main"} []
[2019-11-19 11:47:37] request.INFO: Matched route "region_new". {"route":"region_new","route_parameters":{"_route":"region_new","_controller":"App\\Controller\\BackofficeRegionController::new"},"request_uri":"http://127.0.0.1:8000/backoffice/region/new","method":"GET"} []
[2019-11-19 11:47:37] security.DEBUG: Read existing security token from the session. {"key":"_security_main","token_class":"Symfony\\Component\\Security\\Guard\\Token\\PostAuthenticationGuardToken"} []
[2019-11-19 11:47:37] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4 FROM user t0 WHERE t0.id = ? [1] []
[2019-11-19 11:47:37] security.DEBUG: User was reloaded from a user provider. {"provider":"Symfony\\Bridge\\Doctrine\\Security\\User\\EntityUserProvider","username":"tp@gmail.com"} []
[2019-11-19 11:47:37] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2019-11-19 11:47:37] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\LoginFormAuthenticator"} []
[2019-11-19 11:47:37] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\LoginFormAuthenticator"} []
[2019-11-19 11:47:37] doctrine.DEBUG: SELECT r0_.id AS id_0, r0_.summary AS summary_1, r0_.description AS description_2, r0_.capacity AS capacity_3, r0_.superficy AS superficy_4, r0_.price AS price_5, r0_.address AS address_6, r0_.owner_id AS owner_id_7 FROM room r0_ [] []
[2019-11-19 11:47:37] security.DEBUG: Stored the security token in the session. {"key":"_security_main"} []
[2019-11-19 11:49:20] request.INFO: Matched route "region_new". {"route":"region_new","route_parameters":{"_route":"region_new","_controller":"App\\Controller\\BackofficeRegionController::new"},"request_uri":"http://127.0.0.1:8000/backoffice/region/new","method":"POST"} []
[2019-11-19 11:49:20] security.DEBUG: Read existing security token from the session. {"key":"_security_main","token_class":"Symfony\\Component\\Security\\Guard\\Token\\PostAuthenticationGuardToken"} []
[2019-11-19 11:49:20] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4 FROM user t0 WHERE t0.id = ? [1] []
[2019-11-19 11:49:20] security.DEBUG: User was reloaded from a user provider. {"provider":"Symfony\\Bridge\\Doctrine\\Security\\User\\EntityUserProvider","username":"tp@gmail.com"} []
[2019-11-19 11:49:20] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2019-11-19 11:49:20] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\LoginFormAuthenticator"} []
[2019-11-19 11:49:20] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\LoginFormAuthenticator"} []
[2019-11-19 11:49:20] doctrine.DEBUG: "START TRANSACTION" [] []
[2019-11-19 11:49:20] doctrine.DEBUG: INSERT INTO region (name, presentation, country) VALUES (?, ?, ?) {"1":"Bretagne","2":"La région des crêpes","3":"FR"} []
[2019-11-19 11:49:20] doctrine.DEBUG: "COMMIT" [] []
[2019-11-19 11:49:20] security.DEBUG: Stored the security token in the session. {"key":"_security_main"} []
[2019-11-19 11:49:20] request.INFO: Matched route "region_index". {"route":"region_index","route_parameters":{"_route":"region_index","_controller":"App\\Controller\\BackofficeRegionController::index"},"request_uri":"http://127.0.0.1:8000/backoffice/region/","method":"GET"} []
[2019-11-19 11:49:20] security.DEBUG: Read existing security token from the session. {"key":"_security_main","token_class":"Symfony\\Component\\Security\\Guard\\Token\\PostAuthenticationGuardToken"} []
[2019-11-19 11:49:20] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4 FROM user t0 WHERE t0.id = ? [1] []
[2019-11-19 11:49:20] security.DEBUG: User was reloaded from a user provider. {"provider":"Symfony\\Bridge\\Doctrine\\Security\\User\\EntityUserProvider","username":"tp@gmail.com"} []
[2019-11-19 11:49:20] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2019-11-19 11:49:20] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\LoginFormAuthenticator"} []
[2019-11-19 11:49:20] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\LoginFormAuthenticator"} []
[2019-11-19 11:49:20] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.presentation AS presentation_3, t0.country AS country_4 FROM region t0 [] []
[2019-11-19 11:49:20] security.DEBUG: Stored the security token in the session. {"key":"_security_main"} []
[2019-11-19 11:49:22] request.INFO: Matched route "region_show". {"route":"region_show","route_parameters":{"_route":"region_show","_controller":"App\\Controller\\BackofficeRegionController::show","id":"2"},"request_uri":"http://127.0.0.1:8000/backoffice/region/2","method":"GET"} []
[2019-11-19 11:49:22] security.DEBUG: Read existing security token from the session. {"key":"_security_main","token_class":"Symfony\\Component\\Security\\Guard\\Token\\PostAuthenticationGuardToken"} []
[2019-11-19 11:49:22] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4 FROM user t0 WHERE t0.id = ? [1] []
[2019-11-19 11:49:22] security.DEBUG: User was reloaded from a user provider. {"provider":"Symfony\\Bridge\\Doctrine\\Security\\User\\EntityUserProvider","username":"tp@gmail.com"} []
[2019-11-19 11:49:22] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2019-11-19 11:49:22] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\LoginFormAuthenticator"} []
[2019-11-19 11:49:22] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\LoginFormAuthenticator"} []
[2019-11-19 11:49:22] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.presentation AS presentation_3, t0.country AS country_4 FROM region t0 WHERE t0.id = ? ["2"] []
[2019-11-19 11:49:22] security.DEBUG: Stored the security token in the session. {"key":"_security_main"} []
[2019-11-19 11:49:29] request.INFO: Matched route "region_index". {"route":"region_index","route_parameters":{"_route":"region_index","_controller":"App\\Controller\\BackofficeRegionController::index"},"request_uri":"http://127.0.0.1:8000/backoffice/region/","method":"GET"} []
[2019-11-19 11:49:29] security.DEBUG: Read existing security token from the session. {"key":"_security_main","token_class":"Symfony\\Component\\Security\\Guard\\Token\\PostAuthenticationGuardToken"} []
[2019-11-19 11:49:29] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4 FROM user t0 WHERE t0.id = ? [1] []
[2019-11-19 11:49:29] security.DEBUG: User was reloaded from a user provider. {"provider":"Symfony\\Bridge\\Doctrine\\Security\\User\\EntityUserProvider","username":"tp@gmail.com"} []
[2019-11-19 11:49:29] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2019-11-19 11:49:29] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\LoginFormAuthenticator"} []
[2019-11-19 11:49:29] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\LoginFormAuthenticator"} []
[2019-11-19 11:49:29] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.presentation AS presentation_3, t0.country AS country_4 FROM region t0 [] []
[2019-11-19 11:49:29] security.DEBUG: Stored the security token in the session. {"key":"_security_main"} []
[2019-11-19 11:49:38] request.ERROR: Uncaught PHP Exception Symfony\Component\HttpKernel\Exception\NotFoundHttpException: "No route found for "GET /room/"" at /home/serandour/Couette_et_café_final/AgVoy/vendor/symfony/http-kernel/EventListener/RouterListener.php line 138 {"exception":"[object] (Symfony\\Component\\HttpKernel\\Exception\\NotFoundHttpException(code: 0): No route found for \"GET /room/\" at /home/serandour/Couette_et_café_final/AgVoy/vendor/symfony/http-kernel/EventListener/RouterListener.php:138, Symfony\\Component\\Routing\\Exception\\ResourceNotFoundException(code: 0): No routes found for \"/room\". at /home/serandour/Couette_et_café_final/AgVoy/vendor/symfony/routing/Matcher/Dumper/CompiledUrlMatcherTrait.php:70)"} []
[2019-11-19 11:49:49] request.INFO: Matched route "room_index". {"route":"room_index","route_parameters":{"_route":"room_index","_controller":"App\\Controller\\OwnerRoomController::index"},"request_uri":"http://127.0.0.1:8000/_owner/room/","method":"GET"} []
[2019-11-19 11:49:49] security.DEBUG: Read existing security token from the session. {"key":"_security_main","token_class":"Symfony\\Component\\Security\\Guard\\Token\\PostAuthenticationGuardToken"} []
[2019-11-19 11:49:49] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4 FROM user t0 WHERE t0.id = ? [1] []
[2019-11-19 11:49:49] security.DEBUG: User was reloaded from a user provider. {"provider":"Symfony\\Bridge\\Doctrine\\Security\\User\\EntityUserProvider","username":"tp@gmail.com"} []
[2019-11-19 11:49:49] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2019-11-19 11:49:49] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\LoginFormAuthenticator"} []
[2019-11-19 11:49:49] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\LoginFormAuthenticator"} []
[2019-11-19 11:49:49] doctrine.DEBUG: SELECT t0.id AS id_1, t0.summary AS summary_2, t0.description AS description_3, t0.capacity AS capacity_4, t0.superficy AS superficy_5, t0.price AS price_6, t0.address AS address_7, t0.owner_id AS owner_id_8 FROM room t0 [] []
[2019-11-19 11:49:49] security.DEBUG: Stored the security token in the session. {"key":"_security_main"} []
[2019-11-19 11:49:55] request.INFO: Matched route "room_show". {"route":"room_show","route_parameters":{"_route":"room_show","_controller":"App\\Controller\\OwnerRoomController::show","id":"1"},"request_uri":"http://127.0.0.1:8000/_owner/room/1","method":"GET"} []
[2019-11-19 11:49:55] security.DEBUG: Read existing security token from the session. {"key":"_security_main","token_class":"Symfony\\Component\\Security\\Guard\\Token\\PostAuthenticationGuardToken"} []
[2019-11-19 11:49:55] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4 FROM user t0 WHERE t0.id = ? [1] []
[2019-11-19 11:49:55] security.DEBUG: User was reloaded from a user provider. {"provider":"Symfony\\Bridge\\Doctrine\\Security\\User\\EntityUserProvider","username":"tp@gmail.com"} []
[2019-11-19 11:49:55] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2019-11-19 11:49:55] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\LoginFormAuthenticator"} []
[2019-11-19 11:49:55] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\LoginFormAuthenticator"} []
[2019-11-19 11:49:55] doctrine.DEBUG: SELECT t0.id AS id_1, t0.summary AS summary_2, t0.description AS description_3, t0.capacity AS capacity_4, t0.superficy AS superficy_5, t0.price AS price_6, t0.address AS address_7, t0.owner_id AS owner_id_8 FROM room t0 WHERE t0.id = ? ["1"] []
[2019-11-19 11:49:55] security.DEBUG: Stored the security token in the session. {"key":"_security_main"} []
[2019-11-19 11:50:00] request.INFO: Matched route "room_index". {"route":"room_index","route_parameters":{"_route":"room_index","_controller":"App\\Controller\\OwnerRoomController::index"},"request_uri":"http://127.0.0.1:8000/_owner/room/","method":"GET"} []
[2019-11-19 11:50:00] security.DEBUG: Read existing security token from the session. {"key":"_security_main","token_class":"Symfony\\Component\\Security\\Guard\\Token\\PostAuthenticationGuardToken"} []
[2019-11-19 11:50:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4 FROM user t0 WHERE t0.id = ? [1] []
[2019-11-19 11:50:00] security.DEBUG: User was reloaded from a user provider. {"provider":"Symfony\\Bridge\\Doctrine\\Security\\User\\EntityUserProvider","username":"tp@gmail.com"} []
[2019-11-19 11:50:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2019-11-19 11:50:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\LoginFormAuthenticator"} []
[2019-11-19 11:50:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\LoginFormAuthenticator"} []
[2019-11-19 11:50:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.summary AS summary_2, t0.description AS description_3, t0.capacity AS capacity_4, t0.superficy AS superficy_5, t0.price AS price_6, t0.address AS address_7, t0.owner_id AS owner_id_8 FROM room t0 [] []
[2019-11-19 11:50:00] security.DEBUG: Stored the security token in the session. {"key":"_security_main"} []
[2019-11-19 11:50:04] request.INFO: Matched route "room_show". {"route":"room_show","route_parameters":{"_route":"room_show","_controller":"App\\Controller\\OwnerRoomController::show","id":"1"},"request_uri":"http://127.0.0.1:8000/_owner/room/1","method":"GET"} []
[2019-11-19 11:50:04] security.DEBUG: Read existing security token from the session. {"key":"_security_main","token_class":"Symfony\\Component\\Security\\Guard\\Token\\PostAuthenticationGuardToken"} []
[2019-11-19 11:50:04] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4 FROM user t0 WHERE t0.id = ? [1] []
[2019-11-19 11:50:04] security.DEBUG: User was reloaded from a user provider. {"provider":"Symfony\\Bridge\\Doctrine\\Security\\User\\EntityUserProvider","username":"tp@gmail.com"} []
[2019-11-19 11:50:04] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2019-11-19 11:50:04] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\LoginFormAuthenticator"} []
[2019-11-19 11:50:04] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\LoginFormAuthenticator"} []
[2019-11-19 11:50:04] doctrine.DEBUG: SELECT t0.id AS id_1, t0.summary AS summary_2, t0.description AS description_3, t0.capacity AS capacity_4, t0.superficy AS superficy_5, t0.price AS price_6, t0.address AS address_7, t0.owner_id AS owner_id_8 FROM room t0 WHERE t0.id = ? ["1"] []
[2019-11-19 11:50:04] security.DEBUG: Stored the security token in the session. {"key":"_security_main"} []
[2019-11-19 11:51:17] request.INFO: Matched route "room_show". {"route":"room_show","route_parameters":{"_route":"room_show","_controller":"App\\Controller\\OwnerRoomController::show","id":"1"},"request_uri":"http://127.0.0.1:8000/_owner/room/1","method":"GET"} []
[2019-11-19 11:51:17] security.DEBUG: Read existing security token from the session. {"key":"_security_main","token_class":"Symfony\\Component\\Security\\Guard\\Token\\PostAuthenticationGuardToken"} []
[2019-11-19 11:51:17] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4 FROM user t0 WHERE t0.id = ? [1] []
[2019-11-19 11:51:17] security.DEBUG: User was reloaded from a user provider. {"provider":"Symfony\\Bridge\\Doctrine\\Security\\User\\EntityUserProvider","username":"tp@gmail.com"} []
[2019-11-19 11:51:17] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2019-11-19 11:51:17] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\LoginFormAuthenticator"} []
[2019-11-19 11:51:17] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\LoginFormAuthenticator"} []
[2019-11-19 11:51:17] doctrine.DEBUG: SELECT t0.id AS id_1, t0.summary AS summary_2, t0.description AS description_3, t0.capacity AS capacity_4, t0.superficy AS superficy_5, t0.price AS price_6, t0.address AS address_7, t0.owner_id AS owner_id_8 FROM room t0 WHERE t0.id = ? ["1"] []
[2019-11-19 11:51:17] request.CRITICAL: Uncaught PHP Exception Twig\Error\RuntimeError: "An exception has been thrown during the rendering of a template ("Catchable Fatal Error: Object of class Doctrine\ORM\PersistentCollection could not be converted to string")." at /home/serandour/Couette_et_café_final/AgVoy/templates/room/show.html.twig line 40 {"exception":"[object] (Twig\\Error\\RuntimeError(code: 0): An exception has been thrown during the rendering of a template (\"Catchable Fatal Error: Object of class Doctrine\\ORM\\PersistentCollection could not be converted to string\"). at /home/serandour/Couette_et_café_final/AgVoy/templates/room/show.html.twig:40, ErrorException(code: 0): Catchable Fatal Error: Object of class Doctrine\\ORM\\PersistentCollection could not be converted to string at /home/serandour/Couette_et_café_final/AgVoy/var/cache/dev/twig/50/5046d0c48d58163196b79e124e267328643e82fa9294b8027abe2f1c342cb246.php:126)"} []
[2019-11-19 11:51:17] security.DEBUG: Stored the security token in the session. {"key":"_security_main"} []
[2019-11-19 11:59:23] request.INFO: Matched route "room_show". {"route":"room_show","route_parameters":{"_route":"room_show","_controller":"App\\Controller\\OwnerRoomController::show","id":"1"},"request_uri":"http://127.0.0.1:8000/_owner/room/1","method":"GET"} []
[2019-11-19 11:59:23] security.DEBUG: Read existing security token from the session. {"key":"_security_main","token_class":"Symfony\\Component\\Security\\Guard\\Token\\PostAuthenticationGuardToken"} []
[2019-11-19 11:59:23] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4 FROM user t0 WHERE t0.id = ? [1] []
[2019-11-19 11:59:23] security.DEBUG: User was reloaded from a user provider. {"provider":"Symfony\\Bridge\\Doctrine\\Security\\User\\EntityUserProvider","username":"tp@gmail.com"} []
[2019-11-19 11:59:23] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2019-11-19 11:59:23] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\LoginFormAuthenticator"} []
[2019-11-19 11:59:23] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\LoginFormAuthenticator"} []
[2019-11-19 11:59:23] doctrine.DEBUG: SELECT t0.id AS id_1, t0.summary AS summary_2, t0.description AS description_3, t0.capacity AS capacity_4, t0.superficy AS superficy_5, t0.price AS price_6, t0.address AS address_7, t0.owner_id AS owner_id_8 FROM room t0 WHERE t0.id = ? ["1"] []
[2019-11-19 11:59:23] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.presentation AS presentation_3, t0.country AS country_4 FROM region t0 INNER JOIN room_region ON t0.id = room_region.region_id WHERE room_region.room_id = ? [1] []
[2019-11-19 11:59:23] security.DEBUG: Stored the security token in the session. {"key":"_security_main"} []
[2019-11-19 11:59:39] request.ERROR: Uncaught PHP Exception Symfony\Component\HttpKernel\Exception\NotFoundHttpException: "No route found for "GET /backoffice/"" at /home/serandour/Couette_et_café_final/AgVoy/vendor/symfony/http-kernel/EventListener/RouterListener.php line 138 {"exception":"[object] (Symfony\\Component\\HttpKernel\\Exception\\NotFoundHttpException(code: 0): No route found for \"GET /backoffice/\" at /home/serandour/Couette_et_café_final/AgVoy/vendor/symfony/http-kernel/EventListener/RouterListener.php:138, Symfony\\Component\\Routing\\Exception\\ResourceNotFoundException(code: 0): No routes found for \"/backoffice\". at /home/serandour/Couette_et_café_final/AgVoy/vendor/symfony/routing/Matcher/Dumper/CompiledUrlMatcherTrait.php:70)"} []
[2019-11-19 11:59:42] request.INFO: Matched route "region_show". {"route":"region_show","route_parameters":{"_route":"region_show","_controller":"App\\Controller\\BackofficeRegionController::show","id":"list"},"request_uri":"http://127.0.0.1:8000/backoffice/region/list","method":"GET"} []
[2019-11-19 11:59:42] security.DEBUG: Read existing security token from the session. {"key":"_security_main","token_class":"Symfony\\Component\\Security\\Guard\\Token\\PostAuthenticationGuardToken"} []
[2019-11-19 11:59:42] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4 FROM user t0 WHERE t0.id = ? [1] []
[2019-11-19 11:59:42] security.DEBUG: User was reloaded from a user provider. {"provider":"Symfony\\Bridge\\Doctrine\\Security\\User\\EntityUserProvider","username":"tp@gmail.com"} []
[2019-11-19 11:59:42] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2019-11-19 11:59:42] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\LoginFormAuthenticator"} []
[2019-11-19 11:59:42] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\LoginFormAuthenticator"} []
[2019-11-19 11:59:42] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.presentation AS presentation_3, t0.country AS country_4 FROM region t0 WHERE t0.id = ? ["list"] []
[2019-11-19 11:59:42] request.ERROR: Uncaught PHP Exception Symfony\Component\HttpKernel\Exception\NotFoundHttpException: "App\Entity\Region object not found by the @ParamConverter annotation." at /home/serandour/Couette_et_café_final/AgVoy/vendor/sensio/framework-extra-bundle/src/Request/ParamConverter/DoctrineParamConverter.php line 107 {"exception":"[object] (Symfony\\Component\\HttpKernel\\Exception\\NotFoundHttpException(code: 0): App\\Entity\\Region object not found by the @ParamConverter annotation. at /home/serandour/Couette_et_café_final/AgVoy/vendor/sensio/framework-extra-bundle/src/Request/ParamConverter/DoctrineParamConverter.php:107)"} []
[2019-11-19 11:59:42] security.DEBUG: Stored the security token in the session. {"key":"_security_main"} []
[2019-11-19 11:59:46] request.INFO: Matched route "region_index". {"route":"region_index","route_parameters":{"_route":"region_index","_controller":"App\\Controller\\BackofficeRegionController::index"},"request_uri":"http://127.0.0.1:8000/backoffice/region/","method":"GET"} []
[2019-11-19 11:59:46] security.DEBUG: Read existing security token from the session. {"key":"_security_main","token_class":"Symfony\\Component\\Security\\Guard\\Token\\PostAuthenticationGuardToken"} []
[2019-11-19 11:59:46] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4 FROM user t0 WHERE t0.id = ? [1] []
[2019-11-19 11:59:46] security.DEBUG: User was reloaded from a user provider. {"provider":"Symfony\\Bridge\\Doctrine\\Security\\User\\EntityUserProvider","username":"tp@gmail.com"} []
[2019-11-19 11:59:46] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2019-11-19 11:59:46] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\LoginFormAuthenticator"} []
[2019-11-19 11:59:46] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\LoginFormAuthenticator"} []
[2019-11-19 11:59:46] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.presentation AS presentation_3, t0.country AS country_4 FROM region t0 [] []
[2019-11-19 11:59:46] security.DEBUG: Stored the security token in the session. {"key":"_security_main"} []
[2019-11-19 11:59:48] request.INFO: Matched route "region_new". {"route":"region_new","route_parameters":{"_route":"region_new","_controller":"App\\Controller\\BackofficeRegionController::new"},"request_uri":"http://127.0.0.1:8000/backoffice/region/new","method":"GET"} []
[2019-11-19 11:59:48] security.DEBUG: Read existing security token from the session. {"key":"_security_main","token_class":"Symfony\\Component\\Security\\Guard\\Token\\PostAuthenticationGuardToken"} []
[2019-11-19 11:59:48] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4 FROM user t0 WHERE t0.id = ? [1] []
[2019-11-19 11:59:48] security.DEBUG: User was reloaded from a user provider. {"provider":"Symfony\\Bridge\\Doctrine\\Security\\User\\EntityUserProvider","username":"tp@gmail.com"} []
[2019-11-19 11:59:48] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2019-11-19 11:59:48] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\LoginFormAuthenticator"} []
[2019-11-19 11:59:48] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\LoginFormAuthenticator"} []
[2019-11-19 11:59:48] doctrine.DEBUG: SELECT r0_.id AS id_0, r0_.summary AS summary_1, r0_.description AS description_2, r0_.capacity AS capacity_3, r0_.superficy AS superficy_4, r0_.price AS price_5, r0_.address AS address_6, r0_.owner_id AS owner_id_7 FROM room r0_ [] []
[2019-11-19 11:59:48] security.DEBUG: Stored the security token in the session. {"key":"_security_main"} []
[2019-11-19 12:02:28] request.INFO: Matched route "region_new". {"route":"region_new","route_parameters":{"_route":"region_new","_controller":"App\\Controller\\BackofficeRegionController::new"},"request_uri":"http://127.0.0.1:8000/backoffice/region/new","method":"POST"} []
[2019-11-19 12:02:28] security.DEBUG: Read existing security token from the session. {"key":"_security_main","token_class":"Symfony\\Component\\Security\\Guard\\Token\\PostAuthenticationGuardToken"} []
[2019-11-19 12:02:28] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4 FROM user t0 WHERE t0.id = ? [1] []
[2019-11-19 12:02:28] security.DEBUG: User was reloaded from a user provider. {"provider":"Symfony\\Bridge\\Doctrine\\Security\\User\\EntityUserProvider","username":"tp@gmail.com"} []
[2019-11-19 12:02:28] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2019-11-19 12:02:28] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\LoginFormAuthenticator"} []
[2019-11-19 12:02:28] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\LoginFormAuthenticator"} []
[2019-11-19 12:02:28] doctrine.DEBUG: SELECT r0_.id AS id_0, r0_.summary AS summary_1, r0_.description AS description_2, r0_.capacity AS capacity_3, r0_.superficy AS superficy_4, r0_.price AS price_5, r0_.address AS address_6, r0_.owner_id AS owner_id_7 FROM room r0_ WHERE r0_.id IN (?) [["1"]] []
[2019-11-19 12:02:28] doctrine.DEBUG: "START TRANSACTION" [] []
[2019-11-19 12:02:28] doctrine.DEBUG: INSERT INTO region (name, presentation, country) VALUES (?, ?, ?) {"1":"Grand-Est","2":"La région de la Choucroute !","3":"FR"} []
[2019-11-19 12:02:28] doctrine.DEBUG: "COMMIT" [] []
[2019-11-19 12:02:28] security.DEBUG: Stored the security token in the session. {"key":"_security_main"} []
[2019-11-19 12:02:28] request.INFO: Matched route "region_index". {"route":"region_index","route_parameters":{"_route":"region_index","_controller":"App\\Controller\\BackofficeRegionController::index"},"request_uri":"http://127.0.0.1:8000/backoffice/region/","method":"GET"} []
[2019-11-19 12:02:28] security.DEBUG: Read existing security token from the session. {"key":"_security_main","token_class":"Symfony\\Component\\Security\\Guard\\Token\\PostAuthenticationGuardToken"} []
[2019-11-19 12:02:28] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4 FROM user t0 WHERE t0.id = ? [1] []
[2019-11-19 12:02:28] security.DEBUG: User was reloaded from a user provider. {"provider":"Symfony\\Bridge\\Doctrine\\Security\\User\\EntityUserProvider","username":"tp@gmail.com"} []
[2019-11-19 12:02:28] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2019-11-19 12:02:28] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\LoginFormAuthenticator"} []
[2019-11-19 12:02:28] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\LoginFormAuthenticator"} []
[2019-11-19 12:02:28] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.presentation AS presentation_3, t0.country AS country_4 FROM region t0 [] []
[2019-11-19 12:02:28] security.DEBUG: Stored the security token in the session. {"key":"_security_main"} []
[2019-11-19 12:02:39] request.ERROR: Uncaught PHP Exception Symfony\Component\HttpKernel\Exception\NotFoundHttpException: "No route found for "GET /backoffice/_owner/room"" at /home/serandour/Couette_et_café_final/AgVoy/vendor/symfony/http-kernel/EventListener/RouterListener.php line 138 {"exception":"[object] (Symfony\\Component\\HttpKernel\\Exception\\NotFoundHttpException(code: 0): No route found for \"GET /backoffice/_owner/room\" at /home/serandour/Couette_et_café_final/AgVoy/vendor/symfony/http-kernel/EventListener/RouterListener.php:138, Symfony\\Component\\Routing\\Exception\\ResourceNotFoundException(code: 0): No routes found for \"/backoffice/_owner/room/\". at /home/serandour/Couette_et_café_final/AgVoy/vendor/symfony/routing/Matcher/Dumper/CompiledUrlMatcherTrait.php:70)"} []
[2019-11-19 12:02:49] request.INFO: Matched route "room_index". {"route":"room_index","route_parameters":{"_controller":"Symfony\\Bundle\\FrameworkBundle\\Controller\\RedirectController::urlRedirectAction","path":"/_owner/room/","permanent":true,"scheme":null,"httpPort":8000,"httpsPort":443,"_route":"room_index"},"request_uri":"http://127.0.0.1:8000/_owner/room","method":"GET"} []
[2019-11-19 12:02:49] security.DEBUG: Read existing security token from the session. {"key":"_security_main","token_class":"Symfony\\Component\\Security\\Guard\\Token\\PostAuthenticationGuardToken"} []
[2019-11-19 12:02:49] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4 FROM user t0 WHERE t0.id = ? [1] []
[2019-11-19 12:02:49] security.DEBUG: User was reloaded from a user provider. {"provider":"Symfony\\Bridge\\Doctrine\\Security\\User\\EntityUserProvider","username":"tp@gmail.com"} []
[2019-11-19 12:02:49] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2019-11-19 12:02:49] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\LoginFormAuthenticator"} []
[2019-11-19 12:02:49] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\LoginFormAuthenticator"} []
[2019-11-19 12:02:49] security.DEBUG: Stored the security token in the session. {"key":"_security_main"} []
[2019-11-19 12:02:49] request.INFO: Matched route "room_index". {"route":"room_index","route_parameters":{"_route":"room_index","_controller":"App\\Controller\\OwnerRoomController::index"},"request_uri":"http://127.0.0.1:8000/_owner/room/","method":"GET"} []
[2019-11-19 12:02:49] security.DEBUG: Read existing security token from the session. {"key":"_security_main","token_class":"Symfony\\Component\\Security\\Guard\\Token\\PostAuthenticationGuardToken"} []
[2019-11-19 12:02:49] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4 FROM user t0 WHERE t0.id = ? [1] []
[2019-11-19 12:02:49] security.DEBUG: User was reloaded from a user provider. {"provider":"Symfony\\Bridge\\Doctrine\\Security\\User\\EntityUserProvider","username":"tp@gmail.com"} []
[2019-11-19 12:02:49] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2019-11-19 12:02:49] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\LoginFormAuthenticator"} []
[2019-11-19 12:02:49] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\LoginFormAuthenticator"} []
[2019-11-19 12:02:49] doctrine.DEBUG: SELECT t0.id AS id_1, t0.summary AS summary_2, t0.description AS description_3, t0.capacity AS capacity_4, t0.superficy AS superficy_5, t0.price AS price_6, t0.address AS address_7, t0.owner_id AS owner_id_8 FROM room t0 [] []
[2019-11-19 12:02:49] security.DEBUG: Stored the security token in the session. {"key":"_security_main"} []
[2019-11-19 12:02:50] request.INFO: Matched route "room_show". {"route":"room_show","route_parameters":{"_route":"room_show","_controller":"App\\Controller\\OwnerRoomController::show","id":"1"},"request_uri":"http://127.0.0.1:8000/_owner/room/1","method":"GET"} []
[2019-11-19 12:02:50] security.DEBUG: Read existing security token from the session. {"key":"_security_main","token_class":"Symfony\\Component\\Security\\Guard\\Token\\PostAuthenticationGuardToken"} []
[2019-11-19 12:02:50] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4 FROM user t0 WHERE t0.id = ? [1] []
[2019-11-19 12:02:50] security.DEBUG: User was reloaded from a user provider. {"provider":"Symfony\\Bridge\\Doctrine\\Security\\User\\EntityUserProvider","username":"tp@gmail.com"} []
[2019-11-19 12:02:50] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2019-11-19 12:02:50] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\LoginFormAuthenticator"} []
[2019-11-19 12:02:50] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\LoginFormAuthenticator"} []
[2019-11-19 12:02:50] doctrine.DEBUG: SELECT t0.id AS id_1, t0.summary AS summary_2, t0.description AS description_3, t0.capacity AS capacity_4, t0.superficy AS superficy_5, t0.price AS price_6, t0.address AS address_7, t0.owner_id AS owner_id_8 FROM room t0 WHERE t0.id = ? ["1"] []
[2019-11-19 12:02:50] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.presentation AS presentation_3, t0.country AS country_4 FROM region t0 INNER JOIN room_region ON t0.id = room_region.region_id WHERE room_region.room_id = ? [1] []
[2019-11-19 12:02:50] security.DEBUG: Stored the security token in the session. {"key":"_security_main"} []
[2019-11-19 12:03:03] request.INFO: Matched route "region_index". {"route":"region_index","route_parameters":{"_route":"region_index","_controller":"App\\Controller\\BackofficeRegionController::index"},"request_uri":"http://127.0.0.1:8000/backoffice/region/","method":"GET"} []
[2019-11-19 12:03:03] security.DEBUG: Read existing security token from the session. {"key":"_security_main","token_class":"Symfony\\Component\\Security\\Guard\\Token\\PostAuthenticationGuardToken"} []
[2019-11-19 12:03:03] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4 FROM user t0 WHERE t0.id = ? [1] []
[2019-11-19 12:03:03] security.DEBUG: User was reloaded from a user provider. {"provider":"Symfony\\Bridge\\Doctrine\\Security\\User\\EntityUserProvider","username":"tp@gmail.com"} []
[2019-11-19 12:03:03] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2019-11-19 12:03:03] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\LoginFormAuthenticator"} []
[2019-11-19 12:03:03] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\LoginFormAuthenticator"} []
[2019-11-19 12:03:03] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.presentation AS presentation_3, t0.country AS country_4 FROM region t0 [] []
[2019-11-19 12:03:03] security.DEBUG: Stored the security token in the session. {"key":"_security_main"} []
[2019-11-19 12:03:05] request.INFO: Matched route "region_show". {"route":"region_show","route_parameters":{"_route":"region_show","_controller":"App\\Controller\\BackofficeRegionController::show","id":"3"},"request_uri":"http://127.0.0.1:8000/backoffice/region/3","method":"GET"} []
[2019-11-19 12:03:05] security.DEBUG: Read existing security token from the session. {"key":"_security_main","token_class":"Symfony\\Component\\Security\\Guard\\Token\\PostAuthenticationGuardToken"} []
[2019-11-19 12:03:05] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4 FROM user t0 WHERE t0.id = ? [1] []
[2019-11-19 12:03:05] security.DEBUG: User was reloaded from a user provider. {"provider":"Symfony\\Bridge\\Doctrine\\Security\\User\\EntityUserProvider","username":"tp@gmail.com"} []
[2019-11-19 12:03:05] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2019-11-19 12:03:05] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\LoginFormAuthenticator"} []
[2019-11-19 12:03:05] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\LoginFormAuthenticator"} []
[2019-11-19 12:03:05] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.presentation AS presentation_3, t0.country AS country_4 FROM region t0 WHERE t0.id = ? ["3"] []
[2019-11-19 12:03:05] security.DEBUG: Stored the security token in the session. {"key":"_security_main"} []
[2019-11-19 12:03:08] request.INFO: Matched route "region_delete". {"route":"region_delete","route_parameters":{"_route":"region_delete","_controller":"App\\Controller\\BackofficeRegionController::delete","id":"3"},"request_uri":"http://127.0.0.1:8000/backoffice/region/3","method":"DELETE"} []
[2019-11-19 12:03:08] security.DEBUG: Read existing security token from the session. {"key":"_security_main","token_class":"Symfony\\Component\\Security\\Guard\\Token\\PostAuthenticationGuardToken"} []
[2019-11-19 12:03:08] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4 FROM user t0 WHERE t0.id = ? [1] []
[2019-11-19 12:03:08] security.DEBUG: User was reloaded from a user provider. {"provider":"Symfony\\Bridge\\Doctrine\\Security\\User\\EntityUserProvider","username":"tp@gmail.com"} []
[2019-11-19 12:03:08] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2019-11-19 12:03:08] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\LoginFormAuthenticator"} []
[2019-11-19 12:03:08] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\LoginFormAuthenticator"} []
[2019-11-19 12:03:08] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.presentation AS presentation_3, t0.country AS country_4 FROM region t0 WHERE t0.id = ? ["3"] []
[2019-11-19 12:03:08] doctrine.DEBUG: "START TRANSACTION" [] []
[2019-11-19 12:03:08] doctrine.DEBUG: DELETE FROM room_region WHERE region_id = ? [3] []
[2019-11-19 12:03:08] doctrine.DEBUG: DELETE FROM region WHERE id = ? [3] []
[2019-11-19 12:03:08] doctrine.DEBUG: "COMMIT" [] []
[2019-11-19 12:03:08] security.DEBUG: Stored the security token in the session. {"key":"_security_main"} []
[2019-11-19 12:03:08] request.INFO: Matched route "region_index". {"route":"region_index","route_parameters":{"_route":"region_index","_controller":"App\\Controller\\BackofficeRegionController::index"},"request_uri":"http://127.0.0.1:8000/backoffice/region/","method":"GET"} []
[2019-11-19 12:03:08] security.DEBUG: Read existing security token from the session. {"key":"_security_main","token_class":"Symfony\\Component\\Security\\Guard\\Token\\PostAuthenticationGuardToken"} []
[2019-11-19 12:03:08] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4 FROM user t0 WHERE t0.id = ? [1] []
[2019-11-19 12:03:08] security.DEBUG: User was reloaded from a user provider. {"provider":"Symfony\\Bridge\\Doctrine\\Security\\User\\EntityUserProvider","username":"tp@gmail.com"} []
[2019-11-19 12:03:08] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2019-11-19 12:03:08] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\LoginFormAuthenticator"} []
[2019-11-19 12:03:08] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\LoginFormAuthenticator"} []
[2019-11-19 12:03:08] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.presentation AS presentation_3, t0.country AS country_4 FROM region t0 [] []
[2019-11-19 12:03:08] security.DEBUG: Stored the security token in the session. {"key":"_security_main"} []
[2019-11-19 12:03:09] request.INFO: Matched route "region_new". {"route":"region_new","route_parameters":{"_route":"region_new","_controller":"App\\Controller\\BackofficeRegionController::new"},"request_uri":"http://127.0.0.1:8000/backoffice/region/new","method":"GET"} []
[2019-11-19 12:03:09] security.DEBUG: Read existing security token from the session. {"key":"_security_main","token_class":"Symfony\\Component\\Security\\Guard\\Token\\PostAuthenticationGuardToken"} []
[2019-11-19 12:03:09] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4 FROM user t0 WHERE t0.id = ? [1] []
[2019-11-19 12:03:09] security.DEBUG: User was reloaded from a user provider. {"provider":"Symfony\\Bridge\\Doctrine\\Security\\User\\EntityUserProvider","username":"tp@gmail.com"} []
[2019-11-19 12:03:09] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2019-11-19 12:03:09] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\LoginFormAuthenticator"} []
[2019-11-19 12:03:09] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\LoginFormAuthenticator"} []
[2019-11-19 12:03:09] doctrine.DEBUG: SELECT r0_.id AS id_0, r0_.summary AS summary_1, r0_.description AS description_2, r0_.capacity AS capacity_3, r0_.superficy AS superficy_4, r0_.price AS price_5, r0_.address AS address_6, r0_.owner_id AS owner_id_7 FROM room r0_ [] []
[2019-11-19 12:03:09] security.DEBUG: Stored the security token in the session. {"key":"_security_main"} []
[2019-11-19 12:03:35] request.INFO: Matched route "region_new". {"route":"region_new","route_parameters":{"_route":"region_new","_controller":"App\\Controller\\BackofficeRegionController::new"},"request_uri":"http://127.0.0.1:8000/backoffice/region/new","method":"POST"} []
[2019-11-19 12:03:35] security.DEBUG: Read existing security token from the session. {"key":"_security_main","token_class":"Symfony\\Component\\Security\\Guard\\Token\\PostAuthenticationGuardToken"} []
[2019-11-19 12:03:35] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4 FROM user t0 WHERE t0.id = ? [1] []
[2019-11-19 12:03:35] security.DEBUG: User was reloaded from a user provider. {"provider":"Symfony\\Bridge\\Doctrine\\Security\\User\\EntityUserProvider","username":"tp@gmail.com"} []
[2019-11-19 12:03:35] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2019-11-19 12:03:35] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\LoginFormAuthenticator"} []
[2019-11-19 12:03:35] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\LoginFormAuthenticator"} []
[2019-11-19 12:03:35] doctrine.DEBUG: SELECT r0_.id AS id_0, r0_.summary AS summary_1, r0_.description AS description_2, r0_.capacity AS capacity_3, r0_.superficy AS superficy_4, r0_.price AS price_5, r0_.address AS address_6, r0_.owner_id AS owner_id_7 FROM room r0_ WHERE r0_.id IN (?) [["1"]] []
[2019-11-19 12:03:35] doctrine.DEBUG: "START TRANSACTION" [] []
[2019-11-19 12:03:35] doctrine.DEBUG: INSERT INTO region (name, presentation, country) VALUES (?, ?, ?) {"1":"Grand-Est","2":"La région de la Choucroute","3":"FR"} []
[2019-11-19 12:03:35] doctrine.DEBUG: "COMMIT" [] []
[2019-11-19 12:03:35] security.DEBUG: Stored the security token in the session. {"key":"_security_main"} []
[2019-11-19 12:03:35] request.INFO: Matched route "region_index". {"route":"region_index","route_parameters":{"_route":"region_index","_controller":"App\\Controller\\BackofficeRegionController::index"},"request_uri":"http://127.0.0.1:8000/backoffice/region/","method":"GET"} []
[2019-11-19 12:03:35] security.DEBUG: Read existing security token from the session. {"key":"_security_main","token_class":"Symfony\\Component\\Security\\Guard\\Token\\PostAuthenticationGuardToken"} []
[2019-11-19 12:03:35] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4 FROM user t0 WHERE t0.id = ? [1] []
[2019-11-19 12:03:35] security.DEBUG: User was reloaded from a user provider. {"provider":"Symfony\\Bridge\\Doctrine\\Security\\User\\EntityUserProvider","username":"tp@gmail.com"} []
[2019-11-19 12:03:35] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2019-11-19 12:03:35] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\LoginFormAuthenticator"} []
[2019-11-19 12:03:35] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\LoginFormAuthenticator"} []
[2019-11-19 12:03:35] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.presentation AS presentation_3, t0.country AS country_4 FROM region t0 [] []
[2019-11-19 12:03:35] security.DEBUG: Stored the security token in the session. {"key":"_security_main"} []
[2019-11-19 12:03:49] request.INFO: Matched route "room_index". {"route":"room_index","route_parameters":{"_route":"room_index","_controller":"App\\Controller\\OwnerRoomController::index"},"request_uri":"http://127.0.0.1:8000/_owner/room/","method":"GET"} []
[2019-11-19 12:03:49] security.DEBUG: Read existing security token from the session. {"key":"_security_main","token_class":"Symfony\\Component\\Security\\Guard\\Token\\PostAuthenticationGuardToken"} []
[2019-11-19 12:03:49] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4 FROM user t0 WHERE t0.id = ? [1] []
[2019-11-19 12:03:49] security.DEBUG: User was reloaded from a user provider. {"provider":"Symfony\\Bridge\\Doctrine\\Security\\User\\EntityUserProvider","username":"tp@gmail.com"} []
[2019-11-19 12:03:49] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2019-11-19 12:03:49] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\LoginFormAuthenticator"} []
[2019-11-19 12:03:49] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\LoginFormAuthenticator"} []
[2019-11-19 12:03:49] doctrine.DEBUG: SELECT t0.id AS id_1, t0.summary AS summary_2, t0.description AS description_3, t0.capacity AS capacity_4, t0.superficy AS superficy_5, t0.price AS price_6, t0.address AS address_7, t0.owner_id AS owner_id_8 FROM room t0 [] []
[2019-11-19 12:03:49] security.DEBUG: Stored the security token in the session. {"key":"_security_main"} []
[2019-11-19 12:03:51] request.INFO: Matched route "room_show". {"route":"room_show","route_parameters":{"_route":"room_show","_controller":"App\\Controller\\OwnerRoomController::show","id":"1"},"request_uri":"http://127.0.0.1:8000/_owner/room/1","method":"GET"} []
[2019-11-19 12:03:51] security.DEBUG: Read existing security token from the session. {"key":"_security_main","token_class":"Symfony\\Component\\Security\\Guard\\Token\\PostAuthenticationGuardToken"} []
[2019-11-19 12:03:51] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4 FROM user t0 WHERE t0.id = ? [1] []
[2019-11-19 12:03:51] security.DEBUG: User was reloaded from a user provider. {"provider":"Symfony\\Bridge\\Doctrine\\Security\\User\\EntityUserProvider","username":"tp@gmail.com"} []
[2019-11-19 12:03:51] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2019-11-19 12:03:51] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\LoginFormAuthenticator"} []
[2019-11-19 12:03:51] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\LoginFormAuthenticator"} []
[2019-11-19 12:03:51] doctrine.DEBUG: SELECT t0.id AS id_1, t0.summary AS summary_2, t0.description AS description_3, t0.capacity AS capacity_4, t0.superficy AS superficy_5, t0.price AS price_6, t0.address AS address_7, t0.owner_id AS owner_id_8 FROM room t0 WHERE t0.id = ? ["1"] []
[2019-11-19 12:03:51] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.presentation AS presentation_3, t0.country AS country_4 FROM region t0 INNER JOIN room_region ON t0.id = room_region.region_id WHERE room_region.room_id = ? [1] []
[2019-11-19 12:03:51] security.DEBUG: Stored the security token in the session. {"key":"_security_main"} []
[2019-11-19 12:05:02] request.INFO: Matched route "room_new". {"route":"room_new","route_parameters":{"_route":"room_new","_controller":"App\\Controller\\OwnerRoomController::new"},"request_uri":"http://127.0.0.1:8000/_owner/room/new","method":"GET"} []
[2019-11-19 12:05:02] security.DEBUG: Read existing security token from the session. {"key":"_security_main","token_class":"Symfony\\Component\\Security\\Guard\\Token\\PostAuthenticationGuardToken"} []
[2019-11-19 12:05:02] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4 FROM user t0 WHERE t0.id = ? [1] []
[2019-11-19 12:05:02] security.DEBUG: User was reloaded from a user provider. {"provider":"Symfony\\Bridge\\Doctrine\\Security\\User\\EntityUserProvider","username":"tp@gmail.com"} []
[2019-11-19 12:05:02] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2019-11-19 12:05:02] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\LoginFormAuthenticator"} []
[2019-11-19 12:05:02] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\LoginFormAuthenticator"} []
[2019-11-19 12:05:02] doctrine.DEBUG: SELECT r0_.id AS id_0, r0_.name AS name_1, r0_.presentation AS presentation_2, r0_.country AS country_3 FROM region r0_ [] []
[2019-11-19 12:05:02] doctrine.DEBUG: SELECT o0_.id AS id_0, o0_.firstname AS firstname_1, o0_.family_name AS family_name_2, o0_.address AS address_3, o0_.country AS country_4 FROM owner o0_ [] []
[2019-11-19 12:05:02] security.DEBUG: Stored the security token in the session. {"key":"_security_main"} []
[2019-11-19 12:05:05] request.INFO: Matched route "room_new". {"route":"room_new","route_parameters":{"_route":"room_new","_controller":"App\\Controller\\OwnerRoomController::new"},"request_uri":"http://127.0.0.1:8000/_owner/room/new","method":"GET"} []
[2019-11-19 12:05:05] security.DEBUG: Read existing security token from the session. {"key":"_security_main","token_class":"Symfony\\Component\\Security\\Guard\\Token\\PostAuthenticationGuardToken"} []
[2019-11-19 12:05:05] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4 FROM user t0 WHERE t0.id = ? [1] []
[2019-11-19 12:05:05] security.DEBUG: User was reloaded from a user provider. {"provider":"Symfony\\Bridge\\Doctrine\\Security\\User\\EntityUserProvider","username":"tp@gmail.com"} []
[2019-11-19 12:05:05] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2019-11-19 12:05:05] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\LoginFormAuthenticator"} []
[2019-11-19 12:05:05] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\LoginFormAuthenticator"} []
[2019-11-19 12:05:05] doctrine.DEBUG: SELECT r0_.id AS id_0, r0_.name AS name_1, r0_.presentation AS presentation_2, r0_.country AS country_3 FROM region r0_ [] []
[2019-11-19 12:05:05] doctrine.DEBUG: SELECT o0_.id AS id_0, o0_.firstname AS firstname_1, o0_.family_name AS family_name_2, o0_.address AS address_3, o0_.country AS country_4 FROM owner o0_ [] []
[2019-11-19 12:05:05] security.DEBUG: Stored the security token in the session. {"key":"_security_main"} []
[2019-11-19 12:06:49] request.INFO: Matched route "room_index". {"route":"room_index","route_parameters":{"_route":"room_index","_controller":"App\\Controller\\OwnerRoomController::index"},"request_uri":"http://127.0.0.1:8000/_owner/room/","method":"GET"} []
[2019-11-19 12:06:49] security.DEBUG: Read existing security token from the session. {"key":"_security_main","token_class":"Symfony\\Component\\Security\\Guard\\Token\\PostAuthenticationGuardToken"} []
[2019-11-19 12:06:49] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4 FROM user t0 WHERE t0.id = ? [1] []
[2019-11-19 12:06:49] security.DEBUG: User was reloaded from a user provider. {"provider":"Symfony\\Bridge\\Doctrine\\Security\\User\\EntityUserProvider","username":"tp@gmail.com"} []
[2019-11-19 12:06:49] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2019-11-19 12:06:49] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\LoginFormAuthenticator"} []
[2019-11-19 12:06:49] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\LoginFormAuthenticator"} []
[2019-11-19 12:06:49] doctrine.DEBUG: SELECT t0.id AS id_1, t0.summary AS summary_2, t0.description AS description_3, t0.capacity AS capacity_4, t0.superficy AS superficy_5, t0.price AS price_6, t0.address AS address_7, t0.owner_id AS owner_id_8 FROM room t0 [] []
[2019-11-19 12:06:49] security.DEBUG: Stored the security token in the session. {"key":"_security_main"} []
[2019-11-19 12:06:55] request.INFO: Matched route "region_index". {"route":"region_index","route_parameters":{"_route":"region_index","_controller":"App\\Controller\\BackofficeRegionController::index"},"request_uri":"http://127.0.0.1:8000/backoffice/region/","method":"GET"} []
[2019-11-19 12:06:55] security.DEBUG: Read existing security token from the session. {"key":"_security_main","token_class":"Symfony\\Component\\Security\\Guard\\Token\\PostAuthenticationGuardToken"} []
[2019-11-19 12:06:55] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4 FROM user t0 WHERE t0.id = ? [1] []
[2019-11-19 12:06:55] security.DEBUG: User was reloaded from a user provider. {"provider":"Symfony\\Bridge\\Doctrine\\Security\\User\\EntityUserProvider","username":"tp@gmail.com"} []
[2019-11-19 12:06:55] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2019-11-19 12:06:55] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\LoginFormAuthenticator"} []
[2019-11-19 12:06:55] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\LoginFormAuthenticator"} []
[2019-11-19 12:06:55] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.presentation AS presentation_3, t0.country AS country_4 FROM region t0 [] []
[2019-11-19 12:06:55] security.DEBUG: Stored the security token in the session. {"key":"_security_main"} []
[2019-11-19 12:06:59] request.INFO: Matched route "region_new". {"route":"region_new","route_parameters":{"_route":"region_new","_controller":"App\\Controller\\BackofficeRegionController::new"},"request_uri":"http://127.0.0.1:8000/backoffice/region/new","method":"GET"} []
[2019-11-19 12:06:59] security.DEBUG: Read existing security token from the session. {"key":"_security_main","token_class":"Symfony\\Component\\Security\\Guard\\Token\\PostAuthenticationGuardToken"} []
[2019-11-19 12:06:59] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4 FROM user t0 WHERE t0.id = ? [1] []
[2019-11-19 12:06:59] security.DEBUG: User was reloaded from a user provider. {"provider":"Symfony\\Bridge\\Doctrine\\Security\\User\\EntityUserProvider","username":"tp@gmail.com"} []
[2019-11-19 12:06:59] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2019-11-19 12:06:59] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\LoginFormAuthenticator"} []
[2019-11-19 12:06:59] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\LoginFormAuthenticator"} []
[2019-11-19 12:06:59] security.DEBUG: Stored the security token in the session. {"key":"_security_main"} []
[2019-11-19 12:07:01] request.INFO: Matched route "region_index". {"route":"region_index","route_parameters":{"_route":"region_index","_controller":"App\\Controller\\BackofficeRegionController::index"},"request_uri":"http://127.0.0.1:8000/backoffice/region/","method":"GET"} []
[2019-11-19 12:07:01] security.DEBUG: Read existing security token from the session. {"key":"_security_main","token_class":"Symfony\\Component\\Security\\Guard\\Token\\PostAuthenticationGuardToken"} []
[2019-11-19 12:07:01] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4 FROM user t0 WHERE t0.id = ? [1] []
[2019-11-19 12:07:01] security.DEBUG: User was reloaded from a user provider. {"provider":"Symfony\\Bridge\\Doctrine\\Security\\User\\EntityUserProvider","username":"tp@gmail.com"} []
[2019-11-19 12:07:01] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2019-11-19 12:07:01] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\LoginFormAuthenticator"} []
[2019-11-19 12:07:01] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\LoginFormAuthenticator"} []
[2019-11-19 12:07:01] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.presentation AS presentation_3, t0.country AS country_4 FROM region t0 [] []
[2019-11-19 12:07:01] security.DEBUG: Stored the security token in the session. {"key":"_security_main"} []
[2019-11-19 12:14:58] doctrine.DEBUG: CREATE TABLE room (id INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL, region_id INTEGER NOT NULL, owner_id INTEGER NOT NULL, summary CLOB NOT NULL, description CLOB DEFAULT NULL, capacity INTEGER NOT NULL, superficy DOUBLE PRECISION DEFAULT NULL, price DOUBLE PRECISION NOT NULL, address VARCHAR(255) NOT NULL, CONSTRAINT FK_729F519B98260155 FOREIGN KEY (region_id) REFERENCES region (id) NOT DEFERRABLE INITIALLY IMMEDIATE, CONSTRAINT FK_729F519B7E3C61F9 FOREIGN KEY (owner_id) REFERENCES owner (id) NOT DEFERRABLE INITIALLY IMMEDIATE) [] []
[2019-11-19 12:14:58] console.ERROR: Error thrown while running command "doctrine:schema:create". Message: "Schema-Tool failed with Error 'An exception occurred while executing 'CREATE TABLE room (id INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL, region_id INTEGER NOT NULL, owner_id INTEGER NOT NULL, summary CLOB NOT NULL, description CLOB DEFAULT NULL, capacity INTEGER NOT NULL, superficy DOUBLE PRECISION DEFAULT NULL, price DOUBLE PRECISION NOT NULL, address VARCHAR(255) NOT NULL, CONSTRAINT FK_729F519B98260155 FOREIGN KEY (region_id) REFERENCES region (id) NOT DEFERRABLE INITIALLY IMMEDIATE, CONSTRAINT FK_729F519B7E3C61F9 FOREIGN KEY (owner_id) REFERENCES owner (id) NOT DEFERRABLE INITIALLY IMMEDIATE)':  SQLSTATE[HY000]: General error: 1 table room already exists' while executing DDL: CREATE TABLE room (id INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL, region_id INTEGER NOT NULL, owner_id INTEGER NOT NULL, summary CLOB NOT NULL, description CLOB DEFAULT NULL, capacity INTEGER NOT NULL, superficy DOUBLE PRECISION DEFAULT NULL, price DOUBLE PRECISION NOT NULL, address VARCHAR(255) NOT NULL, CONSTRAINT FK_729F519B98260155 FOREIGN KEY (region_id) REFERENCES region (id) NOT DEFERRABLE INITIALLY IMMEDIATE, CONSTRAINT FK_729F519B7E3C61F9 FOREIGN KEY (owner_id) REFERENCES owner (id) NOT DEFERRABLE INITIALLY IMMEDIATE)" {"exception":"[object] (Doctrine\\ORM\\Tools\\ToolsException(code: 0): Schema-Tool failed with Error 'An exception occurred while executing 'CREATE TABLE room (id INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL, region_id INTEGER NOT NULL, owner_id INTEGER NOT NULL, summary CLOB NOT NULL, description CLOB DEFAULT NULL, capacity INTEGER NOT NULL, superficy DOUBLE PRECISION DEFAULT NULL, price DOUBLE PRECISION NOT NULL, address VARCHAR(255) NOT NULL, CONSTRAINT FK_729F519B98260155 FOREIGN KEY (region_id) REFERENCES region (id) NOT DEFERRABLE INITIALLY IMMEDIATE, CONSTRAINT FK_729F519B7E3C61F9 FOREIGN KEY (owner_id) REFERENCES owner (id) NOT DEFERRABLE INITIALLY IMMEDIATE)':\n\nSQLSTATE[HY000]: General error: 1 table room already exists' while executing DDL: CREATE TABLE room (id INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL, region_id INTEGER NOT NULL, owner_id INTEGER NOT NULL, summary CLOB NOT NULL, description CLOB DEFAULT NULL, capacity INTEGER NOT NULL, superficy DOUBLE PRECISION DEFAULT NULL, price DOUBLE PRECISION NOT NULL, address VARCHAR(255) NOT NULL, CONSTRAINT FK_729F519B98260155 FOREIGN KEY (region_id) REFERENCES region (id) NOT DEFERRABLE INITIALLY IMMEDIATE, CONSTRAINT FK_729F519B7E3C61F9 FOREIGN KEY (owner_id) REFERENCES owner (id) NOT DEFERRABLE INITIALLY IMMEDIATE) at /home/serandour/Couette_et_café_final/AgVoy/vendor/doctrine/orm/lib/Doctrine/ORM/Tools/ToolsException.php:34, Doctrine\\DBAL\\Exception\\TableExistsException(code: 0): An exception occurred while executing 'CREATE TABLE room (id INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL, region_id INTEGER NOT NULL, owner_id INTEGER NOT NULL, summary CLOB NOT NULL, description CLOB DEFAULT NULL, capacity INTEGER NOT NULL, superficy DOUBLE PRECISION DEFAULT NULL, price DOUBLE PRECISION NOT NULL, address VARCHAR(255) NOT NULL, CONSTRAINT FK_729F519B98260155 FOREIGN KEY (region_id) REFERENCES region (id) NOT DEFERRABLE INITIALLY IMMEDIATE, CONSTRAINT FK_729F519B7E3C61F9 FOREIGN KEY (owner_id) REFERENCES owner (id) NOT DEFERRABLE INITIALLY IMMEDIATE)':\n\nSQLSTATE[HY000]: General error: 1 table room already exists at /home/serandour/Couette_et_café_final/AgVoy/vendor/doctrine/dbal/lib/Doctrine/DBAL/Driver/AbstractSQLiteDriver.php:47, Doctrine\\DBAL\\Driver\\PDOException(code: HY000): SQLSTATE[HY000]: General error: 1 table room already exists at /home/serandour/Couette_et_café_final/AgVoy/vendor/doctrine/dbal/lib/Doctrine/DBAL/Driver/PDOConnection.php:80, PDOException(code: HY000): SQLSTATE[HY000]: General error: 1 table room already exists at /home/serandour/Couette_et_café_final/AgVoy/vendor/doctrine/dbal/lib/Doctrine/DBAL/Driver/PDOConnection.php:75)","command":"doctrine:schema:create","message":"Schema-Tool failed with Error 'An exception occurred while executing 'CREATE TABLE room (id INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL, region_id INTEGER NOT NULL, owner_id INTEGER NOT NULL, summary CLOB NOT NULL, description CLOB DEFAULT NULL, capacity INTEGER NOT NULL, superficy DOUBLE PRECISION DEFAULT NULL, price DOUBLE PRECISION NOT NULL, address VARCHAR(255) NOT NULL, CONSTRAINT FK_729F519B98260155 FOREIGN KEY (region_id) REFERENCES region (id) NOT DEFERRABLE INITIALLY IMMEDIATE, CONSTRAINT FK_729F519B7E3C61F9 FOREIGN KEY (owner_id) REFERENCES owner (id) NOT DEFERRABLE INITIALLY IMMEDIATE)':\n\nSQLSTATE[HY000]: General error: 1 table room already exists' while executing DDL: CREATE TABLE room (id INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL, region_id INTEGER NOT NULL, owner_id INTEGER NOT NULL, summary CLOB NOT NULL, description CLOB DEFAULT NULL, capacity INTEGER NOT NULL, superficy DOUBLE PRECISION DEFAULT NULL, price DOUBLE PRECISION NOT NULL, address VARCHAR(255) NOT NULL, CONSTRAINT FK_729F519B98260155 FOREIGN KEY (region_id) REFERENCES region (id) NOT DEFERRABLE INITIALLY IMMEDIATE, CONSTRAINT FK_729F519B7E3C61F9 FOREIGN KEY (owner_id) REFERENCES owner (id) NOT DEFERRABLE INITIALLY IMMEDIATE)"} []
[2019-11-19 12:14:58] console.DEBUG: Command "doctrine:schema:create" exited with code "1" {"command":"doctrine:schema:create","code":1} []
[2019-11-19 12:15:11] doctrine.DEBUG: CREATE TABLE reservation (id INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL, client_id INTEGER NOT NULL, room_id INTEGER NOT NULL, begin_date DATE NOT NULL, end_date DATE DEFAULT NULL, confirmed BOOLEAN NOT NULL, CONSTRAINT FK_42C8495519EB6921 FOREIGN KEY (client_id) REFERENCES client (id) NOT DEFERRABLE INITIALLY IMMEDIATE, CONSTRAINT FK_42C8495554177093 FOREIGN KEY (room_id) REFERENCES room (id) NOT DEFERRABLE INITIALLY IMMEDIATE) [] []
[2019-11-19 12:15:11] doctrine.DEBUG: CREATE INDEX IDX_42C8495519EB6921 ON reservation (client_id) [] []
[2019-11-19 12:15:11] doctrine.DEBUG: CREATE INDEX IDX_42C8495554177093 ON reservation (room_id) [] []
[2019-11-19 12:15:11] doctrine.DEBUG: CREATE TABLE region (id INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL, name VARCHAR(255) NOT NULL, presentation CLOB DEFAULT NULL, country VARCHAR(2) DEFAULT NULL) [] []
[2019-11-19 12:15:11] doctrine.DEBUG: CREATE TABLE comment (id INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL, client_id INTEGER NOT NULL, room_id INTEGER NOT NULL, commentary CLOB NOT NULL, grade INTEGER NOT NULL, CONSTRAINT FK_9474526C19EB6921 FOREIGN KEY (client_id) REFERENCES client (id) NOT DEFERRABLE INITIALLY IMMEDIATE, CONSTRAINT FK_9474526C54177093 FOREIGN KEY (room_id) REFERENCES room (id) NOT DEFERRABLE INITIALLY IMMEDIATE) [] []
[2019-11-19 12:15:11] doctrine.DEBUG: CREATE INDEX IDX_9474526C19EB6921 ON comment (client_id) [] []
[2019-11-19 12:15:11] doctrine.DEBUG: CREATE INDEX IDX_9474526C54177093 ON comment (room_id) [] []
[2019-11-19 12:15:11] doctrine.DEBUG: CREATE TABLE client (id INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL, firstname VARCHAR(255) DEFAULT NULL, family_name VARCHAR(255) NOT NULL, email VARCHAR(255) NOT NULL, gender VARCHAR(1) DEFAULT NULL, country VARCHAR(2) DEFAULT NULL, phone_number VARCHAR(255) DEFAULT NULL) [] []
[2019-11-19 12:15:11] doctrine.DEBUG: CREATE TABLE user (id INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL, email VARCHAR(180) NOT NULL, roles CLOB NOT NULL --(DC2Type:json) , password VARCHAR(255) NOT NULL) [] []
[2019-11-19 12:15:11] doctrine.DEBUG: CREATE UNIQUE INDEX UNIQ_8D93D649E7927C74 ON user (email) [] []
[2019-11-19 12:15:11] doctrine.DEBUG: CREATE TABLE owner (id INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL, firstname VARCHAR(255) DEFAULT NULL, family_name VARCHAR(255) NOT NULL, address CLOB DEFAULT NULL, country VARCHAR(2) NOT NULL) [] []
[2019-11-19 12:15:11] doctrine.DEBUG: CREATE TABLE room (id INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL, region_id INTEGER NOT NULL, owner_id INTEGER NOT NULL, summary CLOB NOT NULL, description CLOB DEFAULT NULL, capacity INTEGER NOT NULL, superficy DOUBLE PRECISION DEFAULT NULL, price DOUBLE PRECISION NOT NULL, address VARCHAR(255) NOT NULL, CONSTRAINT FK_729F519B98260155 FOREIGN KEY (region_id) REFERENCES region (id) NOT DEFERRABLE INITIALLY IMMEDIATE, CONSTRAINT FK_729F519B7E3C61F9 FOREIGN KEY (owner_id) REFERENCES owner (id) NOT DEFERRABLE INITIALLY IMMEDIATE) [] []
[2019-11-19 12:15:11] doctrine.DEBUG: CREATE INDEX IDX_729F519B98260155 ON room (region_id) [] []
[2019-11-19 12:15:11] doctrine.DEBUG: CREATE INDEX IDX_729F519B7E3C61F9 ON room (owner_id) [] []
[2019-11-19 12:15:11] doctrine.DEBUG: CREATE TABLE unavailable_period (id INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL, room_id INTEGER NOT NULL, begin_date DATE NOT NULL, end_date DATE DEFAULT NULL, CONSTRAINT FK_B9D87FBB54177093 FOREIGN KEY (room_id) REFERENCES room (id) NOT DEFERRABLE INITIALLY IMMEDIATE) [] []
[2019-11-19 12:15:11] doctrine.DEBUG: CREATE INDEX IDX_B9D87FBB54177093 ON unavailable_period (room_id) [] []
[2019-11-19 12:15:59] doctrine.DEBUG: SELECT name FROM sqlite_master WHERE type = 'table' AND name != 'sqlite_sequence' AND name != 'geometry_columns' AND name != 'spatial_ref_sys' UNION ALL SELECT name FROM sqlite_temp_master WHERE type = 'table' ORDER BY name [] []
[2019-11-19 12:15:59] doctrine.DEBUG: CREATE TABLE migration_versions (version VARCHAR(14) NOT NULL, executed_at DATETIME NOT NULL --(DC2Type:datetime_immutable) , PRIMARY KEY(version)) [] []
[2019-11-19 12:15:59] doctrine.DEBUG: SELECT name FROM sqlite_master WHERE type = 'table' AND name != 'sqlite_sequence' AND name != 'geometry_columns' AND name != 'spatial_ref_sys' UNION ALL SELECT name FROM sqlite_temp_master WHERE type = 'table' ORDER BY name [] []
[2019-11-19 12:15:59] doctrine.DEBUG: PRAGMA table_info('client') [] []
[2019-11-19 12:15:59] doctrine.DEBUG: SELECT sql   FROM (       SELECT *         FROM sqlite_master    UNION ALL       SELECT *         FROM sqlite_temp_master   ) WHERE type = 'table' AND name = ? ["client"] []
[2019-11-19 12:15:59] doctrine.DEBUG: PRAGMA index_list('client') [] []
[2019-11-19 12:15:59] doctrine.DEBUG: PRAGMA TABLE_INFO ('client') [] []
[2019-11-19 12:15:59] doctrine.DEBUG: SELECT sql   FROM (       SELECT *         FROM sqlite_master    UNION ALL       SELECT *         FROM sqlite_temp_master   ) WHERE type = 'table' AND name = ? ["client"] []
[2019-11-19 12:15:59] doctrine.DEBUG: PRAGMA table_info('comment') [] []
[2019-11-19 12:15:59] doctrine.DEBUG: SELECT sql   FROM (       SELECT *         FROM sqlite_master    UNION ALL       SELECT *         FROM sqlite_temp_master   ) WHERE type = 'table' AND name = ? ["comment"] []
[2019-11-19 12:15:59] doctrine.DEBUG: PRAGMA index_list('comment') [] []
[2019-11-19 12:15:59] doctrine.DEBUG: PRAGMA TABLE_INFO ('comment') [] []
[2019-11-19 12:15:59] doctrine.DEBUG: PRAGMA INDEX_INFO ('IDX_9474526C54177093') [] []
[2019-11-19 12:15:59] doctrine.DEBUG: PRAGMA INDEX_INFO ('IDX_9474526C19EB6921') [] []
[2019-11-19 12:15:59] doctrine.DEBUG: SELECT sql   FROM (       SELECT *         FROM sqlite_master    UNION ALL       SELECT *         FROM sqlite_temp_master   ) WHERE type = 'table' AND name = ? ["comment"] []
[2019-11-19 12:15:59] doctrine.DEBUG: PRAGMA table_info('migration_versions') [] []
[2019-11-19 12:15:59] doctrine.DEBUG: SELECT sql   FROM (       SELECT *         FROM sqlite_master    UNION ALL       SELECT *         FROM sqlite_temp_master   ) WHERE type = 'table' AND name = ? ["migration_versions"] []
[2019-11-19 12:15:59] doctrine.DEBUG: PRAGMA index_list('migration_versions') [] []
[2019-11-19 12:15:59] doctrine.DEBUG: PRAGMA TABLE_INFO ('migration_versions') [] []
[2019-11-19 12:15:59] doctrine.DEBUG: SELECT sql   FROM (       SELECT *         FROM sqlite_master    UNION ALL       SELECT *         FROM sqlite_temp_master   ) WHERE type = 'table' AND name = ? ["migration_versions"] []
[2019-11-19 12:15:59] doctrine.DEBUG: PRAGMA table_info('owner') [] []
[2019-11-19 12:15:59] doctrine.DEBUG: SELECT sql   FROM (       SELECT *         FROM sqlite_master    UNION ALL       SELECT *         FROM sqlite_temp_master   ) WHERE type = 'table' AND name = ? ["owner"] []
[2019-11-19 12:15:59] doctrine.DEBUG: PRAGMA index_list('owner') [] []
[2019-11-19 12:15:59] doctrine.DEBUG: PRAGMA TABLE_INFO ('owner') [] []
[2019-11-19 12:15:59] doctrine.DEBUG: SELECT sql   FROM (       SELECT *         FROM sqlite_master    UNION ALL       SELECT *         FROM sqlite_temp_master   ) WHERE type = 'table' AND name = ? ["owner"] []
[2019-11-19 12:15:59] doctrine.DEBUG: PRAGMA table_info('region') [] []
[2019-11-19 12:15:59] doctrine.DEBUG: SELECT sql   FROM (       SELECT *         FROM sqlite_master    UNION ALL       SELECT *         FROM sqlite_temp_master   ) WHERE type = 'table' AND name = ? ["region"] []
[2019-11-19 12:15:59] doctrine.DEBUG: PRAGMA index_list('region') [] []
[2019-11-19 12:15:59] doctrine.DEBUG: PRAGMA TABLE_INFO ('region') [] []
[2019-11-19 12:15:59] doctrine.DEBUG: SELECT sql   FROM (       SELECT *         FROM sqlite_master    UNION ALL       SELECT *         FROM sqlite_temp_master   ) WHERE type = 'table' AND name = ? ["region"] []
[2019-11-19 12:15:59] doctrine.DEBUG: PRAGMA table_info('reservation') [] []
[2019-11-19 12:15:59] doctrine.DEBUG: SELECT sql   FROM (       SELECT *         FROM sqlite_master    UNION ALL       SELECT *         FROM sqlite_temp_master   ) WHERE type = 'table' AND name = ? ["reservation"] []
[2019-11-19 12:15:59] doctrine.DEBUG: PRAGMA index_list('reservation') [] []
[2019-11-19 12:15:59] doctrine.DEBUG: PRAGMA TABLE_INFO ('reservation') [] []
[2019-11-19 12:15:59] doctrine.DEBUG: PRAGMA INDEX_INFO ('IDX_42C8495554177093') [] []
[2019-11-19 12:15:59] doctrine.DEBUG: PRAGMA INDEX_INFO ('IDX_42C8495519EB6921') [] []
[2019-11-19 12:15:59] doctrine.DEBUG: SELECT sql   FROM (       SELECT *         FROM sqlite_master    UNION ALL       SELECT *         FROM sqlite_temp_master   ) WHERE type = 'table' AND name = ? ["reservation"] []
[2019-11-19 12:15:59] doctrine.DEBUG: PRAGMA table_info('room') [] []
[2019-11-19 12:15:59] doctrine.DEBUG: SELECT sql   FROM (       SELECT *         FROM sqlite_master    UNION ALL       SELECT *         FROM sqlite_temp_master   ) WHERE type = 'table' AND name = ? ["room"] []
[2019-11-19 12:15:59] doctrine.DEBUG: PRAGMA index_list('room') [] []
[2019-11-19 12:15:59] doctrine.DEBUG: PRAGMA TABLE_INFO ('room') [] []
[2019-11-19 12:15:59] doctrine.DEBUG: PRAGMA INDEX_INFO ('IDX_729F519B7E3C61F9') [] []
[2019-11-19 12:15:59] doctrine.DEBUG: PRAGMA INDEX_INFO ('IDX_729F519B98260155') [] []
[2019-11-19 12:15:59] doctrine.DEBUG: SELECT sql   FROM (       SELECT *         FROM sqlite_master    UNION ALL       SELECT *         FROM sqlite_temp_master   ) WHERE type = 'table' AND name = ? ["room"] []
[2019-11-19 12:15:59] doctrine.DEBUG: PRAGMA table_info('unavailable_period') [] []
[2019-11-19 12:15:59] doctrine.DEBUG: SELECT sql   FROM (       SELECT *         FROM sqlite_master    UNION ALL       SELECT *         FROM sqlite_temp_master   ) WHERE type = 'table' AND name = ? ["unavailable_period"] []
[2019-11-19 12:15:59] doctrine.DEBUG: PRAGMA index_list('unavailable_period') [] []
[2019-11-19 12:15:59] doctrine.DEBUG: PRAGMA TABLE_INFO ('unavailable_period') [] []
[2019-11-19 12:15:59] doctrine.DEBUG: PRAGMA INDEX_INFO ('IDX_B9D87FBB54177093') [] []
[2019-11-19 12:15:59] doctrine.DEBUG: SELECT sql   FROM (       SELECT *         FROM sqlite_master    UNION ALL       SELECT *         FROM sqlite_temp_master   ) WHERE type = 'table' AND name = ? ["unavailable_period"] []
[2019-11-19 12:15:59] doctrine.DEBUG: PRAGMA table_info('user') [] []
[2019-11-19 12:15:59] doctrine.DEBUG: SELECT sql   FROM (       SELECT *         FROM sqlite_master    UNION ALL       SELECT *         FROM sqlite_temp_master   ) WHERE type = 'table' AND name = ? ["user"] []
[2019-11-19 12:15:59] doctrine.DEBUG: PRAGMA index_list('user') [] []
[2019-11-19 12:15:59] doctrine.DEBUG: PRAGMA TABLE_INFO ('user') [] []
[2019-11-19 12:15:59] doctrine.DEBUG: PRAGMA INDEX_INFO ('UNIQ_8D93D649E7927C74') [] []
[2019-11-19 12:15:59] doctrine.DEBUG: SELECT sql   FROM (       SELECT *         FROM sqlite_master    UNION ALL       SELECT *         FROM sqlite_temp_master   ) WHERE type = 'table' AND name = ? ["user"] []
[2019-11-19 12:16:05] doctrine.DEBUG: SELECT name FROM sqlite_master WHERE type = 'table' AND name != 'sqlite_sequence' AND name != 'geometry_columns' AND name != 'spatial_ref_sys' UNION ALL SELECT name FROM sqlite_temp_master WHERE type = 'table' ORDER BY name [] []
[2019-11-19 12:16:05] doctrine.DEBUG: PRAGMA table_info('migration_versions') [] []
[2019-11-19 12:16:05] doctrine.DEBUG: SELECT sql   FROM (       SELECT *         FROM sqlite_master    UNION ALL       SELECT *         FROM sqlite_temp_master   ) WHERE type = 'table' AND name = ? ["migration_versions"] []
[2019-11-19 12:16:05] doctrine.DEBUG: PRAGMA index_list('migration_versions') [] []
[2019-11-19 12:16:05] doctrine.DEBUG: PRAGMA TABLE_INFO ('migration_versions') [] []
[2019-11-19 12:16:05] doctrine.DEBUG: SELECT sql   FROM (       SELECT *         FROM sqlite_master    UNION ALL       SELECT *         FROM sqlite_temp_master   ) WHERE type = 'table' AND name = ? ["migration_versions"] []
[2019-11-19 12:16:05] doctrine.DEBUG: SELECT version FROM migration_versions [] []
[2019-11-19 12:16:09] doctrine.DEBUG: SELECT version FROM migration_versions WHERE version IN ('20191117191218', '20191119111559') ORDER BY version DESC LIMIT 1 [] []
[2019-11-19 12:16:09] doctrine.DEBUG: SELECT version FROM migration_versions [] []
[2019-11-19 12:16:09] doctrine.DEBUG: "START TRANSACTION" [] []
[2019-11-19 12:16:09] doctrine.DEBUG: DROP INDEX IDX_42C8495554177093 [] []
[2019-11-19 12:16:09] doctrine.DEBUG: DROP INDEX IDX_42C8495519EB6921 [] []
[2019-11-19 12:16:09] doctrine.DEBUG: CREATE TEMPORARY TABLE __temp__reservation AS SELECT id, client_id, room_id, begin_date, end_date, confirmed FROM reservation [] []
[2019-11-19 12:16:09] doctrine.DEBUG: DROP TABLE reservation [] []
[2019-11-19 12:16:09] doctrine.DEBUG: CREATE TABLE reservation (id INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL, client_id INTEGER NOT NULL, room_id INTEGER NOT NULL, begin_date DATE NOT NULL, end_date DATE DEFAULT NULL, confirmed BOOLEAN NOT NULL, CONSTRAINT FK_42C8495519EB6921 FOREIGN KEY (client_id) REFERENCES client (id) NOT DEFERRABLE INITIALLY IMMEDIATE, CONSTRAINT FK_42C8495554177093 FOREIGN KEY (room_id) REFERENCES room (id) NOT DEFERRABLE INITIALLY IMMEDIATE) [] []
[2019-11-19 12:16:09] doctrine.DEBUG: INSERT INTO reservation (id, client_id, room_id, begin_date, end_date, confirmed) SELECT id, client_id, room_id, begin_date, end_date, confirmed FROM __temp__reservation [] []
[2019-11-19 12:16:09] doctrine.DEBUG: DROP TABLE __temp__reservation [] []
[2019-11-19 12:16:09] doctrine.DEBUG: CREATE INDEX IDX_42C8495554177093 ON reservation (room_id) [] []
[2019-11-19 12:16:09] doctrine.DEBUG: CREATE INDEX IDX_42C8495519EB6921 ON reservation (client_id) [] []
[2019-11-19 12:16:09] doctrine.DEBUG: DROP INDEX IDX_9474526C54177093 [] []
[2019-11-19 12:16:09] doctrine.DEBUG: DROP INDEX IDX_9474526C19EB6921 [] []
[2019-11-19 12:16:09] doctrine.DEBUG: CREATE TEMPORARY TABLE __temp__comment AS SELECT id, client_id, room_id, commentary, grade FROM comment [] []
[2019-11-19 12:16:09] doctrine.DEBUG: DROP TABLE comment [] []
[2019-11-19 12:16:09] doctrine.DEBUG: CREATE TABLE comment (id INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL, client_id INTEGER NOT NULL, room_id INTEGER NOT NULL, commentary CLOB NOT NULL COLLATE BINARY, grade INTEGER NOT NULL, CONSTRAINT FK_9474526C19EB6921 FOREIGN KEY (client_id) REFERENCES client (id) NOT DEFERRABLE INITIALLY IMMEDIATE, CONSTRAINT FK_9474526C54177093 FOREIGN KEY (room_id) REFERENCES room (id) NOT DEFERRABLE INITIALLY IMMEDIATE) [] []
[2019-11-19 12:16:09] doctrine.DEBUG: INSERT INTO comment (id, client_id, room_id, commentary, grade) SELECT id, client_id, room_id, commentary, grade FROM __temp__comment [] []
[2019-11-19 12:16:09] doctrine.DEBUG: DROP TABLE __temp__comment [] []
[2019-11-19 12:16:09] doctrine.DEBUG: CREATE INDEX IDX_9474526C54177093 ON comment (room_id) [] []
[2019-11-19 12:16:09] doctrine.DEBUG: CREATE INDEX IDX_9474526C19EB6921 ON comment (client_id) [] []
[2019-11-19 12:16:09] doctrine.DEBUG: DROP INDEX IDX_729F519B7E3C61F9 [] []
[2019-11-19 12:16:09] doctrine.DEBUG: CREATE TEMPORARY TABLE __temp__room AS SELECT id, owner_id, summary, description, capacity, superficy, price, address FROM room [] []
[2019-11-19 12:16:09] doctrine.DEBUG: DROP TABLE room [] []
[2019-11-19 12:16:09] doctrine.DEBUG: CREATE TABLE room (id INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL, owner_id INTEGER NOT NULL, summary CLOB NOT NULL COLLATE BINARY, description CLOB DEFAULT NULL COLLATE BINARY, capacity INTEGER NOT NULL, superficy DOUBLE PRECISION DEFAULT NULL, price DOUBLE PRECISION NOT NULL, address VARCHAR(255) NOT NULL COLLATE BINARY, CONSTRAINT FK_729F519B7E3C61F9 FOREIGN KEY (owner_id) REFERENCES owner (id) NOT DEFERRABLE INITIALLY IMMEDIATE) [] []
[2019-11-19 12:16:09] doctrine.DEBUG: INSERT INTO room (id, owner_id, summary, description, capacity, superficy, price, address) SELECT id, owner_id, summary, description, capacity, superficy, price, address FROM __temp__room [] []
[2019-11-19 12:16:09] doctrine.DEBUG: DROP TABLE __temp__room [] []
[2019-11-19 12:16:09] doctrine.DEBUG: CREATE INDEX IDX_729F519B7E3C61F9 ON room (owner_id) [] []
[2019-11-19 12:16:09] doctrine.DEBUG: DROP INDEX IDX_4E2C37B798260155 [] []
[2019-11-19 12:16:09] doctrine.DEBUG: "ROLLBACK" [] []
[2019-11-19 12:16:09] console.ERROR: Error thrown while running command "doctrine:migrations:migrate". Message: "An exception occurred while executing 'DROP INDEX IDX_4E2C37B798260155':  SQLSTATE[HY000]: General error: 1 no such index: IDX_4E2C37B798260155" {"exception":"[object] (Doctrine\\DBAL\\Exception\\DriverException(code: 0): An exception occurred while executing 'DROP INDEX IDX_4E2C37B798260155':\n\nSQLSTATE[HY000]: General error: 1 no such index: IDX_4E2C37B798260155 at /home/serandour/Couette_et_café_final/AgVoy/vendor/doctrine/dbal/lib/Doctrine/DBAL/Driver/AbstractSQLiteDriver.php:70, Doctrine\\DBAL\\Driver\\PDOException(code: HY000): SQLSTATE[HY000]: General error: 1 no such index: IDX_4E2C37B798260155 at /home/serandour/Couette_et_café_final/AgVoy/vendor/doctrine/dbal/lib/Doctrine/DBAL/Driver/PDOConnection.php:80, PDOException(code: HY000): SQLSTATE[HY000]: General error: 1 no such index: IDX_4E2C37B798260155 at /home/serandour/Couette_et_café_final/AgVoy/vendor/doctrine/dbal/lib/Doctrine/DBAL/Driver/PDOConnection.php:75)","command":"doctrine:migrations:migrate","message":"An exception occurred while executing 'DROP INDEX IDX_4E2C37B798260155':\n\nSQLSTATE[HY000]: General error: 1 no such index: IDX_4E2C37B798260155"} []
[2019-11-19 12:16:09] console.DEBUG: Command "doctrine:migrations:migrate" exited with code "1" {"command":"doctrine:migrations:migrate","code":1} []
[2019-11-19 12:16:47] php.DEBUG: Warning: fsockopen(): unable to connect to 127.0.0.1:8000 (Connection refused) {"exception":"[object] (Symfony\\Component\\Debug\\Exception\\SilencedErrorContext: {\"severity\":2,\"file\":\"/home/serandour/Couette_et_café_final/AgVoy/vendor/symfony/web-server-bundle/WebServerConfig.php\",\"line\":141,\"trace\":[{\"file\":\"/home/serandour/Couette_et_café_final/AgVoy/vendor/symfony/web-server-bundle/WebServerConfig.php\",\"line\":54,\"function\":\"findBestPort\",\"class\":\"Symfony\\\\Bundle\\\\WebServerBundle\\\\WebServerConfig\",\"type\":\"->\"}],\"count\":1})"} []
[2019-11-19 12:16:50] request.INFO: Matched route "region_index". {"route":"region_index","route_parameters":{"_route":"region_index","_controller":"App\\Controller\\BackofficeRegionController::index"},"request_uri":"http://127.0.0.1:8000/backoffice/region/","method":"GET"} []
[2019-11-19 12:16:50] security.DEBUG: Read existing security token from the session. {"key":"_security_main","token_class":"Symfony\\Component\\Security\\Guard\\Token\\PostAuthenticationGuardToken"} []
[2019-11-19 12:16:50] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4 FROM user t0 WHERE t0.id = ? [1] []
[2019-11-19 12:16:50] security.WARNING: Username could not be found in the selected user provider. {"username":null,"provider":"Symfony\\Bridge\\Doctrine\\Security\\User\\EntityUserProvider"} []
[2019-11-19 12:16:50] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2019-11-19 12:16:50] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\LoginFormAuthenticator"} []
[2019-11-19 12:16:50] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\LoginFormAuthenticator"} []
[2019-11-19 12:16:50] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2019-11-19 12:16:50] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.presentation AS presentation_3, t0.country AS country_4 FROM region t0 [] []
[2019-11-19 12:17:04] request.INFO: Matched route "room_index". {"route":"room_index","route_parameters":{"_route":"room_index","_controller":"App\\Controller\\OwnerRoomController::index"},"request_uri":"http://127.0.0.1:8000/_owner/room/","method":"GET"} []
[2019-11-19 12:17:04] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2019-11-19 12:17:04] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\LoginFormAuthenticator"} []
[2019-11-19 12:17:04] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\LoginFormAuthenticator"} []
[2019-11-19 12:17:04] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2019-11-19 12:17:04] doctrine.DEBUG: SELECT t0.id AS id_1, t0.summary AS summary_2, t0.description AS description_3, t0.capacity AS capacity_4, t0.superficy AS superficy_5, t0.price AS price_6, t0.address AS address_7, t0.region_id AS region_id_8, t0.owner_id AS owner_id_9 FROM room t0 [] []
[2019-11-19 12:17:10] doctrine.DEBUG: SELECT name FROM sqlite_master WHERE type = 'table' AND name != 'sqlite_sequence' AND name != 'geometry_columns' AND name != 'spatial_ref_sys' UNION ALL SELECT name FROM sqlite_temp_master WHERE type = 'table' ORDER BY name [] []
[2019-11-19 12:17:10] doctrine.DEBUG: PRAGMA table_info('migration_versions') [] []
[2019-11-19 12:17:10] doctrine.DEBUG: SELECT sql   FROM (       SELECT *         FROM sqlite_master    UNION ALL       SELECT *         FROM sqlite_temp_master   ) WHERE type = 'table' AND name = ? ["migration_versions"] []
[2019-11-19 12:17:10] doctrine.DEBUG: PRAGMA index_list('migration_versions') [] []
[2019-11-19 12:17:10] doctrine.DEBUG: PRAGMA TABLE_INFO ('migration_versions') [] []
[2019-11-19 12:17:10] doctrine.DEBUG: SELECT sql   FROM (       SELECT *         FROM sqlite_master    UNION ALL       SELECT *         FROM sqlite_temp_master   ) WHERE type = 'table' AND name = ? ["migration_versions"] []
[2019-11-19 12:17:10] doctrine.DEBUG: SELECT version FROM migration_versions [] []
[2019-11-19 12:17:12] doctrine.DEBUG: SELECT version FROM migration_versions WHERE version IN ('20191117191218', '20191119111559') ORDER BY version DESC LIMIT 1 [] []
[2019-11-19 12:17:12] doctrine.DEBUG: SELECT version FROM migration_versions [] []
[2019-11-19 12:17:12] doctrine.DEBUG: "START TRANSACTION" [] []
[2019-11-19 12:17:12] doctrine.DEBUG: DROP INDEX IDX_42C8495554177093 [] []
[2019-11-19 12:17:12] doctrine.DEBUG: DROP INDEX IDX_42C8495519EB6921 [] []
[2019-11-19 12:17:12] doctrine.DEBUG: CREATE TEMPORARY TABLE __temp__reservation AS SELECT id, client_id, room_id, begin_date, end_date, confirmed FROM reservation [] []
[2019-11-19 12:17:12] doctrine.DEBUG: DROP TABLE reservation [] []
[2019-11-19 12:17:12] doctrine.DEBUG: CREATE TABLE reservation (id INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL, client_id INTEGER NOT NULL, room_id INTEGER NOT NULL, begin_date DATE NOT NULL, end_date DATE DEFAULT NULL, confirmed BOOLEAN NOT NULL, CONSTRAINT FK_42C8495519EB6921 FOREIGN KEY (client_id) REFERENCES client (id) NOT DEFERRABLE INITIALLY IMMEDIATE, CONSTRAINT FK_42C8495554177093 FOREIGN KEY (room_id) REFERENCES room (id) NOT DEFERRABLE INITIALLY IMMEDIATE) [] []
[2019-11-19 12:17:12] doctrine.DEBUG: INSERT INTO reservation (id, client_id, room_id, begin_date, end_date, confirmed) SELECT id, client_id, room_id, begin_date, end_date, confirmed FROM __temp__reservation [] []
[2019-11-19 12:17:12] doctrine.DEBUG: DROP TABLE __temp__reservation [] []
[2019-11-19 12:17:12] doctrine.DEBUG: CREATE INDEX IDX_42C8495554177093 ON reservation (room_id) [] []
[2019-11-19 12:17:12] doctrine.DEBUG: CREATE INDEX IDX_42C8495519EB6921 ON reservation (client_id) [] []
[2019-11-19 12:17:12] doctrine.DEBUG: DROP INDEX IDX_9474526C54177093 [] []
[2019-11-19 12:17:12] doctrine.DEBUG: DROP INDEX IDX_9474526C19EB6921 [] []
[2019-11-19 12:17:12] doctrine.DEBUG: CREATE TEMPORARY TABLE __temp__comment AS SELECT id, client_id, room_id, commentary, grade FROM comment [] []
[2019-11-19 12:17:12] doctrine.DEBUG: DROP TABLE comment [] []
[2019-11-19 12:17:12] doctrine.DEBUG: CREATE TABLE comment (id INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL, client_id INTEGER NOT NULL, room_id INTEGER NOT NULL, commentary CLOB NOT NULL COLLATE BINARY, grade INTEGER NOT NULL, CONSTRAINT FK_9474526C19EB6921 FOREIGN KEY (client_id) REFERENCES client (id) NOT DEFERRABLE INITIALLY IMMEDIATE, CONSTRAINT FK_9474526C54177093 FOREIGN KEY (room_id) REFERENCES room (id) NOT DEFERRABLE INITIALLY IMMEDIATE) [] []
[2019-11-19 12:17:12] doctrine.DEBUG: INSERT INTO comment (id, client_id, room_id, commentary, grade) SELECT id, client_id, room_id, commentary, grade FROM __temp__comment [] []
[2019-11-19 12:17:12] doctrine.DEBUG: DROP TABLE __temp__comment [] []
[2019-11-19 12:17:12] doctrine.DEBUG: CREATE INDEX IDX_9474526C54177093 ON comment (room_id) [] []
[2019-11-19 12:17:12] doctrine.DEBUG: CREATE INDEX IDX_9474526C19EB6921 ON comment (client_id) [] []
[2019-11-19 12:17:12] doctrine.DEBUG: DROP INDEX IDX_729F519B7E3C61F9 [] []
[2019-11-19 12:17:12] doctrine.DEBUG: CREATE TEMPORARY TABLE __temp__room AS SELECT id, owner_id, summary, description, capacity, superficy, price, address FROM room [] []
[2019-11-19 12:17:12] doctrine.DEBUG: DROP TABLE room [] []
[2019-11-19 12:17:12] doctrine.DEBUG: CREATE TABLE room (id INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL, owner_id INTEGER NOT NULL, summary CLOB NOT NULL COLLATE BINARY, description CLOB DEFAULT NULL COLLATE BINARY, capacity INTEGER NOT NULL, superficy DOUBLE PRECISION DEFAULT NULL, price DOUBLE PRECISION NOT NULL, address VARCHAR(255) NOT NULL COLLATE BINARY, CONSTRAINT FK_729F519B7E3C61F9 FOREIGN KEY (owner_id) REFERENCES owner (id) NOT DEFERRABLE INITIALLY IMMEDIATE) [] []
[2019-11-19 12:17:12] doctrine.DEBUG: INSERT INTO room (id, owner_id, summary, description, capacity, superficy, price, address) SELECT id, owner_id, summary, description, capacity, superficy, price, address FROM __temp__room [] []
[2019-11-19 12:17:12] doctrine.DEBUG: DROP TABLE __temp__room [] []
[2019-11-19 12:17:12] doctrine.DEBUG: CREATE INDEX IDX_729F519B7E3C61F9 ON room (owner_id) [] []
[2019-11-19 12:17:12] doctrine.DEBUG: DROP INDEX IDX_4E2C37B798260155 [] []
[2019-11-19 12:17:12] doctrine.DEBUG: "ROLLBACK" [] []
[2019-11-19 12:17:12] console.ERROR: Error thrown while running command "doctrine:migrations:migrate". Message: "An exception occurred while executing 'DROP INDEX IDX_4E2C37B798260155':  SQLSTATE[HY000]: General error: 1 no such index: IDX_4E2C37B798260155" {"exception":"[object] (Doctrine\\DBAL\\Exception\\DriverException(code: 0): An exception occurred while executing 'DROP INDEX IDX_4E2C37B798260155':\n\nSQLSTATE[HY000]: General error: 1 no such index: IDX_4E2C37B798260155 at /home/serandour/Couette_et_café_final/AgVoy/vendor/doctrine/dbal/lib/Doctrine/DBAL/Driver/AbstractSQLiteDriver.php:70, Doctrine\\DBAL\\Driver\\PDOException(code: HY000): SQLSTATE[HY000]: General error: 1 no such index: IDX_4E2C37B798260155 at /home/serandour/Couette_et_café_final/AgVoy/vendor/doctrine/dbal/lib/Doctrine/DBAL/Driver/PDOConnection.php:80, PDOException(code: HY000): SQLSTATE[HY000]: General error: 1 no such index: IDX_4E2C37B798260155 at /home/serandour/Couette_et_café_final/AgVoy/vendor/doctrine/dbal/lib/Doctrine/DBAL/Driver/PDOConnection.php:75)","command":"doctrine:migrations:migrate","message":"An exception occurred while executing 'DROP INDEX IDX_4E2C37B798260155':\n\nSQLSTATE[HY000]: General error: 1 no such index: IDX_4E2C37B798260155"} []
[2019-11-19 12:17:12] console.DEBUG: Command "doctrine:migrations:migrate" exited with code "1" {"command":"doctrine:migrations:migrate","code":1} []
[2019-11-19 12:18:17] php.DEBUG: Warning: fsockopen(): unable to connect to 127.0.0.1:8000 (Connection refused) {"exception":"[object] (Symfony\\Component\\Debug\\Exception\\SilencedErrorContext: {\"severity\":2,\"file\":\"/home/serandour/Couette_et_café_final/AgVoy/vendor/symfony/web-server-bundle/WebServerConfig.php\",\"line\":141,\"trace\":[{\"file\":\"/home/serandour/Couette_et_café_final/AgVoy/vendor/symfony/web-server-bundle/WebServerConfig.php\",\"line\":54,\"function\":\"findBestPort\",\"class\":\"Symfony\\\\Bundle\\\\WebServerBundle\\\\WebServerConfig\",\"type\":\"->\"}],\"count\":1})"} []
[2019-11-19 12:18:19] request.INFO: Matched route "region_new". {"route":"region_new","route_parameters":{"_route":"region_new","_controller":"App\\Controller\\BackofficeRegionController::new"},"request_uri":"http://127.0.0.1:8000/backoffice/region/new","method":"GET"} []
[2019-11-19 12:18:19] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2019-11-19 12:18:19] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\LoginFormAuthenticator"} []
[2019-11-19 12:18:19] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\LoginFormAuthenticator"} []
[2019-11-19 12:18:19] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2019-11-19 12:18:49] request.INFO: Matched route "region_new". {"route":"region_new","route_parameters":{"_route":"region_new","_controller":"App\\Controller\\BackofficeRegionController::new"},"request_uri":"http://127.0.0.1:8000/backoffice/region/new","method":"POST"} []
[2019-11-19 12:18:49] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2019-11-19 12:18:49] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\LoginFormAuthenticator"} []
[2019-11-19 12:18:49] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\LoginFormAuthenticator"} []
[2019-11-19 12:18:49] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2019-11-19 12:18:49] doctrine.DEBUG: "START TRANSACTION" [] []
[2019-11-19 12:18:49] doctrine.DEBUG: INSERT INTO region (name, presentation, country) VALUES (?, ?, ?) {"1":"Ile de France","2":"La région française capitale","3":"FR"} []
[2019-11-19 12:18:49] doctrine.DEBUG: "COMMIT" [] []
[2019-11-19 12:18:49] request.INFO: Matched route "region_index". {"route":"region_index","route_parameters":{"_route":"region_index","_controller":"App\\Controller\\BackofficeRegionController::index"},"request_uri":"http://127.0.0.1:8000/backoffice/region/","method":"GET"} []
[2019-11-19 12:18:49] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2019-11-19 12:18:49] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\LoginFormAuthenticator"} []
[2019-11-19 12:18:49] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\LoginFormAuthenticator"} []
[2019-11-19 12:18:49] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2019-11-19 12:18:49] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.presentation AS presentation_3, t0.country AS country_4 FROM region t0 [] []
[2019-11-19 12:18:50] request.INFO: Matched route "region_new". {"route":"region_new","route_parameters":{"_route":"region_new","_controller":"App\\Controller\\BackofficeRegionController::new"},"request_uri":"http://127.0.0.1:8000/backoffice/region/new","method":"GET"} []
[2019-11-19 12:18:50] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2019-11-19 12:18:50] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\LoginFormAuthenticator"} []
[2019-11-19 12:18:50] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\LoginFormAuthenticator"} []
[2019-11-19 12:18:50] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2019-11-19 12:19:08] request.INFO: Matched route "region_new". {"route":"region_new","route_parameters":{"_route":"region_new","_controller":"App\\Controller\\BackofficeRegionController::new"},"request_uri":"http://127.0.0.1:8000/backoffice/region/new","method":"POST"} []
[2019-11-19 12:19:08] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2019-11-19 12:19:08] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\LoginFormAuthenticator"} []
[2019-11-19 12:19:08] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\LoginFormAuthenticator"} []
[2019-11-19 12:19:08] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2019-11-19 12:19:08] doctrine.DEBUG: "START TRANSACTION" [] []
[2019-11-19 12:19:08] doctrine.DEBUG: INSERT INTO region (name, presentation, country) VALUES (?, ?, ?) {"1":"Bretagne","2":"La région des crêpes","3":"FR"} []
[2019-11-19 12:19:08] doctrine.DEBUG: "COMMIT" [] []
[2019-11-19 12:19:08] request.INFO: Matched route "region_index". {"route":"region_index","route_parameters":{"_route":"region_index","_controller":"App\\Controller\\BackofficeRegionController::index"},"request_uri":"http://127.0.0.1:8000/backoffice/region/","method":"GET"} []
[2019-11-19 12:19:08] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2019-11-19 12:19:08] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\LoginFormAuthenticator"} []
[2019-11-19 12:19:08] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\LoginFormAuthenticator"} []
[2019-11-19 12:19:08] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2019-11-19 12:19:08] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.presentation AS presentation_3, t0.country AS country_4 FROM region t0 [] []
[2019-11-19 12:19:14] request.INFO: Matched route "room_index". {"route":"room_index","route_parameters":{"_route":"room_index","_controller":"App\\Controller\\OwnerRoomController::index"},"request_uri":"http://127.0.0.1:8000/_owner/room/","method":"GET"} []
[2019-11-19 12:19:14] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2019-11-19 12:19:14] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\LoginFormAuthenticator"} []
[2019-11-19 12:19:14] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\LoginFormAuthenticator"} []
[2019-11-19 12:19:14] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2019-11-19 12:19:14] doctrine.DEBUG: SELECT t0.id AS id_1, t0.summary AS summary_2, t0.description AS description_3, t0.capacity AS capacity_4, t0.superficy AS superficy_5, t0.price AS price_6, t0.address AS address_7, t0.region_id AS region_id_8, t0.owner_id AS owner_id_9 FROM room t0 [] []
[2019-11-19 12:19:15] request.INFO: Matched route "room_new". {"route":"room_new","route_parameters":{"_route":"room_new","_controller":"App\\Controller\\OwnerRoomController::new"},"request_uri":"http://127.0.0.1:8000/_owner/room/new","method":"GET"} []
[2019-11-19 12:19:15] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2019-11-19 12:19:15] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\LoginFormAuthenticator"} []
[2019-11-19 12:19:15] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\LoginFormAuthenticator"} []
[2019-11-19 12:19:15] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2019-11-19 12:19:15] doctrine.DEBUG: SELECT r0_.id AS id_0, r0_.name AS name_1, r0_.presentation AS presentation_2, r0_.country AS country_3 FROM region r0_ [] []
[2019-11-19 12:19:15] doctrine.DEBUG: SELECT o0_.id AS id_0, o0_.firstname AS firstname_1, o0_.family_name AS family_name_2, o0_.address AS address_3, o0_.country AS country_4 FROM owner o0_ [] []
[2019-11-19 12:19:23] request.INFO: Matched route "room_new". {"route":"room_new","route_parameters":{"_route":"room_new","_controller":"App\\Controller\\OwnerRoomController::new"},"request_uri":"http://127.0.0.1:8000/_owner/room/new","method":"GET"} []
[2019-11-19 12:19:23] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2019-11-19 12:19:23] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\LoginFormAuthenticator"} []
[2019-11-19 12:19:23] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\LoginFormAuthenticator"} []
[2019-11-19 12:19:23] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2019-11-19 12:19:23] doctrine.DEBUG: SELECT r0_.id AS id_0, r0_.name AS name_1, r0_.presentation AS presentation_2, r0_.country AS country_3 FROM region r0_ [] []
[2019-11-19 12:19:23] doctrine.DEBUG: SELECT o0_.id AS id_0, o0_.firstname AS firstname_1, o0_.family_name AS family_name_2, o0_.address AS address_3, o0_.country AS country_4 FROM owner o0_ [] []
[2019-11-19 12:21:04] doctrine.DEBUG: SELECT name FROM sqlite_master WHERE type = 'table' AND name != 'sqlite_sequence' AND name != 'geometry_columns' AND name != 'spatial_ref_sys' UNION ALL SELECT name FROM sqlite_temp_master WHERE type = 'table' ORDER BY name [] []
[2019-11-19 12:21:04] doctrine.DEBUG: PRAGMA table_info('migration_versions') [] []
[2019-11-19 12:21:04] doctrine.DEBUG: SELECT sql   FROM (       SELECT *         FROM sqlite_master    UNION ALL       SELECT *         FROM sqlite_temp_master   ) WHERE type = 'table' AND name = ? ["migration_versions"] []
[2019-11-19 12:21:04] doctrine.DEBUG: PRAGMA index_list('migration_versions') [] []
[2019-11-19 12:21:04] doctrine.DEBUG: PRAGMA TABLE_INFO ('migration_versions') [] []
[2019-11-19 12:21:04] doctrine.DEBUG: SELECT sql   FROM (       SELECT *         FROM sqlite_master    UNION ALL       SELECT *         FROM sqlite_temp_master   ) WHERE type = 'table' AND name = ? ["migration_versions"] []
[2019-11-19 12:21:04] doctrine.DEBUG: SELECT version FROM migration_versions [] []
[2019-11-19 12:21:12] doctrine.DEBUG: SELECT version FROM migration_versions WHERE version IN ('20191117191218', '20191119111559') ORDER BY version DESC LIMIT 1 [] []
[2019-11-19 12:21:12] doctrine.DEBUG: SELECT version FROM migration_versions [] []
[2019-11-19 12:21:12] doctrine.DEBUG: "START TRANSACTION" [] []
[2019-11-19 12:21:12] doctrine.DEBUG: DROP INDEX IDX_42C8495554177093 [] []
[2019-11-19 12:21:12] doctrine.DEBUG: DROP INDEX IDX_42C8495519EB6921 [] []
[2019-11-19 12:21:12] doctrine.DEBUG: CREATE TEMPORARY TABLE __temp__reservation AS SELECT id, client_id, room_id, begin_date, end_date, confirmed FROM reservation [] []
[2019-11-19 12:21:12] doctrine.DEBUG: DROP TABLE reservation [] []
[2019-11-19 12:21:12] doctrine.DEBUG: CREATE TABLE reservation (id INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL, client_id INTEGER NOT NULL, room_id INTEGER NOT NULL, begin_date DATE NOT NULL, end_date DATE DEFAULT NULL, confirmed BOOLEAN NOT NULL, CONSTRAINT FK_42C8495519EB6921 FOREIGN KEY (client_id) REFERENCES client (id) NOT DEFERRABLE INITIALLY IMMEDIATE, CONSTRAINT FK_42C8495554177093 FOREIGN KEY (room_id) REFERENCES room (id) NOT DEFERRABLE INITIALLY IMMEDIATE) [] []
[2019-11-19 12:21:12] doctrine.DEBUG: INSERT INTO reservation (id, client_id, room_id, begin_date, end_date, confirmed) SELECT id, client_id, room_id, begin_date, end_date, confirmed FROM __temp__reservation [] []
[2019-11-19 12:21:12] doctrine.DEBUG: DROP TABLE __temp__reservation [] []
[2019-11-19 12:21:12] doctrine.DEBUG: CREATE INDEX IDX_42C8495554177093 ON reservation (room_id) [] []
[2019-11-19 12:21:12] doctrine.DEBUG: CREATE INDEX IDX_42C8495519EB6921 ON reservation (client_id) [] []
[2019-11-19 12:21:12] doctrine.DEBUG: DROP INDEX IDX_9474526C54177093 [] []
[2019-11-19 12:21:12] doctrine.DEBUG: DROP INDEX IDX_9474526C19EB6921 [] []
[2019-11-19 12:21:12] doctrine.DEBUG: CREATE TEMPORARY TABLE __temp__comment AS SELECT id, client_id, room_id, commentary, grade FROM comment [] []
[2019-11-19 12:21:12] doctrine.DEBUG: DROP TABLE comment [] []
[2019-11-19 12:21:12] doctrine.DEBUG: CREATE TABLE comment (id INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL, client_id INTEGER NOT NULL, room_id INTEGER NOT NULL, commentary CLOB NOT NULL COLLATE BINARY, grade INTEGER NOT NULL, CONSTRAINT FK_9474526C19EB6921 FOREIGN KEY (client_id) REFERENCES client (id) NOT DEFERRABLE INITIALLY IMMEDIATE, CONSTRAINT FK_9474526C54177093 FOREIGN KEY (room_id) REFERENCES room (id) NOT DEFERRABLE INITIALLY IMMEDIATE) [] []
[2019-11-19 12:21:12] doctrine.DEBUG: INSERT INTO comment (id, client_id, room_id, commentary, grade) SELECT id, client_id, room_id, commentary, grade FROM __temp__comment [] []
[2019-11-19 12:21:12] doctrine.DEBUG: DROP TABLE __temp__comment [] []
[2019-11-19 12:21:12] doctrine.DEBUG: CREATE INDEX IDX_9474526C54177093 ON comment (room_id) [] []
[2019-11-19 12:21:12] doctrine.DEBUG: CREATE INDEX IDX_9474526C19EB6921 ON comment (client_id) [] []
[2019-11-19 12:21:12] doctrine.DEBUG: DROP INDEX IDX_729F519B7E3C61F9 [] []
[2019-11-19 12:21:12] doctrine.DEBUG: CREATE TEMPORARY TABLE __temp__room AS SELECT id, owner_id, summary, description, capacity, superficy, price, address FROM room [] []
[2019-11-19 12:21:12] doctrine.DEBUG: DROP TABLE room [] []
[2019-11-19 12:21:12] doctrine.DEBUG: CREATE TABLE room (id INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL, owner_id INTEGER NOT NULL, summary CLOB NOT NULL COLLATE BINARY, description CLOB DEFAULT NULL COLLATE BINARY, capacity INTEGER NOT NULL, superficy DOUBLE PRECISION DEFAULT NULL, price DOUBLE PRECISION NOT NULL, address VARCHAR(255) NOT NULL COLLATE BINARY, CONSTRAINT FK_729F519B7E3C61F9 FOREIGN KEY (owner_id) REFERENCES owner (id) NOT DEFERRABLE INITIALLY IMMEDIATE) [] []
[2019-11-19 12:21:12] doctrine.DEBUG: INSERT INTO room (id, owner_id, summary, description, capacity, superficy, price, address) SELECT id, owner_id, summary, description, capacity, superficy, price, address FROM __temp__room [] []
[2019-11-19 12:21:12] doctrine.DEBUG: DROP TABLE __temp__room [] []
[2019-11-19 12:21:12] doctrine.DEBUG: CREATE INDEX IDX_729F519B7E3C61F9 ON room (owner_id) [] []
[2019-11-19 12:21:12] doctrine.DEBUG: DROP INDEX IDX_4E2C37B798260155 [] []
[2019-11-19 12:21:12] doctrine.DEBUG: "ROLLBACK" [] []
[2019-11-19 12:21:12] console.ERROR: Error thrown while running command "doctrine:migrations:migrate". Message: "An exception occurred while executing 'DROP INDEX IDX_4E2C37B798260155':  SQLSTATE[HY000]: General error: 1 no such index: IDX_4E2C37B798260155" {"exception":"[object] (Doctrine\\DBAL\\Exception\\DriverException(code: 0): An exception occurred while executing 'DROP INDEX IDX_4E2C37B798260155':\n\nSQLSTATE[HY000]: General error: 1 no such index: IDX_4E2C37B798260155 at /home/serandour/Couette_et_café_final/AgVoy/vendor/doctrine/dbal/lib/Doctrine/DBAL/Driver/AbstractSQLiteDriver.php:70, Doctrine\\DBAL\\Driver\\PDOException(code: HY000): SQLSTATE[HY000]: General error: 1 no such index: IDX_4E2C37B798260155 at /home/serandour/Couette_et_café_final/AgVoy/vendor/doctrine/dbal/lib/Doctrine/DBAL/Driver/PDOConnection.php:80, PDOException(code: HY000): SQLSTATE[HY000]: General error: 1 no such index: IDX_4E2C37B798260155 at /home/serandour/Couette_et_café_final/AgVoy/vendor/doctrine/dbal/lib/Doctrine/DBAL/Driver/PDOConnection.php:75)","command":"doctrine:migrations:migrate","message":"An exception occurred while executing 'DROP INDEX IDX_4E2C37B798260155':\n\nSQLSTATE[HY000]: General error: 1 no such index: IDX_4E2C37B798260155"} []
[2019-11-19 12:21:12] console.DEBUG: Command "doctrine:migrations:migrate" exited with code "1" {"command":"doctrine:migrations:migrate","code":1} []
[2019-11-19 12:21:22] php.DEBUG: Warning: fsockopen(): unable to connect to 127.0.0.1:8000 (Connection refused) {"exception":"[object] (Symfony\\Component\\Debug\\Exception\\SilencedErrorContext: {\"severity\":2,\"file\":\"/home/serandour/Couette_et_café_final/AgVoy/vendor/symfony/web-server-bundle/WebServerConfig.php\",\"line\":141,\"trace\":[{\"file\":\"/home/serandour/Couette_et_café_final/AgVoy/vendor/symfony/web-server-bundle/WebServerConfig.php\",\"line\":54,\"function\":\"findBestPort\",\"class\":\"Symfony\\\\Bundle\\\\WebServerBundle\\\\WebServerConfig\",\"type\":\"->\"}],\"count\":1})"} []
[2019-11-19 12:21:23] request.INFO: Matched route "room_new". {"route":"room_new","route_parameters":{"_route":"room_new","_controller":"App\\Controller\\OwnerRoomController::new"},"request_uri":"http://127.0.0.1:8000/_owner/room/new","method":"GET"} []
[2019-11-19 12:21:23] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2019-11-19 12:21:23] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\LoginFormAuthenticator"} []
[2019-11-19 12:21:23] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\LoginFormAuthenticator"} []
[2019-11-19 12:21:23] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2019-11-19 12:21:23] doctrine.DEBUG: SELECT r0_.id AS id_0, r0_.name AS name_1, r0_.presentation AS presentation_2, r0_.country AS country_3 FROM region r0_ [] []
[2019-11-19 12:21:23] doctrine.DEBUG: SELECT o0_.id AS id_0, o0_.firstname AS firstname_1, o0_.family_name AS family_name_2, o0_.address AS address_3, o0_.country AS country_4 FROM owner o0_ [] []
[2019-11-19 12:21:26] request.INFO: Matched route "room_index". {"route":"room_index","route_parameters":{"_route":"room_index","_controller":"App\\Controller\\OwnerRoomController::index"},"request_uri":"http://127.0.0.1:8000/_owner/room/","method":"GET"} []
[2019-11-19 12:21:26] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2019-11-19 12:21:26] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\LoginFormAuthenticator"} []
[2019-11-19 12:21:26] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\LoginFormAuthenticator"} []
[2019-11-19 12:21:26] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2019-11-19 12:21:26] doctrine.DEBUG: SELECT t0.id AS id_1, t0.summary AS summary_2, t0.description AS description_3, t0.capacity AS capacity_4, t0.superficy AS superficy_5, t0.price AS price_6, t0.address AS address_7, t0.region_id AS region_id_8, t0.owner_id AS owner_id_9 FROM room t0 [] []
[2019-11-19 12:21:26] request.INFO: Matched route "room_new". {"route":"room_new","route_parameters":{"_route":"room_new","_controller":"App\\Controller\\OwnerRoomController::new"},"request_uri":"http://127.0.0.1:8000/_owner/room/new","method":"GET"} []
[2019-11-19 12:21:26] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2019-11-19 12:21:26] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\LoginFormAuthenticator"} []
[2019-11-19 12:21:26] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\LoginFormAuthenticator"} []
[2019-11-19 12:21:26] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2019-11-19 12:21:26] doctrine.DEBUG: SELECT r0_.id AS id_0, r0_.name AS name_1, r0_.presentation AS presentation_2, r0_.country AS country_3 FROM region r0_ [] []
[2019-11-19 12:21:26] doctrine.DEBUG: SELECT o0_.id AS id_0, o0_.firstname AS firstname_1, o0_.family_name AS family_name_2, o0_.address AS address_3, o0_.country AS country_4 FROM owner o0_ [] []
[2019-11-19 12:21:34] request.INFO: Matched route "region_index". {"route":"region_index","route_parameters":{"_route":"region_index","_controller":"App\\Controller\\BackofficeRegionController::index"},"request_uri":"http://127.0.0.1:8000/backoffice/region/","method":"GET"} []
[2019-11-19 12:21:34] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2019-11-19 12:21:34] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\LoginFormAuthenticator"} []
[2019-11-19 12:21:34] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\LoginFormAuthenticator"} []
[2019-11-19 12:21:34] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2019-11-19 12:21:34] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.presentation AS presentation_3, t0.country AS country_4 FROM region t0 [] []
[2019-11-19 12:21:36] request.INFO: Matched route "region_show". {"route":"region_show","route_parameters":{"_route":"region_show","_controller":"App\\Controller\\BackofficeRegionController::show","id":"1"},"request_uri":"http://127.0.0.1:8000/backoffice/region/1","method":"GET"} []
[2019-11-19 12:21:36] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2019-11-19 12:21:36] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\LoginFormAuthenticator"} []
[2019-11-19 12:21:36] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\LoginFormAuthenticator"} []
[2019-11-19 12:21:36] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2019-11-19 12:21:36] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.presentation AS presentation_3, t0.country AS country_4 FROM region t0 WHERE t0.id = ? ["1"] []
[2019-11-19 12:25:17] doctrine.DEBUG: SELECT name FROM sqlite_master WHERE type = 'table' AND name != 'sqlite_sequence' AND name != 'geometry_columns' AND name != 'spatial_ref_sys' UNION ALL SELECT name FROM sqlite_temp_master WHERE type = 'table' ORDER BY name [] []
[2019-11-19 12:25:17] doctrine.DEBUG: PRAGMA table_info('migration_versions') [] []
[2019-11-19 12:25:17] doctrine.DEBUG: SELECT sql   FROM (       SELECT *         FROM sqlite_master    UNION ALL       SELECT *         FROM sqlite_temp_master   ) WHERE type = 'table' AND name = ? ["migration_versions"] []
[2019-11-19 12:25:17] doctrine.DEBUG: PRAGMA index_list('migration_versions') [] []
[2019-11-19 12:25:17] doctrine.DEBUG: PRAGMA TABLE_INFO ('migration_versions') [] []
[2019-11-19 12:25:17] doctrine.DEBUG: SELECT sql   FROM (       SELECT *         FROM sqlite_master    UNION ALL       SELECT *         FROM sqlite_temp_master   ) WHERE type = 'table' AND name = ? ["migration_versions"] []
[2019-11-19 12:25:17] doctrine.DEBUG: SELECT version FROM migration_versions [] []
[2019-11-19 12:25:18] doctrine.DEBUG: SELECT version FROM migration_versions WHERE version IN ('20191117191218', '20191119111559') ORDER BY version DESC LIMIT 1 [] []
[2019-11-19 12:25:18] doctrine.DEBUG: SELECT version FROM migration_versions [] []
[2019-11-19 12:25:18] doctrine.DEBUG: "START TRANSACTION" [] []
[2019-11-19 12:25:18] doctrine.DEBUG: DROP INDEX IDX_42C8495554177093 [] []
[2019-11-19 12:25:18] doctrine.DEBUG: DROP INDEX IDX_42C8495519EB6921 [] []
[2019-11-19 12:25:18] doctrine.DEBUG: CREATE TEMPORARY TABLE __temp__reservation AS SELECT id, client_id, room_id, begin_date, end_date, confirmed FROM reservation [] []
[2019-11-19 12:25:18] doctrine.DEBUG: DROP TABLE reservation [] []
[2019-11-19 12:25:18] doctrine.DEBUG: CREATE TABLE reservation (id INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL, client_id INTEGER NOT NULL, room_id INTEGER NOT NULL, begin_date DATE NOT NULL, end_date DATE DEFAULT NULL, confirmed BOOLEAN NOT NULL, CONSTRAINT FK_42C8495519EB6921 FOREIGN KEY (client_id) REFERENCES client (id) NOT DEFERRABLE INITIALLY IMMEDIATE, CONSTRAINT FK_42C8495554177093 FOREIGN KEY (room_id) REFERENCES room (id) NOT DEFERRABLE INITIALLY IMMEDIATE) [] []
[2019-11-19 12:25:18] doctrine.DEBUG: INSERT INTO reservation (id, client_id, room_id, begin_date, end_date, confirmed) SELECT id, client_id, room_id, begin_date, end_date, confirmed FROM __temp__reservation [] []
[2019-11-19 12:25:18] doctrine.DEBUG: DROP TABLE __temp__reservation [] []
[2019-11-19 12:25:18] doctrine.DEBUG: CREATE INDEX IDX_42C8495554177093 ON reservation (room_id) [] []
[2019-11-19 12:25:18] doctrine.DEBUG: CREATE INDEX IDX_42C8495519EB6921 ON reservation (client_id) [] []
[2019-11-19 12:25:18] doctrine.DEBUG: DROP INDEX IDX_9474526C54177093 [] []
[2019-11-19 12:25:18] doctrine.DEBUG: DROP INDEX IDX_9474526C19EB6921 [] []
[2019-11-19 12:25:18] doctrine.DEBUG: CREATE TEMPORARY TABLE __temp__comment AS SELECT id, client_id, room_id, commentary, grade FROM comment [] []
[2019-11-19 12:25:18] doctrine.DEBUG: DROP TABLE comment [] []
[2019-11-19 12:25:18] doctrine.DEBUG: CREATE TABLE comment (id INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL, client_id INTEGER NOT NULL, room_id INTEGER NOT NULL, commentary CLOB NOT NULL COLLATE BINARY, grade INTEGER NOT NULL, CONSTRAINT FK_9474526C19EB6921 FOREIGN KEY (client_id) REFERENCES client (id) NOT DEFERRABLE INITIALLY IMMEDIATE, CONSTRAINT FK_9474526C54177093 FOREIGN KEY (room_id) REFERENCES room (id) NOT DEFERRABLE INITIALLY IMMEDIATE) [] []
[2019-11-19 12:25:18] doctrine.DEBUG: INSERT INTO comment (id, client_id, room_id, commentary, grade) SELECT id, client_id, room_id, commentary, grade FROM __temp__comment [] []
[2019-11-19 12:25:18] doctrine.DEBUG: DROP TABLE __temp__comment [] []
[2019-11-19 12:25:18] doctrine.DEBUG: CREATE INDEX IDX_9474526C54177093 ON comment (room_id) [] []
[2019-11-19 12:25:18] doctrine.DEBUG: CREATE INDEX IDX_9474526C19EB6921 ON comment (client_id) [] []
[2019-11-19 12:25:18] doctrine.DEBUG: DROP INDEX IDX_729F519B7E3C61F9 [] []
[2019-11-19 12:25:18] doctrine.DEBUG: CREATE TEMPORARY TABLE __temp__room AS SELECT id, owner_id, summary, description, capacity, superficy, price, address FROM room [] []
[2019-11-19 12:25:18] doctrine.DEBUG: DROP TABLE room [] []
[2019-11-19 12:25:18] doctrine.DEBUG: CREATE TABLE room (id INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL, owner_id INTEGER NOT NULL, summary CLOB NOT NULL COLLATE BINARY, description CLOB DEFAULT NULL COLLATE BINARY, capacity INTEGER NOT NULL, superficy DOUBLE PRECISION DEFAULT NULL, price DOUBLE PRECISION NOT NULL, address VARCHAR(255) NOT NULL COLLATE BINARY, CONSTRAINT FK_729F519B7E3C61F9 FOREIGN KEY (owner_id) REFERENCES owner (id) NOT DEFERRABLE INITIALLY IMMEDIATE) [] []
[2019-11-19 12:25:18] doctrine.DEBUG: INSERT INTO room (id, owner_id, summary, description, capacity, superficy, price, address) SELECT id, owner_id, summary, description, capacity, superficy, price, address FROM __temp__room [] []
[2019-11-19 12:25:18] doctrine.DEBUG: DROP TABLE __temp__room [] []
[2019-11-19 12:25:18] doctrine.DEBUG: CREATE INDEX IDX_729F519B7E3C61F9 ON room (owner_id) [] []
[2019-11-19 12:25:18] doctrine.DEBUG: DROP INDEX IDX_4E2C37B798260155 [] []
[2019-11-19 12:25:18] doctrine.DEBUG: "ROLLBACK" [] []
[2019-11-19 12:25:18] console.ERROR: Error thrown while running command "doctrine:migrations:migrate". Message: "An exception occurred while executing 'DROP INDEX IDX_4E2C37B798260155':  SQLSTATE[HY000]: General error: 1 no such index: IDX_4E2C37B798260155" {"exception":"[object] (Doctrine\\DBAL\\Exception\\DriverException(code: 0): An exception occurred while executing 'DROP INDEX IDX_4E2C37B798260155':\n\nSQLSTATE[HY000]: General error: 1 no such index: IDX_4E2C37B798260155 at /home/serandour/Couette_et_café_final/AgVoy/vendor/doctrine/dbal/lib/Doctrine/DBAL/Driver/AbstractSQLiteDriver.php:70, Doctrine\\DBAL\\Driver\\PDOException(code: HY000): SQLSTATE[HY000]: General error: 1 no such index: IDX_4E2C37B798260155 at /home/serandour/Couette_et_café_final/AgVoy/vendor/doctrine/dbal/lib/Doctrine/DBAL/Driver/PDOConnection.php:80, PDOException(code: HY000): SQLSTATE[HY000]: General error: 1 no such index: IDX_4E2C37B798260155 at /home/serandour/Couette_et_café_final/AgVoy/vendor/doctrine/dbal/lib/Doctrine/DBAL/Driver/PDOConnection.php:75)","command":"doctrine:migrations:migrate","message":"An exception occurred while executing 'DROP INDEX IDX_4E2C37B798260155':\n\nSQLSTATE[HY000]: General error: 1 no such index: IDX_4E2C37B798260155"} []
[2019-11-19 12:25:18] console.DEBUG: Command "doctrine:migrations:migrate" exited with code "1" {"command":"doctrine:migrations:migrate","code":1} []
[2019-11-19 12:29:15] doctrine.DEBUG: CREATE TABLE reservation (id INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL, client_id INTEGER NOT NULL, room_id INTEGER NOT NULL, begin_date DATE NOT NULL, end_date DATE DEFAULT NULL, confirmed BOOLEAN NOT NULL, CONSTRAINT FK_42C8495519EB6921 FOREIGN KEY (client_id) REFERENCES client (id) NOT DEFERRABLE INITIALLY IMMEDIATE, CONSTRAINT FK_42C8495554177093 FOREIGN KEY (room_id) REFERENCES room (id) NOT DEFERRABLE INITIALLY IMMEDIATE) [] []
[2019-11-19 12:29:15] doctrine.DEBUG: CREATE INDEX IDX_42C8495519EB6921 ON reservation (client_id) [] []
[2019-11-19 12:29:15] doctrine.DEBUG: CREATE INDEX IDX_42C8495554177093 ON reservation (room_id) [] []
[2019-11-19 12:29:15] doctrine.DEBUG: CREATE TABLE region (id INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL, name VARCHAR(255) NOT NULL, presentation CLOB DEFAULT NULL, country VARCHAR(2) DEFAULT NULL) [] []
[2019-11-19 12:29:15] doctrine.DEBUG: CREATE TABLE comment (id INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL, client_id INTEGER NOT NULL, room_id INTEGER NOT NULL, commentary CLOB NOT NULL, grade INTEGER NOT NULL, CONSTRAINT FK_9474526C19EB6921 FOREIGN KEY (client_id) REFERENCES client (id) NOT DEFERRABLE INITIALLY IMMEDIATE, CONSTRAINT FK_9474526C54177093 FOREIGN KEY (room_id) REFERENCES room (id) NOT DEFERRABLE INITIALLY IMMEDIATE) [] []
[2019-11-19 12:29:15] doctrine.DEBUG: CREATE INDEX IDX_9474526C19EB6921 ON comment (client_id) [] []
[2019-11-19 12:29:15] doctrine.DEBUG: CREATE INDEX IDX_9474526C54177093 ON comment (room_id) [] []
[2019-11-19 12:29:15] doctrine.DEBUG: CREATE TABLE client (id INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL, firstname VARCHAR(255) DEFAULT NULL, family_name VARCHAR(255) NOT NULL, email VARCHAR(255) NOT NULL, gender VARCHAR(1) DEFAULT NULL, country VARCHAR(2) DEFAULT NULL, phone_number VARCHAR(255) DEFAULT NULL) [] []
[2019-11-19 12:29:15] doctrine.DEBUG: CREATE TABLE user (id INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL, email VARCHAR(180) NOT NULL, roles CLOB NOT NULL --(DC2Type:json) , password VARCHAR(255) NOT NULL) [] []
[2019-11-19 12:29:15] doctrine.DEBUG: CREATE UNIQUE INDEX UNIQ_8D93D649E7927C74 ON user (email) [] []
[2019-11-19 12:29:15] doctrine.DEBUG: CREATE TABLE owner (id INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL, firstname VARCHAR(255) DEFAULT NULL, family_name VARCHAR(255) NOT NULL, address CLOB DEFAULT NULL, country VARCHAR(2) NOT NULL) [] []
[2019-11-19 12:29:15] doctrine.DEBUG: CREATE TABLE room (id INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL, region_id INTEGER NOT NULL, owner_id INTEGER NOT NULL, summary CLOB NOT NULL, description CLOB DEFAULT NULL, capacity INTEGER NOT NULL, superficy DOUBLE PRECISION DEFAULT NULL, price DOUBLE PRECISION NOT NULL, address VARCHAR(255) NOT NULL, CONSTRAINT FK_729F519B98260155 FOREIGN KEY (region_id) REFERENCES region (id) NOT DEFERRABLE INITIALLY IMMEDIATE, CONSTRAINT FK_729F519B7E3C61F9 FOREIGN KEY (owner_id) REFERENCES owner (id) NOT DEFERRABLE INITIALLY IMMEDIATE) [] []
[2019-11-19 12:29:15] doctrine.DEBUG: CREATE INDEX IDX_729F519B98260155 ON room (region_id) [] []
[2019-11-19 12:29:15] doctrine.DEBUG: CREATE INDEX IDX_729F519B7E3C61F9 ON room (owner_id) [] []
[2019-11-19 12:29:16] doctrine.DEBUG: CREATE TABLE unavailable_period (id INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL, room_id INTEGER NOT NULL, begin_date DATE NOT NULL, end_date DATE DEFAULT NULL, CONSTRAINT FK_B9D87FBB54177093 FOREIGN KEY (room_id) REFERENCES room (id) NOT DEFERRABLE INITIALLY IMMEDIATE) [] []
[2019-11-19 12:29:16] doctrine.DEBUG: CREATE INDEX IDX_B9D87FBB54177093 ON unavailable_period (room_id) [] []
[2019-11-19 12:29:36] doctrine.DEBUG: SELECT name FROM sqlite_master WHERE type = 'table' AND name != 'sqlite_sequence' AND name != 'geometry_columns' AND name != 'spatial_ref_sys' UNION ALL SELECT name FROM sqlite_temp_master WHERE type = 'table' ORDER BY name [] []
[2019-11-19 12:29:36] doctrine.DEBUG: CREATE TABLE migration_versions (version VARCHAR(14) NOT NULL, executed_at DATETIME NOT NULL --(DC2Type:datetime_immutable) , PRIMARY KEY(version)) [] []
[2019-11-19 12:29:36] doctrine.DEBUG: SELECT name FROM sqlite_master WHERE type = 'table' AND name != 'sqlite_sequence' AND name != 'geometry_columns' AND name != 'spatial_ref_sys' UNION ALL SELECT name FROM sqlite_temp_master WHERE type = 'table' ORDER BY name [] []
[2019-11-19 12:29:36] doctrine.DEBUG: PRAGMA table_info('client') [] []
[2019-11-19 12:29:36] doctrine.DEBUG: SELECT sql   FROM (       SELECT *         FROM sqlite_master    UNION ALL       SELECT *         FROM sqlite_temp_master   ) WHERE type = 'table' AND name = ? ["client"] []
[2019-11-19 12:29:36] doctrine.DEBUG: PRAGMA index_list('client') [] []
[2019-11-19 12:29:36] doctrine.DEBUG: PRAGMA TABLE_INFO ('client') [] []
[2019-11-19 12:29:36] doctrine.DEBUG: SELECT sql   FROM (       SELECT *         FROM sqlite_master    UNION ALL       SELECT *         FROM sqlite_temp_master   ) WHERE type = 'table' AND name = ? ["client"] []
[2019-11-19 12:29:36] doctrine.DEBUG: PRAGMA table_info('comment') [] []
[2019-11-19 12:29:36] doctrine.DEBUG: SELECT sql   FROM (       SELECT *         FROM sqlite_master    UNION ALL       SELECT *         FROM sqlite_temp_master   ) WHERE type = 'table' AND name = ? ["comment"] []
[2019-11-19 12:29:36] doctrine.DEBUG: PRAGMA index_list('comment') [] []
[2019-11-19 12:29:36] doctrine.DEBUG: PRAGMA TABLE_INFO ('comment') [] []
[2019-11-19 12:29:36] doctrine.DEBUG: PRAGMA INDEX_INFO ('IDX_9474526C54177093') [] []
[2019-11-19 12:29:36] doctrine.DEBUG: PRAGMA INDEX_INFO ('IDX_9474526C19EB6921') [] []
[2019-11-19 12:29:36] doctrine.DEBUG: SELECT sql   FROM (       SELECT *         FROM sqlite_master    UNION ALL       SELECT *         FROM sqlite_temp_master   ) WHERE type = 'table' AND name = ? ["comment"] []
[2019-11-19 12:29:36] doctrine.DEBUG: PRAGMA table_info('migration_versions') [] []
[2019-11-19 12:29:36] doctrine.DEBUG: SELECT sql   FROM (       SELECT *         FROM sqlite_master    UNION ALL       SELECT *         FROM sqlite_temp_master   ) WHERE type = 'table' AND name = ? ["migration_versions"] []
[2019-11-19 12:29:36] doctrine.DEBUG: PRAGMA index_list('migration_versions') [] []
[2019-11-19 12:29:36] doctrine.DEBUG: PRAGMA TABLE_INFO ('migration_versions') [] []
[2019-11-19 12:29:36] doctrine.DEBUG: SELECT sql   FROM (       SELECT *         FROM sqlite_master    UNION ALL       SELECT *         FROM sqlite_temp_master   ) WHERE type = 'table' AND name = ? ["migration_versions"] []
[2019-11-19 12:29:36] doctrine.DEBUG: PRAGMA table_info('owner') [] []
[2019-11-19 12:29:36] doctrine.DEBUG: SELECT sql   FROM (       SELECT *         FROM sqlite_master    UNION ALL       SELECT *         FROM sqlite_temp_master   ) WHERE type = 'table' AND name = ? ["owner"] []
[2019-11-19 12:29:36] doctrine.DEBUG: PRAGMA index_list('owner') [] []
[2019-11-19 12:29:36] doctrine.DEBUG: PRAGMA TABLE_INFO ('owner') [] []
[2019-11-19 12:29:36] doctrine.DEBUG: SELECT sql   FROM (       SELECT *         FROM sqlite_master    UNION ALL       SELECT *         FROM sqlite_temp_master   ) WHERE type = 'table' AND name = ? ["owner"] []
[2019-11-19 12:29:36] doctrine.DEBUG: PRAGMA table_info('region') [] []
[2019-11-19 12:29:36] doctrine.DEBUG: SELECT sql   FROM (       SELECT *         FROM sqlite_master    UNION ALL       SELECT *         FROM sqlite_temp_master   ) WHERE type = 'table' AND name = ? ["region"] []
[2019-11-19 12:29:36] doctrine.DEBUG: PRAGMA index_list('region') [] []
[2019-11-19 12:29:36] doctrine.DEBUG: PRAGMA TABLE_INFO ('region') [] []
[2019-11-19 12:29:36] doctrine.DEBUG: SELECT sql   FROM (       SELECT *         FROM sqlite_master    UNION ALL       SELECT *         FROM sqlite_temp_master   ) WHERE type = 'table' AND name = ? ["region"] []
[2019-11-19 12:29:36] doctrine.DEBUG: PRAGMA table_info('reservation') [] []
[2019-11-19 12:29:36] doctrine.DEBUG: SELECT sql   FROM (       SELECT *         FROM sqlite_master    UNION ALL       SELECT *         FROM sqlite_temp_master   ) WHERE type = 'table' AND name = ? ["reservation"] []
[2019-11-19 12:29:36] doctrine.DEBUG: PRAGMA index_list('reservation') [] []
[2019-11-19 12:29:36] doctrine.DEBUG: PRAGMA TABLE_INFO ('reservation') [] []
[2019-11-19 12:29:36] doctrine.DEBUG: PRAGMA INDEX_INFO ('IDX_42C8495554177093') [] []
[2019-11-19 12:29:36] doctrine.DEBUG: PRAGMA INDEX_INFO ('IDX_42C8495519EB6921') [] []
[2019-11-19 12:29:36] doctrine.DEBUG: SELECT sql   FROM (       SELECT *         FROM sqlite_master    UNION ALL       SELECT *         FROM sqlite_temp_master   ) WHERE type = 'table' AND name = ? ["reservation"] []
[2019-11-19 12:29:36] doctrine.DEBUG: PRAGMA table_info('room') [] []
[2019-11-19 12:29:36] doctrine.DEBUG: SELECT sql   FROM (       SELECT *         FROM sqlite_master    UNION ALL       SELECT *         FROM sqlite_temp_master   ) WHERE type = 'table' AND name = ? ["room"] []
[2019-11-19 12:29:36] doctrine.DEBUG: PRAGMA index_list('room') [] []
[2019-11-19 12:29:36] doctrine.DEBUG: PRAGMA TABLE_INFO ('room') [] []
[2019-11-19 12:29:36] doctrine.DEBUG: PRAGMA INDEX_INFO ('IDX_729F519B7E3C61F9') [] []
[2019-11-19 12:29:36] doctrine.DEBUG: PRAGMA INDEX_INFO ('IDX_729F519B98260155') [] []
[2019-11-19 12:29:36] doctrine.DEBUG: SELECT sql   FROM (       SELECT *         FROM sqlite_master    UNION ALL       SELECT *         FROM sqlite_temp_master   ) WHERE type = 'table' AND name = ? ["room"] []
[2019-11-19 12:29:36] doctrine.DEBUG: PRAGMA table_info('unavailable_period') [] []
[2019-11-19 12:29:36] doctrine.DEBUG: SELECT sql   FROM (       SELECT *         FROM sqlite_master    UNION ALL       SELECT *         FROM sqlite_temp_master   ) WHERE type = 'table' AND name = ? ["unavailable_period"] []
[2019-11-19 12:29:36] doctrine.DEBUG: PRAGMA index_list('unavailable_period') [] []
[2019-11-19 12:29:36] doctrine.DEBUG: PRAGMA TABLE_INFO ('unavailable_period') [] []
[2019-11-19 12:29:36] doctrine.DEBUG: PRAGMA INDEX_INFO ('IDX_B9D87FBB54177093') [] []
[2019-11-19 12:29:36] doctrine.DEBUG: SELECT sql   FROM (       SELECT *         FROM sqlite_master    UNION ALL       SELECT *         FROM sqlite_temp_master   ) WHERE type = 'table' AND name = ? ["unavailable_period"] []
[2019-11-19 12:29:36] doctrine.DEBUG: PRAGMA table_info('user') [] []
[2019-11-19 12:29:36] doctrine.DEBUG: SELECT sql   FROM (       SELECT *         FROM sqlite_master    UNION ALL       SELECT *         FROM sqlite_temp_master   ) WHERE type = 'table' AND name = ? ["user"] []
[2019-11-19 12:29:36] doctrine.DEBUG: PRAGMA index_list('user') [] []
[2019-11-19 12:29:36] doctrine.DEBUG: PRAGMA TABLE_INFO ('user') [] []
[2019-11-19 12:29:36] doctrine.DEBUG: PRAGMA INDEX_INFO ('UNIQ_8D93D649E7927C74') [] []
[2019-11-19 12:29:36] doctrine.DEBUG: SELECT sql   FROM (       SELECT *         FROM sqlite_master    UNION ALL       SELECT *         FROM sqlite_temp_master   ) WHERE type = 'table' AND name = ? ["user"] []
[2019-11-19 12:29:42] doctrine.DEBUG: SELECT name FROM sqlite_master WHERE type = 'table' AND name != 'sqlite_sequence' AND name != 'geometry_columns' AND name != 'spatial_ref_sys' UNION ALL SELECT name FROM sqlite_temp_master WHERE type = 'table' ORDER BY name [] []
[2019-11-19 12:29:42] doctrine.DEBUG: PRAGMA table_info('migration_versions') [] []
[2019-11-19 12:29:42] doctrine.DEBUG: SELECT sql   FROM (       SELECT *         FROM sqlite_master    UNION ALL       SELECT *         FROM sqlite_temp_master   ) WHERE type = 'table' AND name = ? ["migration_versions"] []
[2019-11-19 12:29:42] doctrine.DEBUG: PRAGMA index_list('migration_versions') [] []
[2019-11-19 12:29:42] doctrine.DEBUG: PRAGMA TABLE_INFO ('migration_versions') [] []
[2019-11-19 12:29:42] doctrine.DEBUG: SELECT sql   FROM (       SELECT *         FROM sqlite_master    UNION ALL       SELECT *         FROM sqlite_temp_master   ) WHERE type = 'table' AND name = ? ["migration_versions"] []
[2019-11-19 12:29:42] doctrine.DEBUG: SELECT version FROM migration_versions [] []
[2019-11-19 12:29:44] doctrine.DEBUG: SELECT version FROM migration_versions WHERE version IN ('20191117191218', '20191119111559', '20191119112936') ORDER BY version DESC LIMIT 1 [] []
[2019-11-19 12:29:44] doctrine.DEBUG: SELECT version FROM migration_versions [] []
[2019-11-19 12:29:44] doctrine.DEBUG: "START TRANSACTION" [] []
[2019-11-19 12:29:44] doctrine.DEBUG: DROP INDEX IDX_42C8495554177093 [] []
[2019-11-19 12:29:44] doctrine.DEBUG: DROP INDEX IDX_42C8495519EB6921 [] []
[2019-11-19 12:29:44] doctrine.DEBUG: CREATE TEMPORARY TABLE __temp__reservation AS SELECT id, client_id, room_id, begin_date, end_date, confirmed FROM reservation [] []
[2019-11-19 12:29:44] doctrine.DEBUG: DROP TABLE reservation [] []
[2019-11-19 12:29:44] doctrine.DEBUG: CREATE TABLE reservation (id INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL, client_id INTEGER NOT NULL, room_id INTEGER NOT NULL, begin_date DATE NOT NULL, end_date DATE DEFAULT NULL, confirmed BOOLEAN NOT NULL, CONSTRAINT FK_42C8495519EB6921 FOREIGN KEY (client_id) REFERENCES client (id) NOT DEFERRABLE INITIALLY IMMEDIATE, CONSTRAINT FK_42C8495554177093 FOREIGN KEY (room_id) REFERENCES room (id) NOT DEFERRABLE INITIALLY IMMEDIATE) [] []
[2019-11-19 12:29:44] doctrine.DEBUG: INSERT INTO reservation (id, client_id, room_id, begin_date, end_date, confirmed) SELECT id, client_id, room_id, begin_date, end_date, confirmed FROM __temp__reservation [] []
[2019-11-19 12:29:44] doctrine.DEBUG: DROP TABLE __temp__reservation [] []
[2019-11-19 12:29:44] doctrine.DEBUG: CREATE INDEX IDX_42C8495554177093 ON reservation (room_id) [] []
[2019-11-19 12:29:44] doctrine.DEBUG: CREATE INDEX IDX_42C8495519EB6921 ON reservation (client_id) [] []
[2019-11-19 12:29:44] doctrine.DEBUG: DROP INDEX IDX_9474526C54177093 [] []
[2019-11-19 12:29:44] doctrine.DEBUG: DROP INDEX IDX_9474526C19EB6921 [] []
[2019-11-19 12:29:44] doctrine.DEBUG: CREATE TEMPORARY TABLE __temp__comment AS SELECT id, client_id, room_id, commentary, grade FROM comment [] []
[2019-11-19 12:29:44] doctrine.DEBUG: DROP TABLE comment [] []
[2019-11-19 12:29:44] doctrine.DEBUG: CREATE TABLE comment (id INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL, client_id INTEGER NOT NULL, room_id INTEGER NOT NULL, commentary CLOB NOT NULL COLLATE BINARY, grade INTEGER NOT NULL, CONSTRAINT FK_9474526C19EB6921 FOREIGN KEY (client_id) REFERENCES client (id) NOT DEFERRABLE INITIALLY IMMEDIATE, CONSTRAINT FK_9474526C54177093 FOREIGN KEY (room_id) REFERENCES room (id) NOT DEFERRABLE INITIALLY IMMEDIATE) [] []
[2019-11-19 12:29:44] doctrine.DEBUG: INSERT INTO comment (id, client_id, room_id, commentary, grade) SELECT id, client_id, room_id, commentary, grade FROM __temp__comment [] []
[2019-11-19 12:29:44] doctrine.DEBUG: DROP TABLE __temp__comment [] []
[2019-11-19 12:29:44] doctrine.DEBUG: CREATE INDEX IDX_9474526C54177093 ON comment (room_id) [] []
[2019-11-19 12:29:44] doctrine.DEBUG: CREATE INDEX IDX_9474526C19EB6921 ON comment (client_id) [] []
[2019-11-19 12:29:44] doctrine.DEBUG: DROP INDEX IDX_729F519B7E3C61F9 [] []
[2019-11-19 12:29:44] doctrine.DEBUG: CREATE TEMPORARY TABLE __temp__room AS SELECT id, owner_id, summary, description, capacity, superficy, price, address FROM room [] []
[2019-11-19 12:29:44] doctrine.DEBUG: DROP TABLE room [] []
[2019-11-19 12:29:44] doctrine.DEBUG: CREATE TABLE room (id INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL, owner_id INTEGER NOT NULL, summary CLOB NOT NULL COLLATE BINARY, description CLOB DEFAULT NULL COLLATE BINARY, capacity INTEGER NOT NULL, superficy DOUBLE PRECISION DEFAULT NULL, price DOUBLE PRECISION NOT NULL, address VARCHAR(255) NOT NULL COLLATE BINARY, CONSTRAINT FK_729F519B7E3C61F9 FOREIGN KEY (owner_id) REFERENCES owner (id) NOT DEFERRABLE INITIALLY IMMEDIATE) [] []
[2019-11-19 12:29:44] doctrine.DEBUG: INSERT INTO room (id, owner_id, summary, description, capacity, superficy, price, address) SELECT id, owner_id, summary, description, capacity, superficy, price, address FROM __temp__room [] []
[2019-11-19 12:29:44] doctrine.DEBUG: DROP TABLE __temp__room [] []
[2019-11-19 12:29:44] doctrine.DEBUG: CREATE INDEX IDX_729F519B7E3C61F9 ON room (owner_id) [] []
[2019-11-19 12:29:44] doctrine.DEBUG: DROP INDEX IDX_4E2C37B798260155 [] []
[2019-11-19 12:29:44] doctrine.DEBUG: "ROLLBACK" [] []
[2019-11-19 12:29:44] console.ERROR: Error thrown while running command "doctrine:migrations:migrate". Message: "An exception occurred while executing 'DROP INDEX IDX_4E2C37B798260155':  SQLSTATE[HY000]: General error: 1 no such index: IDX_4E2C37B798260155" {"exception":"[object] (Doctrine\\DBAL\\Exception\\DriverException(code: 0): An exception occurred while executing 'DROP INDEX IDX_4E2C37B798260155':\n\nSQLSTATE[HY000]: General error: 1 no such index: IDX_4E2C37B798260155 at /home/serandour/Couette_et_café_final/AgVoy/vendor/doctrine/dbal/lib/Doctrine/DBAL/Driver/AbstractSQLiteDriver.php:70, Doctrine\\DBAL\\Driver\\PDOException(code: HY000): SQLSTATE[HY000]: General error: 1 no such index: IDX_4E2C37B798260155 at /home/serandour/Couette_et_café_final/AgVoy/vendor/doctrine/dbal/lib/Doctrine/DBAL/Driver/PDOConnection.php:80, PDOException(code: HY000): SQLSTATE[HY000]: General error: 1 no such index: IDX_4E2C37B798260155 at /home/serandour/Couette_et_café_final/AgVoy/vendor/doctrine/dbal/lib/Doctrine/DBAL/Driver/PDOConnection.php:75)","command":"doctrine:migrations:migrate","message":"An exception occurred while executing 'DROP INDEX IDX_4E2C37B798260155':\n\nSQLSTATE[HY000]: General error: 1 no such index: IDX_4E2C37B798260155"} []
[2019-11-19 12:29:44] console.DEBUG: Command "doctrine:migrations:migrate" exited with code "1" {"command":"doctrine:migrations:migrate","code":1} []
[2019-11-19 12:30:17] php.DEBUG: Warning: fsockopen(): unable to connect to 127.0.0.1:8000 (Connection refused) {"exception":"[object] (Symfony\\Component\\Debug\\Exception\\SilencedErrorContext: {\"severity\":2,\"file\":\"/home/serandour/Couette_et_café_final/AgVoy/vendor/symfony/web-server-bundle/WebServerConfig.php\",\"line\":141,\"trace\":[{\"file\":\"/home/serandour/Couette_et_café_final/AgVoy/vendor/symfony/web-server-bundle/WebServerConfig.php\",\"line\":54,\"function\":\"findBestPort\",\"class\":\"Symfony\\\\Bundle\\\\WebServerBundle\\\\WebServerConfig\",\"type\":\"->\"}],\"count\":1})"} []
[2019-11-19 12:30:18] request.INFO: Matched route "region_index". {"route":"region_index","route_parameters":{"_route":"region_index","_controller":"App\\Controller\\BackofficeRegionController::index"},"request_uri":"http://127.0.0.1:8000/backoffice/region/","method":"GET"} []
[2019-11-19 12:30:18] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2019-11-19 12:30:18] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\LoginFormAuthenticator"} []
[2019-11-19 12:30:18] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\LoginFormAuthenticator"} []
[2019-11-19 12:30:18] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2019-11-19 12:30:18] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.presentation AS presentation_3, t0.country AS country_4 FROM region t0 [] []
[2019-11-19 12:30:19] request.INFO: Matched route "region_new". {"route":"region_new","route_parameters":{"_route":"region_new","_controller":"App\\Controller\\BackofficeRegionController::new"},"request_uri":"http://127.0.0.1:8000/backoffice/region/new","method":"GET"} []
[2019-11-19 12:30:19] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2019-11-19 12:30:19] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\LoginFormAuthenticator"} []
[2019-11-19 12:30:19] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\LoginFormAuthenticator"} []
[2019-11-19 12:30:19] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2019-11-19 12:30:38] request.INFO: Matched route "region_new". {"route":"region_new","route_parameters":{"_route":"region_new","_controller":"App\\Controller\\BackofficeRegionController::new"},"request_uri":"http://127.0.0.1:8000/backoffice/region/new","method":"POST"} []
[2019-11-19 12:30:38] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2019-11-19 12:30:38] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\LoginFormAuthenticator"} []
[2019-11-19 12:30:38] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\LoginFormAuthenticator"} []
[2019-11-19 12:30:38] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2019-11-19 12:30:38] doctrine.DEBUG: "START TRANSACTION" [] []
[2019-11-19 12:30:38] doctrine.DEBUG: INSERT INTO region (name, presentation, country) VALUES (?, ?, ?) {"1":"Ile de France","2":"La région française capitale","3":"FR"} []
[2019-11-19 12:30:38] doctrine.DEBUG: "COMMIT" [] []
[2019-11-19 12:30:38] request.INFO: Matched route "region_index". {"route":"region_index","route_parameters":{"_route":"region_index","_controller":"App\\Controller\\BackofficeRegionController::index"},"request_uri":"http://127.0.0.1:8000/backoffice/region/","method":"GET"} []
[2019-11-19 12:30:38] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2019-11-19 12:30:38] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\LoginFormAuthenticator"} []
[2019-11-19 12:30:38] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\LoginFormAuthenticator"} []
[2019-11-19 12:30:38] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2019-11-19 12:30:38] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.presentation AS presentation_3, t0.country AS country_4 FROM region t0 [] []
[2019-11-19 12:31:05] request.INFO: Matched route "region_new". {"route":"region_new","route_parameters":{"_route":"region_new","_controller":"App\\Controller\\BackofficeRegionController::new"},"request_uri":"http://127.0.0.1:8000/backoffice/region/new","method":"GET"} []
[2019-11-19 12:31:05] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2019-11-19 12:31:05] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\LoginFormAuthenticator"} []
[2019-11-19 12:31:05] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\LoginFormAuthenticator"} []
[2019-11-19 12:31:05] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2019-11-19 12:31:20] request.INFO: Matched route "region_new". {"route":"region_new","route_parameters":{"_route":"region_new","_controller":"App\\Controller\\BackofficeRegionController::new"},"request_uri":"http://127.0.0.1:8000/backoffice/region/new","method":"POST"} []
[2019-11-19 12:31:20] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2019-11-19 12:31:20] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\LoginFormAuthenticator"} []
[2019-11-19 12:31:21] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\LoginFormAuthenticator"} []
[2019-11-19 12:31:21] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2019-11-19 12:31:21] doctrine.DEBUG: "START TRANSACTION" [] []
[2019-11-19 12:31:21] doctrine.DEBUG: INSERT INTO region (name, presentation, country) VALUES (?, ?, ?) {"1":"Bretagne","2":"La région des crêpes","3":"FR"} []
[2019-11-19 12:31:21] doctrine.DEBUG: "COMMIT" [] []
[2019-11-19 12:31:21] request.INFO: Matched route "region_index". {"route":"region_index","route_parameters":{"_route":"region_index","_controller":"App\\Controller\\BackofficeRegionController::index"},"request_uri":"http://127.0.0.1:8000/backoffice/region/","method":"GET"} []
[2019-11-19 12:31:21] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2019-11-19 12:31:21] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\LoginFormAuthenticator"} []
[2019-11-19 12:31:21] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\LoginFormAuthenticator"} []
[2019-11-19 12:31:21] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2019-11-19 12:31:21] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.presentation AS presentation_3, t0.country AS country_4 FROM region t0 [] []
[2019-11-19 12:31:26] request.INFO: Matched route "room_index". {"route":"room_index","route_parameters":{"_route":"room_index","_controller":"App\\Controller\\OwnerRoomController::index"},"request_uri":"http://127.0.0.1:8000/_owner/room/","method":"GET"} []
[2019-11-19 12:31:26] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2019-11-19 12:31:26] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\LoginFormAuthenticator"} []
[2019-11-19 12:31:26] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\LoginFormAuthenticator"} []
[2019-11-19 12:31:26] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2019-11-19 12:31:26] doctrine.DEBUG: SELECT t0.id AS id_1, t0.summary AS summary_2, t0.description AS description_3, t0.capacity AS capacity_4, t0.superficy AS superficy_5, t0.price AS price_6, t0.address AS address_7, t0.region_id AS region_id_8, t0.owner_id AS owner_id_9 FROM room t0 [] []
[2019-11-19 12:31:27] request.INFO: Matched route "room_new". {"route":"room_new","route_parameters":{"_route":"room_new","_controller":"App\\Controller\\OwnerRoomController::new"},"request_uri":"http://127.0.0.1:8000/_owner/room/new","method":"GET"} []
[2019-11-19 12:31:27] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2019-11-19 12:31:27] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\LoginFormAuthenticator"} []
[2019-11-19 12:31:27] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\LoginFormAuthenticator"} []
[2019-11-19 12:31:27] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2019-11-19 12:31:27] doctrine.DEBUG: SELECT r0_.id AS id_0, r0_.name AS name_1, r0_.presentation AS presentation_2, r0_.country AS country_3 FROM region r0_ [] []
[2019-11-19 12:31:27] doctrine.DEBUG: SELECT o0_.id AS id_0, o0_.firstname AS firstname_1, o0_.family_name AS family_name_2, o0_.address AS address_3, o0_.country AS country_4 FROM owner o0_ [] []
[2019-11-19 12:32:17] request.INFO: Matched route "owner_index". {"route":"owner_index","route_parameters":{"_route":"owner_index","_controller":"App\\Controller\\OwnerController::index"},"request_uri":"http://127.0.0.1:8000/owner/","method":"GET"} []
[2019-11-19 12:32:17] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2019-11-19 12:32:17] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\LoginFormAuthenticator"} []
[2019-11-19 12:32:17] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\LoginFormAuthenticator"} []
[2019-11-19 12:32:17] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2019-11-19 12:32:17] doctrine.DEBUG: SELECT t0.id AS id_1, t0.firstname AS firstname_2, t0.family_name AS family_name_3, t0.address AS address_4, t0.country AS country_5 FROM owner t0 [] []
[2019-11-19 12:32:19] request.INFO: Matched route "owner_new". {"route":"owner_new","route_parameters":{"_route":"owner_new","_controller":"App\\Controller\\OwnerController::new"},"request_uri":"http://127.0.0.1:8000/owner/new","method":"GET"} []
[2019-11-19 12:32:19] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2019-11-19 12:32:19] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\LoginFormAuthenticator"} []
[2019-11-19 12:32:19] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\LoginFormAuthenticator"} []
[2019-11-19 12:32:19] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2019-11-19 12:32:36] request.INFO: Matched route "owner_new". {"route":"owner_new","route_parameters":{"_route":"owner_new","_controller":"App\\Controller\\OwnerController::new"},"request_uri":"http://127.0.0.1:8000/owner/new","method":"POST"} []
[2019-11-19 12:32:36] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2019-11-19 12:32:36] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\LoginFormAuthenticator"} []
[2019-11-19 12:32:36] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\LoginFormAuthenticator"} []
[2019-11-19 12:32:36] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2019-11-19 12:32:36] doctrine.DEBUG: "START TRANSACTION" [] []
[2019-11-19 12:32:36] doctrine.DEBUG: INSERT INTO owner (firstname, family_name, address, country) VALUES (?, ?, ?, ?) {"1":"Albert","2":"Martin","3":"52 avenue du pont levis","4":"FR"} []
[2019-11-19 12:32:36] doctrine.DEBUG: "COMMIT" [] []
[2019-11-19 12:32:36] request.INFO: Matched route "owner_index". {"route":"owner_index","route_parameters":{"_route":"owner_index","_controller":"App\\Controller\\OwnerController::index"},"request_uri":"http://127.0.0.1:8000/owner/","method":"GET"} []
[2019-11-19 12:32:36] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2019-11-19 12:32:36] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\LoginFormAuthenticator"} []
[2019-11-19 12:32:36] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\LoginFormAuthenticator"} []
[2019-11-19 12:32:36] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2019-11-19 12:32:36] doctrine.DEBUG: SELECT t0.id AS id_1, t0.firstname AS firstname_2, t0.family_name AS family_name_3, t0.address AS address_4, t0.country AS country_5 FROM owner t0 [] []
[2019-11-19 12:32:43] request.INFO: Matched route "room_new". {"route":"room_new","route_parameters":{"_route":"room_new","_controller":"App\\Controller\\OwnerRoomController::new"},"request_uri":"http://127.0.0.1:8000/_owner/room/new","method":"GET"} []
[2019-11-19 12:32:43] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2019-11-19 12:32:43] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\LoginFormAuthenticator"} []
[2019-11-19 12:32:43] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\LoginFormAuthenticator"} []
[2019-11-19 12:32:43] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2019-11-19 12:32:43] doctrine.DEBUG: SELECT r0_.id AS id_0, r0_.name AS name_1, r0_.presentation AS presentation_2, r0_.country AS country_3 FROM region r0_ [] []
[2019-11-19 12:32:43] doctrine.DEBUG: SELECT o0_.id AS id_0, o0_.firstname AS firstname_1, o0_.family_name AS family_name_2, o0_.address AS address_3, o0_.country AS country_4 FROM owner o0_ [] []
[2019-11-19 12:32:47] request.INFO: Matched route "room_new". {"route":"room_new","route_parameters":{"_route":"room_new","_controller":"App\\Controller\\OwnerRoomController::new"},"request_uri":"http://127.0.0.1:8000/_owner/room/new","method":"POST"} []
[2019-11-19 12:32:47] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2019-11-19 12:32:47] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\LoginFormAuthenticator"} []
[2019-11-19 12:32:47] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\LoginFormAuthenticator"} []
[2019-11-19 12:32:47] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2019-11-19 12:32:47] doctrine.DEBUG: SELECT r0_.id AS id_0, r0_.name AS name_1, r0_.presentation AS presentation_2, r0_.country AS country_3 FROM region r0_ WHERE r0_.id IN (?) [["1"]] []
[2019-11-19 12:32:47] doctrine.DEBUG: SELECT o0_.id AS id_0, o0_.firstname AS firstname_1, o0_.family_name AS family_name_2, o0_.address AS address_3, o0_.country AS country_4 FROM owner o0_ WHERE o0_.id IN (?) [["1"]] []
[2019-11-19 12:32:47] doctrine.DEBUG: "START TRANSACTION" [] []
[2019-11-19 12:32:47] doctrine.DEBUG: INSERT INTO room (summary, description, capacity, superficy, price, address, region_id, owner_id) VALUES (?, ?, ?, ?, ?, ?, ?, ?) {"1":"Beau poulailler ancien à Évry","2":"très joli espace sur paille","3":4,"4":1000,"5":500,"6":"52 avenue du pont levis","7":1,"8":1} []
[2019-11-19 12:32:47] doctrine.DEBUG: "COMMIT" [] []
[2019-11-19 12:32:47] request.INFO: Matched route "room_index". {"route":"room_index","route_parameters":{"_route":"room_index","_controller":"App\\Controller\\OwnerRoomController::index"},"request_uri":"http://127.0.0.1:8000/_owner/room/","method":"GET"} []
[2019-11-19 12:32:47] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2019-11-19 12:32:47] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\LoginFormAuthenticator"} []
[2019-11-19 12:32:47] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\LoginFormAuthenticator"} []
[2019-11-19 12:32:47] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2019-11-19 12:32:47] doctrine.DEBUG: SELECT t0.id AS id_1, t0.summary AS summary_2, t0.description AS description_3, t0.capacity AS capacity_4, t0.superficy AS superficy_5, t0.price AS price_6, t0.address AS address_7, t0.region_id AS region_id_8, t0.owner_id AS owner_id_9 FROM room t0 [] []
[2019-11-19 12:32:50] request.INFO: Matched route "room_show". {"route":"room_show","route_parameters":{"_route":"room_show","_controller":"App\\Controller\\OwnerRoomController::show","id":"1"},"request_uri":"http://127.0.0.1:8000/_owner/room/1","method":"GET"} []
[2019-11-19 12:32:50] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2019-11-19 12:32:50] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\LoginFormAuthenticator"} []
[2019-11-19 12:32:50] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\LoginFormAuthenticator"} []
[2019-11-19 12:32:50] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2019-11-19 12:32:50] doctrine.DEBUG: SELECT t0.id AS id_1, t0.summary AS summary_2, t0.description AS description_3, t0.capacity AS capacity_4, t0.superficy AS superficy_5, t0.price AS price_6, t0.address AS address_7, t0.region_id AS region_id_8, t0.owner_id AS owner_id_9 FROM room t0 WHERE t0.id = ? ["1"] []
[2019-11-19 12:33:47] request.INFO: Matched route "room_index". {"route":"room_index","route_parameters":{"_route":"room_index","_controller":"App\\Controller\\OwnerRoomController::index"},"request_uri":"http://127.0.0.1:8000/_owner/room/","method":"GET"} []
[2019-11-19 12:33:47] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2019-11-19 12:33:47] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\LoginFormAuthenticator"} []
[2019-11-19 12:33:47] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\LoginFormAuthenticator"} []
[2019-11-19 12:33:47] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2019-11-19 12:33:47] doctrine.DEBUG: SELECT t0.id AS id_1, t0.summary AS summary_2, t0.description AS description_3, t0.capacity AS capacity_4, t0.superficy AS superficy_5, t0.price AS price_6, t0.address AS address_7, t0.region_id AS region_id_8, t0.owner_id AS owner_id_9 FROM room t0 [] []
[2019-11-19 12:33:49] request.INFO: Matched route "room_show". {"route":"room_show","route_parameters":{"_route":"room_show","_controller":"App\\Controller\\OwnerRoomController::show","id":"1"},"request_uri":"http://127.0.0.1:8000/_owner/room/1","method":"GET"} []
[2019-11-19 12:33:49] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2019-11-19 12:33:49] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\LoginFormAuthenticator"} []
[2019-11-19 12:33:49] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\LoginFormAuthenticator"} []
[2019-11-19 12:33:49] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2019-11-19 12:33:49] doctrine.DEBUG: SELECT t0.id AS id_1, t0.summary AS summary_2, t0.description AS description_3, t0.capacity AS capacity_4, t0.superficy AS superficy_5, t0.price AS price_6, t0.address AS address_7, t0.region_id AS region_id_8, t0.owner_id AS owner_id_9 FROM room t0 WHERE t0.id = ? ["1"] []
[2019-11-19 12:33:49] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.presentation AS presentation_3, t0.country AS country_4 FROM region t0 WHERE t0.id = ? [1] []
[2019-11-19 12:33:52] request.INFO: Matched route "room_index". {"route":"room_index","route_parameters":{"_route":"room_index","_controller":"App\\Controller\\OwnerRoomController::index"},"request_uri":"http://127.0.0.1:8000/_owner/room/","method":"GET"} []
[2019-11-19 12:33:52] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2019-11-19 12:33:52] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\LoginFormAuthenticator"} []
[2019-11-19 12:33:52] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\LoginFormAuthenticator"} []
[2019-11-19 12:33:52] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2019-11-19 12:33:52] doctrine.DEBUG: SELECT t0.id AS id_1, t0.summary AS summary_2, t0.description AS description_3, t0.capacity AS capacity_4, t0.superficy AS superficy_5, t0.price AS price_6, t0.address AS address_7, t0.region_id AS region_id_8, t0.owner_id AS owner_id_9 FROM room t0 [] []
[2019-11-19 12:38:53] request.INFO: Matched route "reservation_index". {"route":"reservation_index","route_parameters":{"_controller":"Symfony\\Bundle\\FrameworkBundle\\Controller\\RedirectController::urlRedirectAction","path":"/reservation/","permanent":true,"scheme":null,"httpPort":8000,"httpsPort":443,"_route":"reservation_index"},"request_uri":"http://127.0.0.1:8000/reservation","method":"GET"} []
[2019-11-19 12:38:53] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2019-11-19 12:38:53] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\LoginFormAuthenticator"} []
[2019-11-19 12:38:53] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\LoginFormAuthenticator"} []
[2019-11-19 12:38:53] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2019-11-19 12:38:53] request.INFO: Matched route "reservation_index". {"route":"reservation_index","route_parameters":{"_route":"reservation_index","_controller":"App\\Controller\\ReservationController::index"},"request_uri":"http://127.0.0.1:8000/reservation/","method":"GET"} []
[2019-11-19 12:38:53] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2019-11-19 12:38:53] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\LoginFormAuthenticator"} []
[2019-11-19 12:38:53] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\LoginFormAuthenticator"} []
[2019-11-19 12:38:53] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2019-11-19 12:38:53] doctrine.DEBUG: SELECT t0.id AS id_1, t0.begin_date AS begin_date_2, t0.end_date AS end_date_3, t0.confirmed AS confirmed_4, t0.client_id AS client_id_5, t0.room_id AS room_id_6 FROM reservation t0 [] []
[2019-11-19 12:38:56] request.INFO: Matched route "reservation_new". {"route":"reservation_new","route_parameters":{"_route":"reservation_new","_controller":"App\\Controller\\ReservationController::new"},"request_uri":"http://127.0.0.1:8000/reservation/new","method":"GET"} []
[2019-11-19 12:38:56] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2019-11-19 12:38:56] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\LoginFormAuthenticator"} []
[2019-11-19 12:38:56] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\LoginFormAuthenticator"} []
[2019-11-19 12:38:56] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2019-11-19 12:38:56] doctrine.DEBUG: SELECT c0_.id AS id_0, c0_.firstname AS firstname_1, c0_.family_name AS family_name_2, c0_.email AS email_3, c0_.gender AS gender_4, c0_.country AS country_5, c0_.phone_number AS phone_number_6 FROM client c0_ [] []
[2019-11-19 12:38:56] doctrine.DEBUG: SELECT r0_.id AS id_0, r0_.summary AS summary_1, r0_.description AS description_2, r0_.capacity AS capacity_3, r0_.superficy AS superficy_4, r0_.price AS price_5, r0_.address AS address_6, r0_.region_id AS region_id_7, r0_.owner_id AS owner_id_8 FROM room r0_ [] []
[2019-11-19 12:39:30] request.INFO: Matched route "client_index". {"route":"client_index","route_parameters":{"_controller":"Symfony\\Bundle\\FrameworkBundle\\Controller\\RedirectController::urlRedirectAction","path":"/client/","permanent":true,"scheme":null,"httpPort":8000,"httpsPort":443,"_route":"client_index"},"request_uri":"http://127.0.0.1:8000/client","method":"GET"} []
[2019-11-19 12:39:30] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2019-11-19 12:39:30] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\LoginFormAuthenticator"} []
[2019-11-19 12:39:30] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\LoginFormAuthenticator"} []
[2019-11-19 12:39:30] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2019-11-19 12:39:30] request.INFO: Matched route "client_index". {"route":"client_index","route_parameters":{"_route":"client_index","_controller":"App\\Controller\\ClientController::index"},"request_uri":"http://127.0.0.1:8000/client/","method":"GET"} []
[2019-11-19 12:39:30] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2019-11-19 12:39:30] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\LoginFormAuthenticator"} []
[2019-11-19 12:39:30] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\LoginFormAuthenticator"} []
[2019-11-19 12:39:30] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2019-11-19 12:39:30] doctrine.DEBUG: SELECT t0.id AS id_1, t0.firstname AS firstname_2, t0.family_name AS family_name_3, t0.email AS email_4, t0.gender AS gender_5, t0.country AS country_6, t0.phone_number AS phone_number_7 FROM client t0 [] []
[2019-11-19 12:39:32] request.INFO: Matched route "client_new". {"route":"client_new","route_parameters":{"_route":"client_new","_controller":"App\\Controller\\ClientController::new"},"request_uri":"http://127.0.0.1:8000/client/new","method":"GET"} []
[2019-11-19 12:39:32] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2019-11-19 12:39:32] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\LoginFormAuthenticator"} []
[2019-11-19 12:39:32] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\LoginFormAuthenticator"} []
[2019-11-19 12:39:32] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2019-11-19 12:40:09] request.INFO: Matched route "client_new". {"route":"client_new","route_parameters":{"_route":"client_new","_controller":"App\\Controller\\ClientController::new"},"request_uri":"http://127.0.0.1:8000/client/new","method":"POST"} []
[2019-11-19 12:40:09] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2019-11-19 12:40:09] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\LoginFormAuthenticator"} []
[2019-11-19 12:40:09] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\LoginFormAuthenticator"} []
[2019-11-19 12:40:09] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2019-11-19 12:40:09] doctrine.DEBUG: "START TRANSACTION" [] []
[2019-11-19 12:40:09] doctrine.DEBUG: INSERT INTO client (firstname, family_name, email, gender, country, phone_number) VALUES (?, ?, ?, ?, ?, ?) {"1":"Pascal","2":"Olivier","3":"tp@gmail.com","4":"M","5":"FR","6":"0545856545"} []
[2019-11-19 12:40:09] doctrine.DEBUG: "COMMIT" [] []
[2019-11-19 12:40:09] request.INFO: Matched route "client_index". {"route":"client_index","route_parameters":{"_route":"client_index","_controller":"App\\Controller\\ClientController::index"},"request_uri":"http://127.0.0.1:8000/client/","method":"GET"} []
[2019-11-19 12:40:09] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2019-11-19 12:40:09] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\LoginFormAuthenticator"} []
[2019-11-19 12:40:09] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\LoginFormAuthenticator"} []
[2019-11-19 12:40:09] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2019-11-19 12:40:09] doctrine.DEBUG: SELECT t0.id AS id_1, t0.firstname AS firstname_2, t0.family_name AS family_name_3, t0.email AS email_4, t0.gender AS gender_5, t0.country AS country_6, t0.phone_number AS phone_number_7 FROM client t0 [] []
[2019-11-19 12:40:16] request.INFO: Matched route "reservation_new". {"route":"reservation_new","route_parameters":{"_route":"reservation_new","_controller":"App\\Controller\\ReservationController::new"},"request_uri":"http://127.0.0.1:8000/reservation/new","method":"GET"} []
[2019-11-19 12:40:16] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2019-11-19 12:40:16] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\LoginFormAuthenticator"} []
[2019-11-19 12:40:16] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\LoginFormAuthenticator"} []
[2019-11-19 12:40:16] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2019-11-19 12:40:16] doctrine.DEBUG: SELECT c0_.id AS id_0, c0_.firstname AS firstname_1, c0_.family_name AS family_name_2, c0_.email AS email_3, c0_.gender AS gender_4, c0_.country AS country_5, c0_.phone_number AS phone_number_6 FROM client c0_ [] []
[2019-11-19 12:40:16] doctrine.DEBUG: SELECT r0_.id AS id_0, r0_.summary AS summary_1, r0_.description AS description_2, r0_.capacity AS capacity_3, r0_.superficy AS superficy_4, r0_.price AS price_5, r0_.address AS address_6, r0_.region_id AS region_id_7, r0_.owner_id AS owner_id_8 FROM room r0_ [] []
[2019-11-19 12:40:18] request.INFO: Matched route "reservation_new". {"route":"reservation_new","route_parameters":{"_route":"reservation_new","_controller":"App\\Controller\\ReservationController::new"},"request_uri":"http://127.0.0.1:8000/reservation/new","method":"POST"} []
[2019-11-19 12:40:18] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2019-11-19 12:40:18] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\LoginFormAuthenticator"} []
[2019-11-19 12:40:18] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\LoginFormAuthenticator"} []
[2019-11-19 12:40:18] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2019-11-19 12:40:18] doctrine.DEBUG: SELECT c0_.id AS id_0, c0_.firstname AS firstname_1, c0_.family_name AS family_name_2, c0_.email AS email_3, c0_.gender AS gender_4, c0_.country AS country_5, c0_.phone_number AS phone_number_6 FROM client c0_ WHERE c0_.id IN (?) [["1"]] []
[2019-11-19 12:40:18] doctrine.DEBUG: SELECT r0_.id AS id_0, r0_.summary AS summary_1, r0_.description AS description_2, r0_.capacity AS capacity_3, r0_.superficy AS superficy_4, r0_.price AS price_5, r0_.address AS address_6, r0_.region_id AS region_id_7, r0_.owner_id AS owner_id_8 FROM room r0_ WHERE r0_.id IN (?) [["1"]] []
[2019-11-19 12:40:18] doctrine.DEBUG: "START TRANSACTION" [] []
[2019-11-19 12:40:18] doctrine.DEBUG: INSERT INTO reservation (begin_date, end_date, confirmed, client_id, room_id) VALUES (?, ?, ?, ?, ?) {"1":"2014-01-01 00:00:00","2":"2015-01-01 00:00:00","3":false,"4":1,"5":1} []
[2019-11-19 12:40:18] doctrine.DEBUG: "COMMIT" [] []
[2019-11-19 12:40:18] request.INFO: Matched route "reservation_index". {"route":"reservation_index","route_parameters":{"_route":"reservation_index","_controller":"App\\Controller\\ReservationController::index"},"request_uri":"http://127.0.0.1:8000/reservation/","method":"GET"} []
[2019-11-19 12:40:18] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2019-11-19 12:40:18] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\LoginFormAuthenticator"} []
[2019-11-19 12:40:18] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\LoginFormAuthenticator"} []
[2019-11-19 12:40:18] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2019-11-19 12:40:18] doctrine.DEBUG: SELECT t0.id AS id_1, t0.begin_date AS begin_date_2, t0.end_date AS end_date_3, t0.confirmed AS confirmed_4, t0.client_id AS client_id_5, t0.room_id AS room_id_6 FROM reservation t0 [] []
[2019-11-19 12:42:17] request.INFO: Matched route "app_login". {"route":"app_login","route_parameters":{"_route":"app_login","_controller":"App\\Controller\\SecurityController::login"},"request_uri":"http://127.0.0.1:8000/login","method":"GET"} []
[2019-11-19 12:42:17] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2019-11-19 12:42:17] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\LoginFormAuthenticator"} []
[2019-11-19 12:42:17] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\LoginFormAuthenticator"} []
[2019-11-19 12:42:17] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2019-11-19 12:42:22] request.INFO: Matched route "app_login". {"route":"app_login","route_parameters":{"_route":"app_login","_controller":"App\\Controller\\SecurityController::login"},"request_uri":"http://127.0.0.1:8000/login","method":"POST"} []
[2019-11-19 12:42:22] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2019-11-19 12:42:22] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\LoginFormAuthenticator"} []
[2019-11-19 12:42:22] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\LoginFormAuthenticator"} []
[2019-11-19 12:42:22] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"main","authenticator":"App\\Security\\LoginFormAuthenticator"} []
[2019-11-19 12:42:22] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4 FROM user t0 WHERE t0.email = ? LIMIT 1 ["tp@gmail.com"] []
[2019-11-19 12:42:22] security.INFO: Guard authentication failed. {"exception":"[object] (Symfony\\Component\\Security\\Core\\Exception\\CustomUserMessageAuthenticationException(code: 0): Email could not be found. at /home/serandour/Couette_et_café_final/AgVoy/src/Security/LoginFormAuthenticator.php:71)","authenticator":"App\\Security\\LoginFormAuthenticator"} []
[2019-11-19 12:42:22] security.DEBUG: The "App\Security\LoginFormAuthenticator" authenticator set the response. Any later authenticator will not be called {"authenticator":"App\\Security\\LoginFormAuthenticator"} []
[2019-11-19 12:42:22] request.INFO: Matched route "app_login". {"route":"app_login","route_parameters":{"_route":"app_login","_controller":"App\\Controller\\SecurityController::login"},"request_uri":"http://127.0.0.1:8000/login","method":"GET"} []
[2019-11-19 12:42:22] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2019-11-19 12:42:22] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\LoginFormAuthenticator"} []
[2019-11-19 12:42:22] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\LoginFormAuthenticator"} []
[2019-11-19 12:42:22] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2019-11-19 12:42:27] request.INFO: Matched route "app_login". {"route":"app_login","route_parameters":{"_route":"app_login","_controller":"App\\Controller\\SecurityController::login"},"request_uri":"http://127.0.0.1:8000/login","method":"POST"} []
[2019-11-19 12:42:27] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2019-11-19 12:42:27] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\LoginFormAuthenticator"} []
[2019-11-19 12:42:27] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\LoginFormAuthenticator"} []
[2019-11-19 12:42:27] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"main","authenticator":"App\\Security\\LoginFormAuthenticator"} []
[2019-11-19 12:42:27] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4 FROM user t0 WHERE t0.email = ? LIMIT 1 ["tp@gmail.com"] []
[2019-11-19 12:42:27] security.INFO: Guard authentication failed. {"exception":"[object] (Symfony\\Component\\Security\\Core\\Exception\\CustomUserMessageAuthenticationException(code: 0): Email could not be found. at /home/serandour/Couette_et_café_final/AgVoy/src/Security/LoginFormAuthenticator.php:71)","authenticator":"App\\Security\\LoginFormAuthenticator"} []
[2019-11-19 12:42:27] security.DEBUG: The "App\Security\LoginFormAuthenticator" authenticator set the response. Any later authenticator will not be called {"authenticator":"App\\Security\\LoginFormAuthenticator"} []
[2019-11-19 12:42:27] request.INFO: Matched route "app_login". {"route":"app_login","route_parameters":{"_route":"app_login","_controller":"App\\Controller\\SecurityController::login"},"request_uri":"http://127.0.0.1:8000/login","method":"GET"} []
[2019-11-19 12:42:27] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2019-11-19 12:42:27] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\LoginFormAuthenticator"} []
[2019-11-19 12:42:27] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\LoginFormAuthenticator"} []
[2019-11-19 12:42:27] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2019-11-19 12:42:35] request.INFO: Matched route "app_register". {"route":"app_register","route_parameters":{"_route":"app_register","_controller":"App\\Controller\\RegistrationController::register"},"request_uri":"http://127.0.0.1:8000/register","method":"GET"} []
[2019-11-19 12:42:35] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2019-11-19 12:42:35] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\LoginFormAuthenticator"} []
[2019-11-19 12:42:35] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\LoginFormAuthenticator"} []
[2019-11-19 12:42:35] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2019-11-19 12:42:51] request.INFO: Matched route "app_register". {"route":"app_register","route_parameters":{"_route":"app_register","_controller":"App\\Controller\\RegistrationController::register"},"request_uri":"http://127.0.0.1:8000/register","method":"POST"} []
[2019-11-19 12:42:51] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2019-11-19 12:42:51] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\LoginFormAuthenticator"} []
[2019-11-19 12:42:51] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\LoginFormAuthenticator"} []
[2019-11-19 12:42:51] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2019-11-19 12:42:51] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4 FROM user t0 WHERE t0.email = ? ["tp@gmail.com"] []
[2019-11-19 12:42:51] doctrine.DEBUG: "START TRANSACTION" [] []
[2019-11-19 12:42:51] doctrine.DEBUG: INSERT INTO user (email, roles, password) VALUES (?, ?, ?) {"1":"tp@gmail.com","2":[],"3":"$argon2id$v=19$m=65536,t=4 [...]"} []
[2019-11-19 12:42:51] doctrine.DEBUG: "COMMIT" [] []
[2019-11-19 12:42:51] security.DEBUG: Stored the security token in the session. {"key":"_security_main"} []
[2019-11-19 12:42:51] request.INFO: Matched route "region_index". {"route":"region_index","route_parameters":{"_route":"region_index","_controller":"App\\Controller\\BackofficeRegionController::index"},"request_uri":"http://127.0.0.1:8000/backoffice/region/","method":"GET"} []
[2019-11-19 12:42:51] security.DEBUG: Read existing security token from the session. {"key":"_security_main","token_class":"Symfony\\Component\\Security\\Guard\\Token\\PostAuthenticationGuardToken"} []
[2019-11-19 12:42:51] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4 FROM user t0 WHERE t0.id = ? [1] []
[2019-11-19 12:42:51] security.DEBUG: User was reloaded from a user provider. {"provider":"Symfony\\Bridge\\Doctrine\\Security\\User\\EntityUserProvider","username":"tp@gmail.com"} []
[2019-11-19 12:42:51] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2019-11-19 12:42:51] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\LoginFormAuthenticator"} []
[2019-11-19 12:42:51] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\LoginFormAuthenticator"} []
[2019-11-19 12:42:51] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.presentation AS presentation_3, t0.country AS country_4 FROM region t0 [] []
[2019-11-19 12:42:51] security.DEBUG: Stored the security token in the session. {"key":"_security_main"} []
[2019-11-19 12:42:56] request.ERROR: Uncaught PHP Exception Symfony\Component\HttpKernel\Exception\NotFoundHttpException: "No route found for "GET /backoffice/login"" at /home/serandour/Couette_et_café_final/AgVoy/vendor/symfony/http-kernel/EventListener/RouterListener.php line 138 {"exception":"[object] (Symfony\\Component\\HttpKernel\\Exception\\NotFoundHttpException(code: 0): No route found for \"GET /backoffice/login\" at /home/serandour/Couette_et_café_final/AgVoy/vendor/symfony/http-kernel/EventListener/RouterListener.php:138, Symfony\\Component\\Routing\\Exception\\ResourceNotFoundException(code: 0): No routes found for \"/backoffice/login/\". at /home/serandour/Couette_et_café_final/AgVoy/vendor/symfony/routing/Matcher/Dumper/CompiledUrlMatcherTrait.php:70)"} []
[2019-11-19 12:43:00] request.INFO: Matched route "app_login". {"route":"app_login","route_parameters":{"_route":"app_login","_controller":"App\\Controller\\SecurityController::login"},"request_uri":"http://127.0.0.1:8000/login","method":"GET"} []
[2019-11-19 12:43:00] security.DEBUG: Read existing security token from the session. {"key":"_security_main","token_class":"Symfony\\Component\\Security\\Guard\\Token\\PostAuthenticationGuardToken"} []
[2019-11-19 12:43:00] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4 FROM user t0 WHERE t0.id = ? [1] []
[2019-11-19 12:43:00] security.DEBUG: User was reloaded from a user provider. {"provider":"Symfony\\Bridge\\Doctrine\\Security\\User\\EntityUserProvider","username":"tp@gmail.com"} []
[2019-11-19 12:43:00] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2019-11-19 12:43:00] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\LoginFormAuthenticator"} []
[2019-11-19 12:43:00] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\LoginFormAuthenticator"} []
[2019-11-19 12:43:00] security.DEBUG: Stored the security token in the session. {"key":"_security_main"} []
[2019-11-19 12:43:03] request.INFO: Matched route "app_login". {"route":"app_login","route_parameters":{"_route":"app_login","_controller":"App\\Controller\\SecurityController::login"},"request_uri":"http://127.0.0.1:8000/login","method":"POST"} []
[2019-11-19 12:43:03] security.DEBUG: Read existing security token from the session. {"key":"_security_main","token_class":"Symfony\\Component\\Security\\Guard\\Token\\PostAuthenticationGuardToken"} []
[2019-11-19 12:43:03] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4 FROM user t0 WHERE t0.id = ? [1] []
[2019-11-19 12:43:03] security.DEBUG: User was reloaded from a user provider. {"provider":"Symfony\\Bridge\\Doctrine\\Security\\User\\EntityUserProvider","username":"tp@gmail.com"} []
[2019-11-19 12:43:03] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2019-11-19 12:43:03] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\LoginFormAuthenticator"} []
[2019-11-19 12:43:03] security.DEBUG: Calling getCredentials() on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\LoginFormAuthenticator"} []
[2019-11-19 12:43:03] security.DEBUG: Passing guard token information to the GuardAuthenticationProvider {"firewall_key":"main","authenticator":"App\\Security\\LoginFormAuthenticator"} []
[2019-11-19 12:43:03] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4 FROM user t0 WHERE t0.email = ? LIMIT 1 ["tp@gmail.com"] []
[2019-11-19 12:43:04] security.INFO: Guard authentication successful! {"token":"[object] (Symfony\\Component\\Security\\Guard\\Token\\PostAuthenticationGuardToken: PostAuthenticationGuardToken(user=\"tp@gmail.com\", authenticated=true, roles=\"ROLE_USER\"))","authenticator":"App\\Security\\LoginFormAuthenticator"} []
[2019-11-19 12:43:04] security.DEBUG: Guard authenticator set success response. {"response":"[object] (Symfony\\Component\\HttpFoundation\\RedirectResponse: HTTP/1.0 302 Found\r\nCache-Control: no-cache, private\r\nDate:          Tue, 19 Nov 2019 11:43:04 GMT\r\nLocation:      /backoffice/region/\r\n\r\n<!DOCTYPE html>\n<html>\n    <head>\n        <meta charset=\"UTF-8\" />\n        <meta http-equiv=\"refresh\" content=\"0;url=/backoffice/region/\" />\n\n        <title>Redirecting to /backoffice/region/</title>\n    </head>\n    <body>\n        Redirecting to <a href=\"/backoffice/region/\">/backoffice/region/</a>.\n    </body>\n</html>)","authenticator":"App\\Security\\LoginFormAuthenticator"} []
[2019-11-19 12:43:04] security.DEBUG: Remember me skipped: it is not configured for the firewall. {"authenticator":"App\\Security\\LoginFormAuthenticator"} []
[2019-11-19 12:43:04] security.DEBUG: The "App\Security\LoginFormAuthenticator" authenticator set the response. Any later authenticator will not be called {"authenticator":"App\\Security\\LoginFormAuthenticator"} []
[2019-11-19 12:43:04] security.DEBUG: Stored the security token in the session. {"key":"_security_main"} []
[2019-11-19 12:43:04] request.INFO: Matched route "region_index". {"route":"region_index","route_parameters":{"_route":"region_index","_controller":"App\\Controller\\BackofficeRegionController::index"},"request_uri":"http://127.0.0.1:8000/backoffice/region/","method":"GET"} []
[2019-11-19 12:43:04] security.DEBUG: Read existing security token from the session. {"key":"_security_main","token_class":"Symfony\\Component\\Security\\Guard\\Token\\PostAuthenticationGuardToken"} []
[2019-11-19 12:43:04] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4 FROM user t0 WHERE t0.id = ? [1] []
[2019-11-19 12:43:04] security.DEBUG: User was reloaded from a user provider. {"provider":"Symfony\\Bridge\\Doctrine\\Security\\User\\EntityUserProvider","username":"tp@gmail.com"} []
[2019-11-19 12:43:04] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2019-11-19 12:43:04] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\LoginFormAuthenticator"} []
[2019-11-19 12:43:04] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\LoginFormAuthenticator"} []
[2019-11-19 12:43:04] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.presentation AS presentation_3, t0.country AS country_4 FROM region t0 [] []
[2019-11-19 12:43:04] security.DEBUG: Stored the security token in the session. {"key":"_security_main"} []
[2019-11-19 12:45:58] request.INFO: Matched route "region_index". {"route":"region_index","route_parameters":{"_route":"region_index","_controller":"App\\Controller\\BackofficeRegionController::index"},"request_uri":"http://127.0.0.1:8000/backoffice/region/","method":"GET"} []
[2019-11-19 12:45:58] security.DEBUG: Read existing security token from the session. {"key":"_security_main","token_class":"Symfony\\Component\\Security\\Guard\\Token\\PostAuthenticationGuardToken"} []
[2019-11-19 12:45:58] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4 FROM user t0 WHERE t0.id = ? [1] []
[2019-11-19 12:45:58] security.DEBUG: User was reloaded from a user provider. {"provider":"Symfony\\Bridge\\Doctrine\\Security\\User\\EntityUserProvider","username":"tp@gmail.com"} []
[2019-11-19 12:45:58] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2019-11-19 12:45:58] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\LoginFormAuthenticator"} []
[2019-11-19 12:45:58] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\LoginFormAuthenticator"} []
[2019-11-19 12:45:58] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.presentation AS presentation_3, t0.country AS country_4 FROM region t0 [] []
[2019-11-19 12:45:58] security.DEBUG: Stored the security token in the session. {"key":"_security_main"} []
[2019-11-19 12:46:02] request.INFO: Matched route "region_new". {"route":"region_new","route_parameters":{"_route":"region_new","_controller":"App\\Controller\\BackofficeRegionController::new"},"request_uri":"http://127.0.0.1:8000/backoffice/region/new","method":"GET"} []
[2019-11-19 12:46:02] security.DEBUG: Read existing security token from the session. {"key":"_security_main","token_class":"Symfony\\Component\\Security\\Guard\\Token\\PostAuthenticationGuardToken"} []
[2019-11-19 12:46:02] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4 FROM user t0 WHERE t0.id = ? [1] []
[2019-11-19 12:46:02] security.DEBUG: User was reloaded from a user provider. {"provider":"Symfony\\Bridge\\Doctrine\\Security\\User\\EntityUserProvider","username":"tp@gmail.com"} []
[2019-11-19 12:46:02] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2019-11-19 12:46:02] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\LoginFormAuthenticator"} []
[2019-11-19 12:46:02] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\LoginFormAuthenticator"} []
[2019-11-19 12:46:02] security.DEBUG: Stored the security token in the session. {"key":"_security_main"} []
[2019-11-19 12:46:17] request.INFO: Matched route "region_index". {"route":"region_index","route_parameters":{"_route":"region_index","_controller":"App\\Controller\\BackofficeRegionController::index"},"request_uri":"http://127.0.0.1:8000/backoffice/region/","method":"GET"} []
[2019-11-19 12:46:17] security.DEBUG: Read existing security token from the session. {"key":"_security_main","token_class":"Symfony\\Component\\Security\\Guard\\Token\\PostAuthenticationGuardToken"} []
[2019-11-19 12:46:17] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4 FROM user t0 WHERE t0.id = ? [1] []
[2019-11-19 12:46:17] security.DEBUG: User was reloaded from a user provider. {"provider":"Symfony\\Bridge\\Doctrine\\Security\\User\\EntityUserProvider","username":"tp@gmail.com"} []
[2019-11-19 12:46:17] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2019-11-19 12:46:17] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\LoginFormAuthenticator"} []
[2019-11-19 12:46:17] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\LoginFormAuthenticator"} []
[2019-11-19 12:46:17] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.presentation AS presentation_3, t0.country AS country_4 FROM region t0 [] []
[2019-11-19 12:46:17] security.DEBUG: Stored the security token in the session. {"key":"_security_main"} []
[2019-11-19 12:46:32] request.INFO: Matched route "room_index". {"route":"room_index","route_parameters":{"_route":"room_index","_controller":"App\\Controller\\OwnerRoomController::index"},"request_uri":"http://127.0.0.1:8000/_owner/room/","method":"GET"} []
[2019-11-19 12:46:32] security.DEBUG: Read existing security token from the session. {"key":"_security_main","token_class":"Symfony\\Component\\Security\\Guard\\Token\\PostAuthenticationGuardToken"} []
[2019-11-19 12:46:32] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4 FROM user t0 WHERE t0.id = ? [1] []
[2019-11-19 12:46:32] security.DEBUG: User was reloaded from a user provider. {"provider":"Symfony\\Bridge\\Doctrine\\Security\\User\\EntityUserProvider","username":"tp@gmail.com"} []
[2019-11-19 12:46:32] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2019-11-19 12:46:32] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\LoginFormAuthenticator"} []
[2019-11-19 12:46:32] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\LoginFormAuthenticator"} []
[2019-11-19 12:46:32] doctrine.DEBUG: SELECT t0.id AS id_1, t0.summary AS summary_2, t0.description AS description_3, t0.capacity AS capacity_4, t0.superficy AS superficy_5, t0.price AS price_6, t0.address AS address_7, t0.region_id AS region_id_8, t0.owner_id AS owner_id_9 FROM room t0 [] []
[2019-11-19 12:46:32] security.DEBUG: Stored the security token in the session. {"key":"_security_main"} []
[2019-11-19 12:46:34] request.INFO: Matched route "room_new". {"route":"room_new","route_parameters":{"_route":"room_new","_controller":"App\\Controller\\OwnerRoomController::new"},"request_uri":"http://127.0.0.1:8000/_owner/room/new","method":"GET"} []
[2019-11-19 12:46:34] security.DEBUG: Read existing security token from the session. {"key":"_security_main","token_class":"Symfony\\Component\\Security\\Guard\\Token\\PostAuthenticationGuardToken"} []
[2019-11-19 12:46:34] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4 FROM user t0 WHERE t0.id = ? [1] []
[2019-11-19 12:46:34] security.DEBUG: User was reloaded from a user provider. {"provider":"Symfony\\Bridge\\Doctrine\\Security\\User\\EntityUserProvider","username":"tp@gmail.com"} []
[2019-11-19 12:46:34] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2019-11-19 12:46:34] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\LoginFormAuthenticator"} []
[2019-11-19 12:46:34] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\LoginFormAuthenticator"} []
[2019-11-19 12:46:34] doctrine.DEBUG: SELECT r0_.id AS id_0, r0_.name AS name_1, r0_.presentation AS presentation_2, r0_.country AS country_3 FROM region r0_ [] []
[2019-11-19 12:46:34] doctrine.DEBUG: SELECT o0_.id AS id_0, o0_.firstname AS firstname_1, o0_.family_name AS family_name_2, o0_.address AS address_3, o0_.country AS country_4 FROM owner o0_ [] []
[2019-11-19 12:46:34] security.DEBUG: Stored the security token in the session. {"key":"_security_main"} []
[2019-11-19 12:47:14] request.INFO: Matched route "region_index". {"route":"region_index","route_parameters":{"_route":"region_index","_controller":"App\\Controller\\BackofficeRegionController::index"},"request_uri":"http://127.0.0.1:8000/backoffice/region/","method":"GET"} []
[2019-11-19 12:47:14] security.DEBUG: Read existing security token from the session. {"key":"_security_main","token_class":"Symfony\\Component\\Security\\Guard\\Token\\PostAuthenticationGuardToken"} []
[2019-11-19 12:47:14] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4 FROM user t0 WHERE t0.id = ? [1] []
[2019-11-19 12:47:14] security.DEBUG: User was reloaded from a user provider. {"provider":"Symfony\\Bridge\\Doctrine\\Security\\User\\EntityUserProvider","username":"tp@gmail.com"} []
[2019-11-19 12:47:14] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2019-11-19 12:47:14] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\LoginFormAuthenticator"} []
[2019-11-19 12:47:14] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\LoginFormAuthenticator"} []
[2019-11-19 12:47:14] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.presentation AS presentation_3, t0.country AS country_4 FROM region t0 [] []
[2019-11-19 12:47:14] security.DEBUG: Stored the security token in the session. {"key":"_security_main"} []
[2019-11-19 12:47:19] request.INFO: Matched route "region_new". {"route":"region_new","route_parameters":{"_route":"region_new","_controller":"App\\Controller\\BackofficeRegionController::new"},"request_uri":"http://127.0.0.1:8000/backoffice/region/new","method":"GET"} []
[2019-11-19 12:47:19] security.DEBUG: Read existing security token from the session. {"key":"_security_main","token_class":"Symfony\\Component\\Security\\Guard\\Token\\PostAuthenticationGuardToken"} []
[2019-11-19 12:47:19] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4 FROM user t0 WHERE t0.id = ? [1] []
[2019-11-19 12:47:19] security.DEBUG: User was reloaded from a user provider. {"provider":"Symfony\\Bridge\\Doctrine\\Security\\User\\EntityUserProvider","username":"tp@gmail.com"} []
[2019-11-19 12:47:19] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2019-11-19 12:47:19] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\LoginFormAuthenticator"} []
[2019-11-19 12:47:19] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\LoginFormAuthenticator"} []
[2019-11-19 12:47:19] security.DEBUG: Stored the security token in the session. {"key":"_security_main"} []
[2019-11-19 12:47:31] request.INFO: Matched route "room_index". {"route":"room_index","route_parameters":{"_route":"room_index","_controller":"App\\Controller\\OwnerRoomController::index"},"request_uri":"http://127.0.0.1:8000/_owner/room/","method":"GET"} []
[2019-11-19 12:47:31] security.DEBUG: Read existing security token from the session. {"key":"_security_main","token_class":"Symfony\\Component\\Security\\Guard\\Token\\PostAuthenticationGuardToken"} []
[2019-11-19 12:47:31] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4 FROM user t0 WHERE t0.id = ? [1] []
[2019-11-19 12:47:31] security.DEBUG: User was reloaded from a user provider. {"provider":"Symfony\\Bridge\\Doctrine\\Security\\User\\EntityUserProvider","username":"tp@gmail.com"} []
[2019-11-19 12:47:31] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2019-11-19 12:47:31] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\LoginFormAuthenticator"} []
[2019-11-19 12:47:31] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\LoginFormAuthenticator"} []
[2019-11-19 12:47:31] doctrine.DEBUG: SELECT t0.id AS id_1, t0.summary AS summary_2, t0.description AS description_3, t0.capacity AS capacity_4, t0.superficy AS superficy_5, t0.price AS price_6, t0.address AS address_7, t0.region_id AS region_id_8, t0.owner_id AS owner_id_9 FROM room t0 [] []
[2019-11-19 12:47:31] security.DEBUG: Stored the security token in the session. {"key":"_security_main"} []
[2019-11-19 12:47:32] request.INFO: Matched route "room_new". {"route":"room_new","route_parameters":{"_route":"room_new","_controller":"App\\Controller\\OwnerRoomController::new"},"request_uri":"http://127.0.0.1:8000/_owner/room/new","method":"GET"} []
[2019-11-19 12:47:32] security.DEBUG: Read existing security token from the session. {"key":"_security_main","token_class":"Symfony\\Component\\Security\\Guard\\Token\\PostAuthenticationGuardToken"} []
[2019-11-19 12:47:32] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4 FROM user t0 WHERE t0.id = ? [1] []
[2019-11-19 12:47:32] security.DEBUG: User was reloaded from a user provider. {"provider":"Symfony\\Bridge\\Doctrine\\Security\\User\\EntityUserProvider","username":"tp@gmail.com"} []
[2019-11-19 12:47:32] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2019-11-19 12:47:32] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\LoginFormAuthenticator"} []
[2019-11-19 12:47:32] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\LoginFormAuthenticator"} []
[2019-11-19 12:47:32] doctrine.DEBUG: SELECT r0_.id AS id_0, r0_.name AS name_1, r0_.presentation AS presentation_2, r0_.country AS country_3 FROM region r0_ [] []
[2019-11-19 12:47:32] doctrine.DEBUG: SELECT o0_.id AS id_0, o0_.firstname AS firstname_1, o0_.family_name AS family_name_2, o0_.address AS address_3, o0_.country AS country_4 FROM owner o0_ [] []
[2019-11-19 12:47:32] security.DEBUG: Stored the security token in the session. {"key":"_security_main"} []
[2019-11-19 12:47:46] request.INFO: Matched route "owner_index". {"route":"owner_index","route_parameters":{"_route":"owner_index","_controller":"App\\Controller\\OwnerController::index"},"request_uri":"http://127.0.0.1:8000/owner/","method":"GET"} []
[2019-11-19 12:47:46] security.DEBUG: Read existing security token from the session. {"key":"_security_main","token_class":"Symfony\\Component\\Security\\Guard\\Token\\PostAuthenticationGuardToken"} []
[2019-11-19 12:47:46] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4 FROM user t0 WHERE t0.id = ? [1] []
[2019-11-19 12:47:46] security.DEBUG: User was reloaded from a user provider. {"provider":"Symfony\\Bridge\\Doctrine\\Security\\User\\EntityUserProvider","username":"tp@gmail.com"} []
[2019-11-19 12:47:46] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2019-11-19 12:47:46] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\LoginFormAuthenticator"} []
[2019-11-19 12:47:46] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\LoginFormAuthenticator"} []
[2019-11-19 12:47:46] doctrine.DEBUG: SELECT t0.id AS id_1, t0.firstname AS firstname_2, t0.family_name AS family_name_3, t0.address AS address_4, t0.country AS country_5 FROM owner t0 [] []
[2019-11-19 12:47:46] security.DEBUG: Stored the security token in the session. {"key":"_security_main"} []
[2019-11-19 12:47:48] request.INFO: Matched route "owner_new". {"route":"owner_new","route_parameters":{"_route":"owner_new","_controller":"App\\Controller\\OwnerController::new"},"request_uri":"http://127.0.0.1:8000/owner/new","method":"GET"} []
[2019-11-19 12:47:48] security.DEBUG: Read existing security token from the session. {"key":"_security_main","token_class":"Symfony\\Component\\Security\\Guard\\Token\\PostAuthenticationGuardToken"} []
[2019-11-19 12:47:48] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4 FROM user t0 WHERE t0.id = ? [1] []
[2019-11-19 12:47:48] security.DEBUG: User was reloaded from a user provider. {"provider":"Symfony\\Bridge\\Doctrine\\Security\\User\\EntityUserProvider","username":"tp@gmail.com"} []
[2019-11-19 12:47:48] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2019-11-19 12:47:48] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\LoginFormAuthenticator"} []
[2019-11-19 12:47:48] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\LoginFormAuthenticator"} []
[2019-11-19 12:47:48] security.DEBUG: Stored the security token in the session. {"key":"_security_main"} []
[2019-11-19 12:47:53] request.INFO: Matched route "owner_index". {"route":"owner_index","route_parameters":{"_route":"owner_index","_controller":"App\\Controller\\OwnerController::index"},"request_uri":"http://127.0.0.1:8000/owner/","method":"GET"} []
[2019-11-19 12:47:53] security.DEBUG: Read existing security token from the session. {"key":"_security_main","token_class":"Symfony\\Component\\Security\\Guard\\Token\\PostAuthenticationGuardToken"} []
[2019-11-19 12:47:53] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4 FROM user t0 WHERE t0.id = ? [1] []
[2019-11-19 12:47:53] security.DEBUG: User was reloaded from a user provider. {"provider":"Symfony\\Bridge\\Doctrine\\Security\\User\\EntityUserProvider","username":"tp@gmail.com"} []
[2019-11-19 12:47:53] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2019-11-19 12:47:53] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\LoginFormAuthenticator"} []
[2019-11-19 12:47:53] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\LoginFormAuthenticator"} []
[2019-11-19 12:47:53] doctrine.DEBUG: SELECT t0.id AS id_1, t0.firstname AS firstname_2, t0.family_name AS family_name_3, t0.address AS address_4, t0.country AS country_5 FROM owner t0 [] []
[2019-11-19 12:47:53] security.DEBUG: Stored the security token in the session. {"key":"_security_main"} []
[2019-11-19 12:47:57] request.INFO: Matched route "reservation_index". {"route":"reservation_index","route_parameters":{"_route":"reservation_index","_controller":"App\\Controller\\ReservationController::index"},"request_uri":"http://127.0.0.1:8000/reservation/","method":"GET"} []
[2019-11-19 12:47:57] security.DEBUG: Read existing security token from the session. {"key":"_security_main","token_class":"Symfony\\Component\\Security\\Guard\\Token\\PostAuthenticationGuardToken"} []
[2019-11-19 12:47:57] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4 FROM user t0 WHERE t0.id = ? [1] []
[2019-11-19 12:47:57] security.DEBUG: User was reloaded from a user provider. {"provider":"Symfony\\Bridge\\Doctrine\\Security\\User\\EntityUserProvider","username":"tp@gmail.com"} []
[2019-11-19 12:47:57] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2019-11-19 12:47:57] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\LoginFormAuthenticator"} []
[2019-11-19 12:47:57] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\LoginFormAuthenticator"} []
[2019-11-19 12:47:57] doctrine.DEBUG: SELECT t0.id AS id_1, t0.begin_date AS begin_date_2, t0.end_date AS end_date_3, t0.confirmed AS confirmed_4, t0.client_id AS client_id_5, t0.room_id AS room_id_6 FROM reservation t0 [] []
[2019-11-19 12:47:57] security.DEBUG: Stored the security token in the session. {"key":"_security_main"} []
[2019-11-19 12:47:59] request.INFO: Matched route "reservation_new". {"route":"reservation_new","route_parameters":{"_route":"reservation_new","_controller":"App\\Controller\\ReservationController::new"},"request_uri":"http://127.0.0.1:8000/reservation/new","method":"GET"} []
[2019-11-19 12:47:59] security.DEBUG: Read existing security token from the session. {"key":"_security_main","token_class":"Symfony\\Component\\Security\\Guard\\Token\\PostAuthenticationGuardToken"} []
[2019-11-19 12:47:59] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4 FROM user t0 WHERE t0.id = ? [1] []
[2019-11-19 12:47:59] security.DEBUG: User was reloaded from a user provider. {"provider":"Symfony\\Bridge\\Doctrine\\Security\\User\\EntityUserProvider","username":"tp@gmail.com"} []
[2019-11-19 12:47:59] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2019-11-19 12:47:59] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\LoginFormAuthenticator"} []
[2019-11-19 12:47:59] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\LoginFormAuthenticator"} []
[2019-11-19 12:47:59] doctrine.DEBUG: SELECT c0_.id AS id_0, c0_.firstname AS firstname_1, c0_.family_name AS family_name_2, c0_.email AS email_3, c0_.gender AS gender_4, c0_.country AS country_5, c0_.phone_number AS phone_number_6 FROM client c0_ [] []
[2019-11-19 12:47:59] doctrine.DEBUG: SELECT r0_.id AS id_0, r0_.summary AS summary_1, r0_.description AS description_2, r0_.capacity AS capacity_3, r0_.superficy AS superficy_4, r0_.price AS price_5, r0_.address AS address_6, r0_.region_id AS region_id_7, r0_.owner_id AS owner_id_8 FROM room r0_ [] []
[2019-11-19 12:47:59] security.DEBUG: Stored the security token in the session. {"key":"_security_main"} []
[2019-11-19 12:49:36] request.INFO: Matched route "region_new". {"route":"region_new","route_parameters":{"_route":"region_new","_controller":"App\\Controller\\BackofficeRegionController::new"},"request_uri":"http://127.0.0.1:8000/backoffice/region/new","method":"GET"} []
[2019-11-19 12:49:36] security.DEBUG: Read existing security token from the session. {"key":"_security_main","token_class":"Symfony\\Component\\Security\\Guard\\Token\\PostAuthenticationGuardToken"} []
[2019-11-19 12:49:36] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4 FROM user t0 WHERE t0.id = ? [1] []
[2019-11-19 12:49:36] security.DEBUG: User was reloaded from a user provider. {"provider":"Symfony\\Bridge\\Doctrine\\Security\\User\\EntityUserProvider","username":"tp@gmail.com"} []
[2019-11-19 12:49:36] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2019-11-19 12:49:36] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\LoginFormAuthenticator"} []
[2019-11-19 12:49:36] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\LoginFormAuthenticator"} []
[2019-11-19 12:49:36] security.DEBUG: Stored the security token in the session. {"key":"_security_main"} []
[2019-11-19 12:49:41] request.INFO: Matched route "region_index". {"route":"region_index","route_parameters":{"_route":"region_index","_controller":"App\\Controller\\BackofficeRegionController::index"},"request_uri":"http://127.0.0.1:8000/backoffice/region/","method":"GET"} []
[2019-11-19 12:49:41] security.DEBUG: Read existing security token from the session. {"key":"_security_main","token_class":"Symfony\\Component\\Security\\Guard\\Token\\PostAuthenticationGuardToken"} []
[2019-11-19 12:49:41] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4 FROM user t0 WHERE t0.id = ? [1] []
[2019-11-19 12:49:41] security.DEBUG: User was reloaded from a user provider. {"provider":"Symfony\\Bridge\\Doctrine\\Security\\User\\EntityUserProvider","username":"tp@gmail.com"} []
[2019-11-19 12:49:41] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2019-11-19 12:49:41] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\LoginFormAuthenticator"} []
[2019-11-19 12:49:41] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\LoginFormAuthenticator"} []
[2019-11-19 12:49:41] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.presentation AS presentation_3, t0.country AS country_4 FROM region t0 [] []
[2019-11-19 12:49:41] security.DEBUG: Stored the security token in the session. {"key":"_security_main"} []
[2019-11-19 13:05:22] request.INFO: Matched route "region_index". {"route":"region_index","route_parameters":{"_route":"region_index","_controller":"App\\Controller\\BackofficeRegionController::index"},"request_uri":"http://127.0.0.1:8000/backoffice/region/","method":"GET"} []
[2019-11-19 13:05:22] security.DEBUG: Read existing security token from the session. {"key":"_security_main","token_class":"Symfony\\Component\\Security\\Guard\\Token\\PostAuthenticationGuardToken"} []
[2019-11-19 13:05:22] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4 FROM user t0 WHERE t0.id = ? [1] []
[2019-11-19 13:05:22] security.DEBUG: User was reloaded from a user provider. {"provider":"Symfony\\Bridge\\Doctrine\\Security\\User\\EntityUserProvider","username":"tp@gmail.com"} []
[2019-11-19 13:05:22] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2019-11-19 13:05:22] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\LoginFormAuthenticator"} []
[2019-11-19 13:05:22] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\LoginFormAuthenticator"} []
[2019-11-19 13:05:22] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.presentation AS presentation_3, t0.country AS country_4 FROM region t0 [] []
[2019-11-19 13:05:22] security.DEBUG: Stored the security token in the session. {"key":"_security_main"} []
[2019-11-19 13:05:23] request.INFO: Matched route "region_show". {"route":"region_show","route_parameters":{"_route":"region_show","_controller":"App\\Controller\\BackofficeRegionController::show","id":"1"},"request_uri":"http://127.0.0.1:8000/backoffice/region/1","method":"GET"} []
[2019-11-19 13:05:23] security.DEBUG: Read existing security token from the session. {"key":"_security_main","token_class":"Symfony\\Component\\Security\\Guard\\Token\\PostAuthenticationGuardToken"} []
[2019-11-19 13:05:23] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4 FROM user t0 WHERE t0.id = ? [1] []
[2019-11-19 13:05:23] security.DEBUG: User was reloaded from a user provider. {"provider":"Symfony\\Bridge\\Doctrine\\Security\\User\\EntityUserProvider","username":"tp@gmail.com"} []
[2019-11-19 13:05:23] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2019-11-19 13:05:23] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\LoginFormAuthenticator"} []
[2019-11-19 13:05:23] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\LoginFormAuthenticator"} []
[2019-11-19 13:05:23] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.presentation AS presentation_3, t0.country AS country_4 FROM region t0 WHERE t0.id = ? ["1"] []
[2019-11-19 13:05:23] doctrine.DEBUG: SELECT t0.id AS id_1, t0.summary AS summary_2, t0.description AS description_3, t0.capacity AS capacity_4, t0.superficy AS superficy_5, t0.price AS price_6, t0.address AS address_7, t0.region_id AS region_id_8, t0.owner_id AS owner_id_9 FROM room t0 WHERE t0.region_id = ? [1] []
[2019-11-19 13:05:23] security.DEBUG: Stored the security token in the session. {"key":"_security_main"} []
[2019-11-19 13:08:46] request.INFO: Matched route "region_index". {"route":"region_index","route_parameters":{"_route":"region_index","_controller":"App\\Controller\\BackofficeRegionController::index"},"request_uri":"http://127.0.0.1:8000/backoffice/region/","method":"GET"} []
[2019-11-19 13:08:46] security.DEBUG: Read existing security token from the session. {"key":"_security_main","token_class":"Symfony\\Component\\Security\\Guard\\Token\\PostAuthenticationGuardToken"} []
[2019-11-19 13:08:46] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4 FROM user t0 WHERE t0.id = ? [1] []
[2019-11-19 13:08:46] security.DEBUG: User was reloaded from a user provider. {"provider":"Symfony\\Bridge\\Doctrine\\Security\\User\\EntityUserProvider","username":"tp@gmail.com"} []
[2019-11-19 13:08:46] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2019-11-19 13:08:46] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\LoginFormAuthenticator"} []
[2019-11-19 13:08:46] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\LoginFormAuthenticator"} []
[2019-11-19 13:08:46] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.presentation AS presentation_3, t0.country AS country_4 FROM region t0 [] []
[2019-11-19 13:08:46] security.DEBUG: Stored the security token in the session. {"key":"_security_main"} []
[2019-11-19 13:08:50] request.INFO: Matched route "region_show". {"route":"region_show","route_parameters":{"_route":"region_show","_controller":"App\\Controller\\BackofficeRegionController::show","id":"1"},"request_uri":"http://127.0.0.1:8000/backoffice/region/1","method":"GET"} []
[2019-11-19 13:08:50] security.DEBUG: Read existing security token from the session. {"key":"_security_main","token_class":"Symfony\\Component\\Security\\Guard\\Token\\PostAuthenticationGuardToken"} []
[2019-11-19 13:08:50] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4 FROM user t0 WHERE t0.id = ? [1] []
[2019-11-19 13:08:50] security.DEBUG: User was reloaded from a user provider. {"provider":"Symfony\\Bridge\\Doctrine\\Security\\User\\EntityUserProvider","username":"tp@gmail.com"} []
[2019-11-19 13:08:50] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2019-11-19 13:08:50] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\LoginFormAuthenticator"} []
[2019-11-19 13:08:50] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\LoginFormAuthenticator"} []
[2019-11-19 13:08:50] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.presentation AS presentation_3, t0.country AS country_4 FROM region t0 WHERE t0.id = ? ["1"] []
[2019-11-19 13:08:50] doctrine.DEBUG: SELECT t0.id AS id_1, t0.summary AS summary_2, t0.description AS description_3, t0.capacity AS capacity_4, t0.superficy AS superficy_5, t0.price AS price_6, t0.address AS address_7, t0.region_id AS region_id_8, t0.owner_id AS owner_id_9 FROM room t0 WHERE t0.region_id = ? [1] []
[2019-11-19 13:08:50] security.DEBUG: Stored the security token in the session. {"key":"_security_main"} []
[2019-11-19 13:08:55] request.INFO: Matched route "region_show". {"route":"region_show","route_parameters":{"_route":"region_show","_controller":"App\\Controller\\BackofficeRegionController::show","id":"2"},"request_uri":"http://127.0.0.1:8000/backoffice/region/2","method":"GET"} []
[2019-11-19 13:08:55] security.DEBUG: Read existing security token from the session. {"key":"_security_main","token_class":"Symfony\\Component\\Security\\Guard\\Token\\PostAuthenticationGuardToken"} []
[2019-11-19 13:08:55] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4 FROM user t0 WHERE t0.id = ? [1] []
[2019-11-19 13:08:55] security.DEBUG: User was reloaded from a user provider. {"provider":"Symfony\\Bridge\\Doctrine\\Security\\User\\EntityUserProvider","username":"tp@gmail.com"} []
[2019-11-19 13:08:55] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2019-11-19 13:08:55] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\LoginFormAuthenticator"} []
[2019-11-19 13:08:55] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\LoginFormAuthenticator"} []
[2019-11-19 13:08:55] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.presentation AS presentation_3, t0.country AS country_4 FROM region t0 WHERE t0.id = ? ["2"] []
[2019-11-19 13:08:55] doctrine.DEBUG: SELECT t0.id AS id_1, t0.summary AS summary_2, t0.description AS description_3, t0.capacity AS capacity_4, t0.superficy AS superficy_5, t0.price AS price_6, t0.address AS address_7, t0.region_id AS region_id_8, t0.owner_id AS owner_id_9 FROM room t0 WHERE t0.region_id = ? [2] []
[2019-11-19 13:08:55] security.DEBUG: Stored the security token in the session. {"key":"_security_main"} []
[2019-11-19 13:08:57] request.INFO: Matched route "region_delete". {"route":"region_delete","route_parameters":{"_route":"region_delete","_controller":"App\\Controller\\BackofficeRegionController::delete","id":"2"},"request_uri":"http://127.0.0.1:8000/backoffice/region/2","method":"DELETE"} []
[2019-11-19 13:08:57] security.DEBUG: Read existing security token from the session. {"key":"_security_main","token_class":"Symfony\\Component\\Security\\Guard\\Token\\PostAuthenticationGuardToken"} []
[2019-11-19 13:08:57] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4 FROM user t0 WHERE t0.id = ? [1] []
[2019-11-19 13:08:57] security.DEBUG: User was reloaded from a user provider. {"provider":"Symfony\\Bridge\\Doctrine\\Security\\User\\EntityUserProvider","username":"tp@gmail.com"} []
[2019-11-19 13:08:57] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2019-11-19 13:08:57] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\LoginFormAuthenticator"} []
[2019-11-19 13:08:57] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\LoginFormAuthenticator"} []
[2019-11-19 13:08:57] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.presentation AS presentation_3, t0.country AS country_4 FROM region t0 WHERE t0.id = ? ["2"] []
[2019-11-19 13:08:57] doctrine.DEBUG: "START TRANSACTION" [] []
[2019-11-19 13:08:57] doctrine.DEBUG: DELETE FROM region WHERE id = ? [2] []
[2019-11-19 13:08:57] doctrine.DEBUG: "COMMIT" [] []
[2019-11-19 13:08:57] security.DEBUG: Stored the security token in the session. {"key":"_security_main"} []
[2019-11-19 13:08:57] request.INFO: Matched route "region_index". {"route":"region_index","route_parameters":{"_route":"region_index","_controller":"App\\Controller\\BackofficeRegionController::index"},"request_uri":"http://127.0.0.1:8000/backoffice/region/","method":"GET"} []
[2019-11-19 13:08:57] security.DEBUG: Read existing security token from the session. {"key":"_security_main","token_class":"Symfony\\Component\\Security\\Guard\\Token\\PostAuthenticationGuardToken"} []
[2019-11-19 13:08:57] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4 FROM user t0 WHERE t0.id = ? [1] []
[2019-11-19 13:08:57] security.DEBUG: User was reloaded from a user provider. {"provider":"Symfony\\Bridge\\Doctrine\\Security\\User\\EntityUserProvider","username":"tp@gmail.com"} []
[2019-11-19 13:08:57] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2019-11-19 13:08:57] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\LoginFormAuthenticator"} []
[2019-11-19 13:08:57] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\LoginFormAuthenticator"} []
[2019-11-19 13:08:57] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.presentation AS presentation_3, t0.country AS country_4 FROM region t0 [] []
[2019-11-19 13:08:57] security.DEBUG: Stored the security token in the session. {"key":"_security_main"} []
[2019-11-19 13:10:51] request.INFO: Matched route "region_index". {"route":"region_index","route_parameters":{"_route":"region_index","_controller":"App\\Controller\\BackofficeRegionController::index"},"request_uri":"http://127.0.0.1:8000/backoffice/region/","method":"GET"} []
[2019-11-19 13:10:51] security.DEBUG: Read existing security token from the session. {"key":"_security_main","token_class":"Symfony\\Component\\Security\\Guard\\Token\\PostAuthenticationGuardToken"} []
[2019-11-19 13:10:51] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4 FROM user t0 WHERE t0.id = ? [1] []
[2019-11-19 13:10:51] security.DEBUG: User was reloaded from a user provider. {"provider":"Symfony\\Bridge\\Doctrine\\Security\\User\\EntityUserProvider","username":"tp@gmail.com"} []
[2019-11-19 13:10:51] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2019-11-19 13:10:51] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\LoginFormAuthenticator"} []
[2019-11-19 13:10:51] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\LoginFormAuthenticator"} []
[2019-11-19 13:10:51] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.presentation AS presentation_3, t0.country AS country_4 FROM region t0 [] []
[2019-11-19 13:10:51] security.DEBUG: Stored the security token in the session. {"key":"_security_main"} []
[2019-11-19 13:12:45] doctrine.DEBUG: "START TRANSACTION" [] []
[2019-11-19 13:12:45] doctrine.DEBUG: DELETE FROM reservation [] []
[2019-11-19 13:12:45] doctrine.DEBUG: DELETE FROM comment [] []
[2019-11-19 13:12:45] doctrine.DEBUG: DELETE FROM client [] []
[2019-11-19 13:12:45] doctrine.DEBUG: DELETE FROM unavailable_period [] []
[2019-11-19 13:12:45] doctrine.DEBUG: DELETE FROM room [] []
[2019-11-19 13:12:45] doctrine.DEBUG: DELETE FROM region [] []
[2019-11-19 13:12:45] doctrine.DEBUG: DELETE FROM user [] []
[2019-11-19 13:12:45] doctrine.DEBUG: DELETE FROM owner [] []
[2019-11-19 13:12:45] doctrine.DEBUG: INSERT INTO region (name, presentation, country) VALUES (?, ?, ?) {"1":"Bretagne","2":"La région des crêpes","3":"FR"} []
[2019-11-19 13:12:45] doctrine.DEBUG: "COMMIT" [] []
[2019-11-19 13:12:58] request.INFO: Matched route "region_index". {"route":"region_index","route_parameters":{"_route":"region_index","_controller":"App\\Controller\\BackofficeRegionController::index"},"request_uri":"http://127.0.0.1:8000/backoffice/region/","method":"GET"} []
[2019-11-19 13:12:58] security.DEBUG: Read existing security token from the session. {"key":"_security_main","token_class":"Symfony\\Component\\Security\\Guard\\Token\\PostAuthenticationGuardToken"} []
[2019-11-19 13:12:58] doctrine.DEBUG: SELECT t0.id AS id_1, t0.email AS email_2, t0.roles AS roles_3, t0.password AS password_4 FROM user t0 WHERE t0.id = ? [1] []
[2019-11-19 13:12:58] security.WARNING: Username could not be found in the selected user provider. {"username":null,"provider":"Symfony\\Bridge\\Doctrine\\Security\\User\\EntityUserProvider"} []
[2019-11-19 13:12:58] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2019-11-19 13:12:58] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\LoginFormAuthenticator"} []
[2019-11-19 13:12:58] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\LoginFormAuthenticator"} []
[2019-11-19 13:12:58] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2019-11-19 13:12:58] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.presentation AS presentation_3, t0.country AS country_4 FROM region t0 [] []
[2019-11-19 13:13:01] request.INFO: Matched route "region_new". {"route":"region_new","route_parameters":{"_route":"region_new","_controller":"App\\Controller\\BackofficeRegionController::new"},"request_uri":"http://127.0.0.1:8000/backoffice/region/new","method":"GET"} []
[2019-11-19 13:13:01] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2019-11-19 13:13:01] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\LoginFormAuthenticator"} []
[2019-11-19 13:13:01] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\LoginFormAuthenticator"} []
[2019-11-19 13:13:01] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2019-11-19 13:13:20] request.INFO: Matched route "region_new". {"route":"region_new","route_parameters":{"_route":"region_new","_controller":"App\\Controller\\BackofficeRegionController::new"},"request_uri":"http://127.0.0.1:8000/backoffice/region/new","method":"POST"} []
[2019-11-19 13:13:20] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2019-11-19 13:13:20] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\LoginFormAuthenticator"} []
[2019-11-19 13:13:20] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\LoginFormAuthenticator"} []
[2019-11-19 13:13:20] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2019-11-19 13:13:20] doctrine.DEBUG: "START TRANSACTION" [] []
[2019-11-19 13:13:20] doctrine.DEBUG: INSERT INTO region (name, presentation, country) VALUES (?, ?, ?) {"1":"Ile de France","2":"La région française capitale","3":"FR"} []
[2019-11-19 13:13:20] doctrine.DEBUG: "COMMIT" [] []
[2019-11-19 13:13:20] request.INFO: Matched route "region_index". {"route":"region_index","route_parameters":{"_route":"region_index","_controller":"App\\Controller\\BackofficeRegionController::index"},"request_uri":"http://127.0.0.1:8000/backoffice/region/","method":"GET"} []
[2019-11-19 13:13:20] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2019-11-19 13:13:20] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\LoginFormAuthenticator"} []
[2019-11-19 13:13:20] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\LoginFormAuthenticator"} []
[2019-11-19 13:13:20] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2019-11-19 13:13:20] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.presentation AS presentation_3, t0.country AS country_4 FROM region t0 [] []
[2019-11-19 13:14:06] request.INFO: Matched route "region_index". {"route":"region_index","route_parameters":{"_route":"region_index","_controller":"App\\Controller\\BackofficeRegionController::index"},"request_uri":"http://127.0.0.1:8000/backoffice/region/","method":"GET"} []
[2019-11-19 13:14:06] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2019-11-19 13:14:06] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\LoginFormAuthenticator"} []
[2019-11-19 13:14:06] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\LoginFormAuthenticator"} []
[2019-11-19 13:14:06] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2019-11-19 13:14:06] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.presentation AS presentation_3, t0.country AS country_4 FROM region t0 [] []
[2019-11-19 13:14:07] request.INFO: Matched route "region_index". {"route":"region_index","route_parameters":{"_route":"region_index","_controller":"App\\Controller\\BackofficeRegionController::index"},"request_uri":"http://127.0.0.1:8000/backoffice/region/","method":"GET"} []
[2019-11-19 13:14:07] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2019-11-19 13:14:07] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\LoginFormAuthenticator"} []
[2019-11-19 13:14:07] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\LoginFormAuthenticator"} []
[2019-11-19 13:14:07] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2019-11-19 13:14:07] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.presentation AS presentation_3, t0.country AS country_4 FROM region t0 [] []
[2019-11-19 13:14:08] request.INFO: Matched route "region_index". {"route":"region_index","route_parameters":{"_route":"region_index","_controller":"App\\Controller\\BackofficeRegionController::index"},"request_uri":"http://127.0.0.1:8000/backoffice/region/","method":"GET"} []
[2019-11-19 13:14:08] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2019-11-19 13:14:08] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\LoginFormAuthenticator"} []
[2019-11-19 13:14:08] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\LoginFormAuthenticator"} []
[2019-11-19 13:14:08] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2019-11-19 13:14:08] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.presentation AS presentation_3, t0.country AS country_4 FROM region t0 [] []
[2019-11-19 13:14:10] request.INFO: Matched route "region_index". {"route":"region_index","route_parameters":{"_route":"region_index","_controller":"App\\Controller\\BackofficeRegionController::index"},"request_uri":"http://127.0.0.1:8000/backoffice/region/","method":"GET"} []
[2019-11-19 13:14:10] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2019-11-19 13:14:10] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\LoginFormAuthenticator"} []
[2019-11-19 13:14:10] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\LoginFormAuthenticator"} []
[2019-11-19 13:14:10] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2019-11-19 13:14:10] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.presentation AS presentation_3, t0.country AS country_4 FROM region t0 [] []
[2019-11-19 13:14:10] request.INFO: Matched route "region_index". {"route":"region_index","route_parameters":{"_route":"region_index","_controller":"App\\Controller\\BackofficeRegionController::index"},"request_uri":"http://127.0.0.1:8000/backoffice/region/","method":"GET"} []
[2019-11-19 13:14:10] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2019-11-19 13:14:10] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\LoginFormAuthenticator"} []
[2019-11-19 13:14:10] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\LoginFormAuthenticator"} []
[2019-11-19 13:14:10] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2019-11-19 13:14:10] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.presentation AS presentation_3, t0.country AS country_4 FROM region t0 [] []
[2019-11-19 13:14:29] request.INFO: Matched route "region_index". {"route":"region_index","route_parameters":{"_route":"region_index","_controller":"App\\Controller\\BackofficeRegionController::index"},"request_uri":"http://127.0.0.1:8000/backoffice/region/","method":"GET"} []
[2019-11-19 13:14:29] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2019-11-19 13:14:29] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\LoginFormAuthenticator"} []
[2019-11-19 13:14:29] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\LoginFormAuthenticator"} []
[2019-11-19 13:14:29] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2019-11-19 13:14:29] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.presentation AS presentation_3, t0.country AS country_4 FROM region t0 [] []
[2019-11-19 13:14:30] request.INFO: Matched route "region_show". {"route":"region_show","route_parameters":{"_route":"region_show","_controller":"App\\Controller\\BackofficeRegionController::show","id":"3"},"request_uri":"http://127.0.0.1:8000/backoffice/region/3","method":"GET"} []
[2019-11-19 13:14:30] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2019-11-19 13:14:30] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\LoginFormAuthenticator"} []
[2019-11-19 13:14:30] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\LoginFormAuthenticator"} []
[2019-11-19 13:14:30] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2019-11-19 13:14:30] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.presentation AS presentation_3, t0.country AS country_4 FROM region t0 WHERE t0.id = ? ["3"] []
[2019-11-19 13:14:30] doctrine.DEBUG: SELECT t0.id AS id_1, t0.summary AS summary_2, t0.description AS description_3, t0.capacity AS capacity_4, t0.superficy AS superficy_5, t0.price AS price_6, t0.address AS address_7, t0.region_id AS region_id_8, t0.owner_id AS owner_id_9 FROM room t0 WHERE t0.region_id = ? [3] []
[2019-11-19 13:14:40] request.INFO: Matched route "owner_index". {"route":"owner_index","route_parameters":{"_route":"owner_index","_controller":"App\\Controller\\OwnerController::index"},"request_uri":"http://127.0.0.1:8000/owner/","method":"GET"} []
[2019-11-19 13:14:40] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2019-11-19 13:14:40] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\LoginFormAuthenticator"} []
[2019-11-19 13:14:40] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\LoginFormAuthenticator"} []
[2019-11-19 13:14:40] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2019-11-19 13:14:40] doctrine.DEBUG: SELECT t0.id AS id_1, t0.firstname AS firstname_2, t0.family_name AS family_name_3, t0.address AS address_4, t0.country AS country_5 FROM owner t0 [] []
[2019-11-19 13:14:41] request.INFO: Matched route "owner_new". {"route":"owner_new","route_parameters":{"_route":"owner_new","_controller":"App\\Controller\\OwnerController::new"},"request_uri":"http://127.0.0.1:8000/owner/new","method":"GET"} []
[2019-11-19 13:14:41] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2019-11-19 13:14:41] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\LoginFormAuthenticator"} []
[2019-11-19 13:14:41] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\LoginFormAuthenticator"} []
[2019-11-19 13:14:41] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2019-11-19 13:15:10] request.INFO: Matched route "owner_new". {"route":"owner_new","route_parameters":{"_route":"owner_new","_controller":"App\\Controller\\OwnerController::new"},"request_uri":"http://127.0.0.1:8000/owner/new","method":"POST"} []
[2019-11-19 13:15:10] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2019-11-19 13:15:10] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\LoginFormAuthenticator"} []
[2019-11-19 13:15:10] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\LoginFormAuthenticator"} []
[2019-11-19 13:15:10] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2019-11-19 13:15:10] doctrine.DEBUG: "START TRANSACTION" [] []
[2019-11-19 13:15:10] doctrine.DEBUG: INSERT INTO owner (firstname, family_name, address, country) VALUES (?, ?, ?, ?) {"1":"Albert","2":"Martin","3":"52 avenue du pont levis","4":"FR"} []
[2019-11-19 13:15:10] doctrine.DEBUG: "COMMIT" [] []
[2019-11-19 13:15:10] request.INFO: Matched route "owner_index". {"route":"owner_index","route_parameters":{"_route":"owner_index","_controller":"App\\Controller\\OwnerController::index"},"request_uri":"http://127.0.0.1:8000/owner/","method":"GET"} []
[2019-11-19 13:15:10] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2019-11-19 13:15:10] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\LoginFormAuthenticator"} []
[2019-11-19 13:15:10] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\LoginFormAuthenticator"} []
[2019-11-19 13:15:10] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2019-11-19 13:15:10] doctrine.DEBUG: SELECT t0.id AS id_1, t0.firstname AS firstname_2, t0.family_name AS family_name_3, t0.address AS address_4, t0.country AS country_5 FROM owner t0 [] []
[2019-11-19 13:15:20] request.INFO: Matched route "room_index". {"route":"room_index","route_parameters":{"_route":"room_index","_controller":"App\\Controller\\OwnerRoomController::index"},"request_uri":"http://127.0.0.1:8000/_owner/room/","method":"GET"} []
[2019-11-19 13:15:20] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2019-11-19 13:15:20] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\LoginFormAuthenticator"} []
[2019-11-19 13:15:20] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\LoginFormAuthenticator"} []
[2019-11-19 13:15:20] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2019-11-19 13:15:20] doctrine.DEBUG: SELECT t0.id AS id_1, t0.summary AS summary_2, t0.description AS description_3, t0.capacity AS capacity_4, t0.superficy AS superficy_5, t0.price AS price_6, t0.address AS address_7, t0.region_id AS region_id_8, t0.owner_id AS owner_id_9 FROM room t0 [] []
[2019-11-19 13:15:22] request.INFO: Matched route "room_new". {"route":"room_new","route_parameters":{"_route":"room_new","_controller":"App\\Controller\\OwnerRoomController::new"},"request_uri":"http://127.0.0.1:8000/_owner/room/new","method":"GET"} []
[2019-11-19 13:15:22] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2019-11-19 13:15:22] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\LoginFormAuthenticator"} []
[2019-11-19 13:15:22] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\LoginFormAuthenticator"} []
[2019-11-19 13:15:22] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2019-11-19 13:15:22] doctrine.DEBUG: SELECT r0_.id AS id_0, r0_.name AS name_1, r0_.presentation AS presentation_2, r0_.country AS country_3 FROM region r0_ [] []
[2019-11-19 13:15:22] doctrine.DEBUG: SELECT o0_.id AS id_0, o0_.firstname AS firstname_1, o0_.family_name AS family_name_2, o0_.address AS address_3, o0_.country AS country_4 FROM owner o0_ [] []
[2019-11-19 13:15:56] request.INFO: Matched route "room_new". {"route":"room_new","route_parameters":{"_route":"room_new","_controller":"App\\Controller\\OwnerRoomController::new"},"request_uri":"http://127.0.0.1:8000/_owner/room/new","method":"POST"} []
[2019-11-19 13:15:56] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2019-11-19 13:15:56] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\LoginFormAuthenticator"} []
[2019-11-19 13:15:56] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\LoginFormAuthenticator"} []
[2019-11-19 13:15:56] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2019-11-19 13:15:56] doctrine.DEBUG: SELECT r0_.id AS id_0, r0_.name AS name_1, r0_.presentation AS presentation_2, r0_.country AS country_3 FROM region r0_ WHERE r0_.id IN (?) [["4"]] []
[2019-11-19 13:15:56] doctrine.DEBUG: SELECT o0_.id AS id_0, o0_.firstname AS firstname_1, o0_.family_name AS family_name_2, o0_.address AS address_3, o0_.country AS country_4 FROM owner o0_ WHERE o0_.id IN (?) [["2"]] []
[2019-11-19 13:15:56] doctrine.DEBUG: "START TRANSACTION" [] []
[2019-11-19 13:15:56] doctrine.DEBUG: INSERT INTO room (summary, description, capacity, superficy, price, address, region_id, owner_id) VALUES (?, ?, ?, ?, ?, ?, ?, ?) {"1":"Beau poulailler ancien à Évry","2":"très joli espace sur paille","3":4,"4":1000,"5":500,"6":"52 avenue du pont levis","7":4,"8":2} []
[2019-11-19 13:15:56] doctrine.DEBUG: "COMMIT" [] []
[2019-11-19 13:15:56] request.INFO: Matched route "room_index". {"route":"room_index","route_parameters":{"_route":"room_index","_controller":"App\\Controller\\OwnerRoomController::index"},"request_uri":"http://127.0.0.1:8000/_owner/room/","method":"GET"} []
[2019-11-19 13:15:56] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2019-11-19 13:15:56] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\LoginFormAuthenticator"} []
[2019-11-19 13:15:56] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\LoginFormAuthenticator"} []
[2019-11-19 13:15:56] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2019-11-19 13:15:56] doctrine.DEBUG: SELECT t0.id AS id_1, t0.summary AS summary_2, t0.description AS description_3, t0.capacity AS capacity_4, t0.superficy AS superficy_5, t0.price AS price_6, t0.address AS address_7, t0.region_id AS region_id_8, t0.owner_id AS owner_id_9 FROM room t0 [] []
[2019-11-19 13:16:25] request.INFO: Matched route "room_index". {"route":"room_index","route_parameters":{"_route":"room_index","_controller":"App\\Controller\\OwnerRoomController::index"},"request_uri":"http://127.0.0.1:8000/_owner/room/","method":"GET"} []
[2019-11-19 13:16:25] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2019-11-19 13:16:25] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\LoginFormAuthenticator"} []
[2019-11-19 13:16:25] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\LoginFormAuthenticator"} []
[2019-11-19 13:16:25] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2019-11-19 13:16:25] doctrine.DEBUG: SELECT t0.id AS id_1, t0.summary AS summary_2, t0.description AS description_3, t0.capacity AS capacity_4, t0.superficy AS superficy_5, t0.price AS price_6, t0.address AS address_7, t0.region_id AS region_id_8, t0.owner_id AS owner_id_9 FROM room t0 [] []
[2019-11-19 13:16:27] request.INFO: Matched route "room_show". {"route":"room_show","route_parameters":{"_route":"room_show","_controller":"App\\Controller\\OwnerRoomController::show","id":"2"},"request_uri":"http://127.0.0.1:8000/_owner/room/2","method":"GET"} []
[2019-11-19 13:16:27] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2019-11-19 13:16:27] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\LoginFormAuthenticator"} []
[2019-11-19 13:16:27] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\LoginFormAuthenticator"} []
[2019-11-19 13:16:27] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2019-11-19 13:16:27] doctrine.DEBUG: SELECT t0.id AS id_1, t0.summary AS summary_2, t0.description AS description_3, t0.capacity AS capacity_4, t0.superficy AS superficy_5, t0.price AS price_6, t0.address AS address_7, t0.region_id AS region_id_8, t0.owner_id AS owner_id_9 FROM room t0 WHERE t0.id = ? ["2"] []
[2019-11-19 13:16:27] doctrine.DEBUG: SELECT t0.id AS id_1, t0.name AS name_2, t0.presentation AS presentation_3, t0.country AS country_4 FROM region t0 WHERE t0.id = ? [4] []
[2019-11-19 13:16:30] request.INFO: Matched route "room_index". {"route":"room_index","route_parameters":{"_route":"room_index","_controller":"App\\Controller\\OwnerRoomController::index"},"request_uri":"http://127.0.0.1:8000/_owner/room/","method":"GET"} []
[2019-11-19 13:16:30] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2019-11-19 13:16:30] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\LoginFormAuthenticator"} []
[2019-11-19 13:16:30] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\LoginFormAuthenticator"} []
[2019-11-19 13:16:30] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2019-11-19 13:16:30] doctrine.DEBUG: SELECT t0.id AS id_1, t0.summary AS summary_2, t0.description AS description_3, t0.capacity AS capacity_4, t0.superficy AS superficy_5, t0.price AS price_6, t0.address AS address_7, t0.region_id AS region_id_8, t0.owner_id AS owner_id_9 FROM room t0 [] []
[2019-11-19 13:16:35] request.INFO: Matched route "owner_index". {"route":"owner_index","route_parameters":{"_route":"owner_index","_controller":"App\\Controller\\OwnerController::index"},"request_uri":"http://127.0.0.1:8000/owner/","method":"GET"} []
[2019-11-19 13:16:35] request.CRITICAL: Uncaught PHP Exception ErrorException: "Notice: SessionHandler::gc(): ps_files_cleanup_dir: opendir(/var/lib/php/sessions) failed: Permission denied (13)" at /home/serandour/Couette_et_café_final/AgVoy/vendor/symfony/http-foundation/Session/Storage/Handler/StrictSessionHandler.php line 101 {"exception":"[object] (ErrorException(code: 0): Notice: SessionHandler::gc(): ps_files_cleanup_dir: opendir(/var/lib/php/sessions) failed: Permission denied (13) at /home/serandour/Couette_et_café_final/AgVoy/vendor/symfony/http-foundation/Session/Storage/Handler/StrictSessionHandler.php:101)"} []
[2019-11-19 13:16:45] request.INFO: Matched route "owner_index". {"route":"owner_index","route_parameters":{"_route":"owner_index","_controller":"App\\Controller\\OwnerController::index"},"request_uri":"http://127.0.0.1:8000/owner/","method":"GET"} []
[2019-11-19 13:16:45] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2019-11-19 13:16:45] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\LoginFormAuthenticator"} []
[2019-11-19 13:16:45] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\LoginFormAuthenticator"} []
[2019-11-19 13:16:45] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2019-11-19 13:16:45] doctrine.DEBUG: SELECT t0.id AS id_1, t0.firstname AS firstname_2, t0.family_name AS family_name_3, t0.address AS address_4, t0.country AS country_5 FROM owner t0 [] []
[2019-11-19 13:17:08] request.INFO: Matched route "owner_index". {"route":"owner_index","route_parameters":{"_route":"owner_index","_controller":"App\\Controller\\OwnerController::index"},"request_uri":"http://127.0.0.1:8000/owner/","method":"GET"} []
[2019-11-19 13:17:08] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2019-11-19 13:17:08] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\LoginFormAuthenticator"} []
[2019-11-19 13:17:08] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\LoginFormAuthenticator"} []
[2019-11-19 13:17:08] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2019-11-19 13:17:08] doctrine.DEBUG: SELECT t0.id AS id_1, t0.firstname AS firstname_2, t0.family_name AS family_name_3, t0.address AS address_4, t0.country AS country_5 FROM owner t0 [] []
[2019-11-19 13:17:09] request.INFO: Matched route "owner_show". {"route":"owner_show","route_parameters":{"_route":"owner_show","_controller":"App\\Controller\\OwnerController::show","id":"2"},"request_uri":"http://127.0.0.1:8000/owner/2","method":"GET"} []
[2019-11-19 13:17:09] security.DEBUG: Checking for guard authentication credentials. {"firewall_key":"main","authenticators":1} []
[2019-11-19 13:17:09] security.DEBUG: Checking support on guard authenticator. {"firewall_key":"main","authenticator":"App\\Security\\LoginFormAuthenticator"} []
[2019-11-19 13:17:09] security.DEBUG: Guard authenticator does not support the request. {"firewall_key":"main","authenticator":"App\\Security\\LoginFormAuthenticator"} []
[2019-11-19 13:17:09] security.INFO: Populated the TokenStorage with an anonymous Token. [] []
[2019-11-19 13:17:09] doctrine.DEBUG: SELECT t0.id AS id_1, t0.firstname AS firstname_2, t0.family_name AS family_name_3, t0.address AS address_4, t0.country AS country_5 FROM owner t0 WHERE t0.id = ? ["2"] []
